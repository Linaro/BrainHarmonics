<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_dimension" kind="class" language="C++" prot="public">
    <compoundname>Dimension</compoundname>
    <basecompoundref refid="class_universe" prot="public" virt="non-virtual">Universe</basecompoundref>
    <includes refid="dimension_8h" local="no">dimension.h</includes>
    <innerclass refid="struct_dimension_1_1_counter_adjustment" prot="public">Dimension::CounterAdjustment</innerclass>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="class_dimension_1ad04bbaef84caa0d408ec09a1c1302f5f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CognitiveNetwork</definition>
        <argsstring></argsstring>
        <name>CognitiveNetwork</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="26" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a1dacbeca8e464bdc533a40a1b18f33b2" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CompositeForce</definition>
        <argsstring></argsstring>
        <name>CompositeForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="27" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a8be5cf46db5f9876c49d58e4ab84044b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class CompositeParticle</definition>
        <argsstring></argsstring>
        <name>CompositeParticle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="28" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a6e57500586e9cd366f5cf76ea0299957" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ElementaryForce</definition>
        <argsstring></argsstring>
        <name>ElementaryForce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="29" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1af2ace341c1d7ccd30de3502502773591" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class ElementaryParticle</definition>
        <argsstring></argsstring>
        <name>ElementaryParticle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="30" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a01ab5ef28c10ff1c9ed0c618fa044aea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Matter</definition>
        <argsstring></argsstring>
        <name>Matter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="31" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1ac790db405644a01723104c3c0c8128bb" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Membrane</definition>
        <argsstring></argsstring>
        <name>Membrane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="32" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a9175d4e959674956ccb487d060bac93f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Monomer</definition>
        <argsstring></argsstring>
        <name>Monomer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="33" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1aa410d74ba34b18a9f6bdf24323c4ee5b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Neuron</definition>
        <argsstring></argsstring>
        <name>Neuron</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="34" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1ae64ddc1700c5abc4106cbcc5843a4a42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Polymer</definition>
        <argsstring></argsstring>
        <name>Polymer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="35" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1aa238d52f825b8ea8da6a5c4ae1b8d482" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Point</definition>
        <argsstring></argsstring>
        <name>Point</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="36" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1a5636b9113fd1246b3392dd52b3138229" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Solid</definition>
        <argsstring></argsstring>
        <name>Solid</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="37" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="class_dimension_1aaa07b7b364b620b9a781f30a5cd9f5ea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Soma</definition>
        <argsstring></argsstring>
        <name>Soma</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="38" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_dimension_1a370bb42cca1211c7a6c66846ecec4dd9" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_dimension_1_1_counter_adjustment" kindref="compound">CounterAdjustment</ref> * &gt;</type>
        <definition>std::vector&lt;CounterAdjustment*&gt; Dimension::temporal_adjustment_list</definition>
        <argsstring></argsstring>
        <name>temporal_adjustment_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="72" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</referencedby>
        <referencedby refid="class_dimension_1a31e28c2777888449fad32843f6dd15ed" compoundref="dimension_8cc" startline="121" endline="176">AdjustCounters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a8095020214e474081002dbf7d9ff9d42" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::duration_since_last_event</definition>
        <argsstring></argsstring>
        <name>duration_since_last_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="80" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="class_dimension_1a663916c2573b6df4db02ccee5678a75d" compoundref="dimension_8cc" startline="178" endline="208">Update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_dimension_1ad3ba9c1c332756658b1e711c447831a3" prot="protected" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::scale_time</definition>
        <argsstring></argsstring>
        <name>scale_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="153" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="153" bodyend="-1"/>
        <referencedby refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" compoundref="dimension_8cc" startline="19" endline="22">TheTimeNow</referencedby>
        <referencedby refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a99ba1a7fe44c7e52520144ab4793cad3" prot="protected" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Dimension::time_object_created</definition>
        <argsstring></argsstring>
        <name>time_object_created</name>
        <briefdescription>
<para>Member variable &quot;time_object_created&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="154" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="154" bodyend="-1"/>
        <referencedby refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" compoundref="dimension_8cc" startline="19" endline="22">TheTimeNow</referencedby>
        <referencedby refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</referencedby>
        <referencedby refid="class_dimension_1a9282c4669e8f97dce010324886d79a99" compoundref="dimension_8h" startline="48" endline="54">Dimension</referencedby>
        <referencedby refid="class_soma_1a451e3918aa5f3ec5670fa08d4d710dd6" compoundref="soma_8h" startline="26" endline="38">Soma::Soma</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1ac2df45c101a97359cfe179636f62b0f2" prot="protected" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Dimension::objectExpiration</definition>
        <argsstring></argsstring>
        <name>objectExpiration</name>
        <briefdescription>
<para>Member variable &quot;objectExpiration&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="155" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="155" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a249074ae65a06cb5386baf196bdee022" prot="protected" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Dimension::objectLifespan</definition>
        <argsstring></argsstring>
        <name>objectLifespan</name>
        <briefdescription>
<para>Member variable &quot;objectLifespan&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="156" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="156" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_dimension_1a4b4e30a89bc08dd201962f530b7c31f8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::object_energy</definition>
        <argsstring></argsstring>
        <name>object_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="161" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="161" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1add0a5cbc1ccf67d063dbaf5e1ee07b40" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::dimension_type</definition>
        <argsstring></argsstring>
        <name>dimension_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="162" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="162" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1aafe44c853102feeea49e8ffa00f2c6ae" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Dimension::dimensionCounter</definition>
        <argsstring></argsstring>
        <name>dimensionCounter</name>
        <briefdescription>
<para>Member variable &quot;dimensionCounter&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="163" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a7ed6787b2ac9e0fe7e8fec36a3a1c287" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::dimension_scale</definition>
        <argsstring></argsstring>
        <name>dimension_scale</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="164" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="164" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a3e2868e1f50df8d249835aa3d4819a52" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::dimension_time_counter</definition>
        <argsstring></argsstring>
        <name>dimension_time_counter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="165" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1aba67083965a790931bc581a65f6ca01a" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::dimension_offset</definition>
        <argsstring></argsstring>
        <name>dimension_offset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="166" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="166" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a286384f40ffbb03d770307bb3a2b57d9" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Dimension::m_Counter</definition>
        <argsstring></argsstring>
        <name>m_Counter</name>
        <briefdescription>
<para>Member variable &quot;m_Counter&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="169" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1aa808e7d2df6d70eb81b74b8f5b1107c5" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::m_OrbitalType</definition>
        <argsstring></argsstring>
        <name>m_OrbitalType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="170" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a7c7a09553bdb908fc0f133e3049c62e3" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::m_Tau</definition>
        <argsstring></argsstring>
        <name>m_Tau</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="171" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1a1e1ba937169eefc74b53fac47ae4cf54" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::m_Position</definition>
        <argsstring></argsstring>
        <name>m_Position</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="172" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1aad79e5f97dffe0bff2908fee13d9ce8f" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Dimension::m_Phase</definition>
        <argsstring></argsstring>
        <name>m_Phase</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="173" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="173" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1ad3a31f39b4ce1d8e2c777bffd8042378" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::m_Duration</definition>
        <argsstring></argsstring>
        <name>m_Duration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="174" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="174" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1af3cd48a0e5321d1cf48b24c48fcc5659" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Dimension::m_InternalClock</definition>
        <argsstring></argsstring>
        <name>m_InternalClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="175" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="175" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1addc0ef6daebc40044668f4db8667c9c6" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Dimension::previous_event_time</definition>
        <argsstring></argsstring>
        <name>previous_event_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="176" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1add91aa075486fb41cb889a1132ce1d9b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Dimension::object_initialised</definition>
        <argsstring></argsstring>
        <name>object_initialised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="177" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dimension_1abab9945cfe63c94dcf2a25e2fb3651e1" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Dimension::object_disabled</definition>
        <argsstring></argsstring>
        <name>object_disabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="178" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_dimension_1aa61dad15f33b6c3d09028ba9e545aa70" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Dimension::Dimension</definition>
        <argsstring>()</argsstring>
        <name>Dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="42" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a68def81e037c1bcc005591f45c53e3a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Dimension::Dimension</definition>
        <argsstring>(unsigned int object_type)</argsstring>
        <name>Dimension</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="44" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ab48cbe6ca22404ab5a2c522498c38d7c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Dimension::Dimension</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Dimension</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="46" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a9282c4669e8f97dce010324886d79a99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Dimension::Dimension</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time, Universe &amp;universe_connector)</argsstring>
        <name>Dimension</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_universe" kindref="compound">Universe</ref> &amp;</type>
          <declname>universe_connector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="48" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="48" bodyend="54"/>
        <references refid="class_dimension_1a99ba1a7fe44c7e52520144ab4793cad3" compoundref="dimension_8h" startline="154">time_object_created</references>
        <references refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</references>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aa990dfd442020c193a1941e9dffbfbee" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Dimension::~Dimension</definition>
        <argsstring>()</argsstring>
        <name>~Dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="56" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a2fbee64eeea5de3d8eab10cf0fdb6363" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Dimension::GetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetCounter</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="75" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a6985e3d8738202530cb2cd428b5b884c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dimension::GetScale</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetScale</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="77" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a58009cd435ead4b7b2f395a11fda0ae8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double Dimension::GetOffset</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetOffset</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="79" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; Dimension::TheTimeNow</definition>
        <argsstring>()</argsstring>
        <name>TheTimeNow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="82" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="19" bodyend="22"/>
        <references refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" compoundref="universe_8cc" startline="116" endline="119">Universe::TheCalculatedTimeNow</references>
        <references refid="class_dimension_1a99ba1a7fe44c7e52520144ab4793cad3" compoundref="dimension_8h" startline="154">time_object_created</references>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">Universe::TheTimeNow</references>
        <references refid="class_dimension_1ad3ba9c1c332756658b1e711c447831a3" compoundref="dimension_8h" startline="153">scale_time</references>
        <referencedby refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a75c6a1a1e09c40b5860dc11a83384d9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, unsigned int val)</argsstring>
        <name>SetCounter</name>
        <reimplements refid="class_universe_1aa22202ae740eb1355529afcb13285e91">SetCounter</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="85" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="24" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a7f655ea002e8f9614a8c5cfa1807c49c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::SetScale</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetScale</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="87" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="25" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a0558d45fe020ba1d1895e521a411decb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::SetTime</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetTime</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="89" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="26" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1af74dd7af3af95c0a51b001b6ad665300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::SetOffset</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetOffset</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="91" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aa323eaa2c592e498d48e0739009ec313" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::IncScale</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>IncScale</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="93" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="29" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a4bd8e584c3bb68ebd7ca0463f8905813" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::DecScale</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>DecScale</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="95" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="35" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1afc61c6d6d68ec0ed461458d504fec16f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::IncTime</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>IncTime</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="97" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="41" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a25978bcb1f62aa7ed909463d08d92ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::DecTime</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>DecTime</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="99" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aaf18cc220562b30f9e7aee92f16cc08e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::IncOffset</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>IncOffset</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="101" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="53" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a2017e62d4b3caf31f4f1b6b5cf59a798" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::DecOffset</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>DecOffset</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="103" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a484621a7c6f9b43f6e251ba04e0fdf8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Dimension::SetObjectType</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val)</argsstring>
        <name>SetObjectType</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="105" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="57" bodyend="61"/>
        <references refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</references>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a72f494215a114cb43cecd9b170bcde51" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int Dimension::GetObjectType</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetObjectType</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="107" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="107" bodyend="107"/>
        <references refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</references>
        <references refid="class_dimension_1a31e28c2777888449fad32843f6dd15ed" compoundref="dimension_8cc" startline="121" endline="176">AdjustCounters</references>
        <references refid="class_dimension_1a663916c2573b6df4db02ccee5678a75d" compoundref="dimension_8cc" startline="178" endline="208">Update</references>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1af83732dba929ae01aca457e7d6121374" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Dimension::ResetParameters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>ResetParameters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="109" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="63" bodyend="105"/>
        <references refid="class_dimension_1a99ba1a7fe44c7e52520144ab4793cad3" compoundref="dimension_8h" startline="154">time_object_created</references>
        <references refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" compoundref="dimension_8cc" startline="19" endline="22">TheTimeNow</references>
        <references refid="class_dimension_1ad3ba9c1c332756658b1e711c447831a3" compoundref="dimension_8h" startline="153">scale_time</references>
        <references refid="class_dimension_1a370bb42cca1211c7a6c66846ecec4dd9" compoundref="dimension_8h" startline="72">temporal_adjustment_list</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a479e5fe39e4f030d8c8ed49efaf3c9c5" compoundref="dimension_8h" startline="63">Dimension::CounterAdjustment::counter_begin</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a062d5881eff35aed345fb62bffe0beb2" compoundref="dimension_8h" startline="64">Dimension::CounterAdjustment::counter_last_update</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a9eda012b13936ea01baf94c4bbc68752" compoundref="dimension_8h" startline="65">Dimension::CounterAdjustment::counter_end</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a365f831bf98daa6ec0a65b0691b3d67f" compoundref="dimension_8h" startline="66">Dimension::CounterAdjustment::point_to_counter</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a970456a7eccf8a48476066a388a599da" compoundref="dimension_8h" startline="67">Dimension::CounterAdjustment::pool</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1a8962b1845d310b35b374988034c3866c" compoundref="dimension_8h" startline="68">Dimension::CounterAdjustment::interval</references>
        <references refid="struct_dimension_1_1_counter_adjustment_1aa451d22451f69875aea9138f461f5b43" compoundref="dimension_8h" startline="69">Dimension::CounterAdjustment::shape</references>
        <referencedby refid="class_dimension_1a484621a7c6f9b43f6e251ba04e0fdf8b" compoundref="dimension_8cc" startline="57" endline="61">SetObjectType</referencedby>
        <referencedby refid="class_dimension_1a663916c2573b6df4db02ccee5678a75d" compoundref="dimension_8cc" startline="178" endline="208">Update</referencedby>
        <referencedby refid="class_dimension_1a9282c4669e8f97dce010324886d79a99" compoundref="dimension_8h" startline="48" endline="54">Dimension</referencedby>
        <referencedby refid="class_dimension_1a72f494215a114cb43cecd9b170bcde51" compoundref="dimension_8h" startline="107" endline="107">GetObjectType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a31e28c2777888449fad32843f6dd15ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Dimension::AdjustCounters</definition>
        <argsstring>(std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; currentTime)</argsstring>
        <name>AdjustCounters</name>
        <reimplements refid="class_universe_1a15aa20218286fd11ecb9b792dfb63be3">AdjustCounters</reimplements>
        <param>
          <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="111" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="121" bodyend="176"/>
        <references refid="class_dimension_1a370bb42cca1211c7a6c66846ecec4dd9" compoundref="dimension_8h" startline="72">temporal_adjustment_list</references>
        <referencedby refid="class_dimension_1a72f494215a114cb43cecd9b170bcde51" compoundref="dimension_8h" startline="107" endline="107">GetObjectType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a663916c2573b6df4db02ccee5678a75d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Dimension::Update</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Update</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="113" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="178" bodyend="208"/>
        <references refid="class_dimension_1af83732dba929ae01aca457e7d6121374" compoundref="dimension_8cc" startline="63" endline="105">ResetParameters</references>
        <references refid="class_dimension_1a8095020214e474081002dbf7d9ff9d42" compoundref="dimension_8h" startline="80">duration_since_last_event</references>
        <referencedby refid="class_dimension_1a72f494215a114cb43cecd9b170bcde51" compoundref="dimension_8h" startline="107" endline="107">GetObjectType</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a6d3f7fa4a26b92d8ae6161a1b8bb8220" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetCharge</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val) final</argsstring>
        <name>SetCharge</name>
        <reimplements refid="class_universe_1a3b3da7c86a7b75e5e5c0b7972ac82a87">SetCharge</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="115" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="115" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a8d73c050c67b0226572b4a1b08ae6594" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetSpin</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val) final</argsstring>
        <name>SetSpin</name>
        <reimplements refid="class_universe_1ae2ae1c3b3e4cde2c18f5f6a814761ec8">SetSpin</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="116" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="116" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a652220a2eb1b26c749ad032865d81788" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetGravitation</name>
        <reimplements refid="class_universe_1ab0404e774ee0ed66b597ff5b8e989446">GetGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="117" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a656ce92d07ea600cc0ec53865ad515e2" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetWeak</name>
        <reimplements refid="class_universe_1a4476b7e0a3fc1764909f556257fd9ec7">GetWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="118" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="118" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a5bb5a164564013a60728854cc2e5ddb3" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetWeakElectroweak</name>
        <reimplements refid="class_universe_1a645299738e6b798a037f2a15a2e7cf4d">GetWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="119" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="119" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a21783c29a576518b722512f1245fa598" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetElectromagnetic</name>
        <reimplements refid="class_universe_1a63b850ef3f3394313353109d222bf5d1">GetElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="120" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ae1babb1fa280c35966d7ee3de6655e4d" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a9f099605c082e7fa755787a6a8cab7ba">GetElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="121" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="121" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ae36aadad4ae84735a5ff73bff4eb97b1" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrong</name>
        <reimplements refid="class_universe_1acb453ce71da418c5b5617fecede9571b">GetStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="122" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="122" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ad0d067d7f9dc4841b0ad280979ebe7af" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrongFundamental</name>
        <reimplements refid="class_universe_1ab44daccba01ee7e3cf9b50bba83dd19e">GetStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="123" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="123" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aeee6025f17d9cd1bf7f324d715a30691" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::GetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrongResidual</name>
        <reimplements refid="class_universe_1af0f4b81950061e63c2855eb40957a5b1">GetStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="124" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a9474b0dd3f6321a92bfe4375bb4b2266" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyGravitation</name>
        <reimplements refid="class_universe_1a76c0b5e63c2a7d1988c44db341c3d64c">ApplyGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="126" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a72b8ab8d676b4df6b9a6ef948f5693c9" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyWeak</name>
        <reimplements refid="class_universe_1a6d1226b3adec3c42a833afdbb6a65a92">ApplyWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="127" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="127" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1abf490cabd486afa660f17940ed0d17e6" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyWeakElectroweak</name>
        <reimplements refid="class_universe_1a46a906baabb63e5d31f8b48ea1fae52e">ApplyWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="128" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a65bcd3c09792cf53b1f614eff49cf111" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyElectromagnetic</name>
        <reimplements refid="class_universe_1a1f787da78fa196ba635db21a9e91dabb">ApplyElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="129" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="129" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ab13e8ed50a4373274636e542c917db01" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a4c36c1ab30db993307f88363dde5e8c5">ApplyElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="130" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a621e8f7f24db86e836c5b3da0f019290" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrong</name>
        <reimplements refid="class_universe_1a906a88b37f10bfa630bef49dfd0e907a">ApplyStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="131" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1afb01fb9e469da18899d4b14e5f095ece" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrongFundamental</name>
        <reimplements refid="class_universe_1a62789bcff84bd750b0366004381e2fdd">ApplyStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="132" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="132" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a2ae0b6a8ee17f6e28b6d2d3209df4bf4" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Dimension::ApplyStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrongResidual</name>
        <reimplements refid="class_universe_1af7becebb347be9a85541d96a3eca1ca7">ApplyStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="133" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aeec6887382d09e3d78382582ff4e7c33" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetGravitation</name>
        <reimplements refid="class_universe_1ae0cb8d86b2fbb8396d605160344b42f5">SetGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="135" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a157cfa28dd6bc5518d622d01445ca827" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetWeak</name>
        <reimplements refid="class_universe_1a0f5cd04081b41ee931c0557dc397f6fb">SetWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="136" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="136" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a1d2accef9e6adf747f5cc143ae4527c9" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetWeakElectroweak</name>
        <reimplements refid="class_universe_1a2d3d642bfdc863248e93535832fa4b00">SetWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="137" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ad8c18ce6358904e01594092dca9f1311" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetElectromagnetic</name>
        <reimplements refid="class_universe_1aa981fc7e252b1fbbb675f0371860954d">SetElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="138" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1aead73fc6a25388d14b514b2170735b1b" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a608aa95698380f791a0ffba45cc1bee3">SetElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="139" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1ab9021cb6727ed590026bf870c638576d" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrong</name>
        <reimplements refid="class_universe_1a5946c8f3d4cda305f3ecd10df21a2f94">SetStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="140" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a2de864aaa4b1074684395dbe928468c1" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrongFundamental</name>
        <reimplements refid="class_universe_1aafec97a231126b71c73ac1258609a284">SetStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="141" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a9bd5480b1da689cd58bf61dac7169080" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::SetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrongResidual</name>
        <reimplements refid="class_universe_1a1b2d6197ddf3d613cc30bd04d22ed8b7">SetStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="142" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="142" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="class_dimension_1a5b07f5c8558233c8f3488baf1fe3459a" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Dimension::PollElementaryForce</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>PollElementaryForce</name>
        <reimplements refid="class_universe_1a0c485c504542409cbb5cfd8543c35b11">PollElementaryForce</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="144" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="144" bodyend="144"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="class_dimension_1a278d8c3df7896eb01c55283482f8674a" prot="private" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Dimension::AddTemporalAdjustment</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double *point_to_counter, double pool, int interval, int shape)</argsstring>
        <name>AddTemporalAdjustment</name>
        <reimplements refid="class_universe_1a901e16db5e8af258c66af7ac75662fe0">AddTemporalAdjustment</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>point_to_counter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dimension.h" line="159" column="1" bodyfile="BrainHarmonics/dimension.cc" bodystart="107" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="157">
        <label>Universe</label>
        <link refid="class_universe"/>
      </node>
      <node id="156">
        <label>Dimension</label>
        <link refid="class_dimension"/>
        <childnode refid="157" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="159">
        <label>Universe</label>
        <link refid="class_universe"/>
        <childnode refid="159" relation="usage">
          <edgelabel>time_dimension_pointer</edgelabel>
        </childnode>
      </node>
      <node id="158">
        <label>Dimension</label>
        <link refid="class_dimension"/>
        <childnode refid="159" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BrainHarmonics/dimension.h" line="25" column="1" bodyfile="BrainHarmonics/dimension.h" bodystart="24" bodyend="180"/>
    <listofallmembers>
      <member refid="class_universe_1ab682307c963836cd81b35b5604bd7064" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddCognitiveNetwork</name></member>
      <member refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddCognitiveNetworks</name></member>
      <member refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddCompositeForceParticle</name></member>
      <member refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddCompositeForceParticles</name></member>
      <member refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddDimension</name></member>
      <member refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddDimensions</name></member>
      <member refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddElementaryForce</name></member>
      <member refid="class_universe_1a81d294300346e9f901836ab609cce942" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddElementaryForces</name></member>
      <member refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddElementaryParticle</name></member>
      <member refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddElementaryParticles</name></member>
      <member refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddMatter</name></member>
      <member refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddMatters</name></member>
      <member refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddMonomer</name></member>
      <member refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddMonomers</name></member>
      <member refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddPoint</name></member>
      <member refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddPoints</name></member>
      <member refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddPolymer</name></member>
      <member refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddPolymers</name></member>
      <member refid="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddSolid</name></member>
      <member refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" prot="public" virt="non-virtual"><scope>Dimension</scope><name>AddSolids</name></member>
      <member refid="class_dimension_1a278d8c3df7896eb01c55283482f8674a" prot="private" virt="virtual"><scope>Dimension</scope><name>AddTemporalAdjustment</name></member>
      <member refid="class_dimension_1a31e28c2777888449fad32843f6dd15ed" prot="public" virt="virtual"><scope>Dimension</scope><name>AdjustCounters</name></member>
      <member refid="class_dimension_1a65bcd3c09792cf53b1f614eff49cf111" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyElectromagnetic</name></member>
      <member refid="class_dimension_1ab13e8ed50a4373274636e542c917db01" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyElectromagneticElectroweak</name></member>
      <member refid="class_dimension_1a9474b0dd3f6321a92bfe4375bb4b2266" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyGravitation</name></member>
      <member refid="class_dimension_1a621e8f7f24db86e836c5b3da0f019290" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyStrong</name></member>
      <member refid="class_dimension_1afb01fb9e469da18899d4b14e5f095ece" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyStrongFundamental</name></member>
      <member refid="class_dimension_1a2ae0b6a8ee17f6e28b6d2d3209df4bf4" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyStrongResidual</name></member>
      <member refid="class_dimension_1a72b8ab8d676b4df6b9a6ef948f5693c9" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyWeak</name></member>
      <member refid="class_dimension_1abf490cabd486afa660f17940ed0d17e6" prot="public" virt="virtual"><scope>Dimension</scope><name>ApplyWeakElectroweak</name></member>
      <member refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>cognitive_network_list</name></member>
      <member refid="class_dimension_1ad04bbaef84caa0d408ec09a1c1302f5f" prot="private" virt="non-virtual"><scope>Dimension</scope><name>CognitiveNetwork</name></member>
      <member refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>composite_forceparticle_list</name></member>
      <member refid="class_dimension_1a1dacbeca8e464bdc533a40a1b18f33b2" prot="private" virt="non-virtual"><scope>Dimension</scope><name>CompositeForce</name></member>
      <member refid="class_dimension_1a8be5cf46db5f9876c49d58e4ab84044b" prot="private" virt="non-virtual"><scope>Dimension</scope><name>CompositeParticle</name></member>
      <member refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Creation</name></member>
      <member refid="class_dimension_1a2017e62d4b3caf31f4f1b6b5cf59a798" prot="public" virt="non-virtual"><scope>Dimension</scope><name>DecOffset</name></member>
      <member refid="class_dimension_1a4bd8e584c3bb68ebd7ca0463f8905813" prot="public" virt="non-virtual"><scope>Dimension</scope><name>DecScale</name></member>
      <member refid="class_dimension_1a25978bcb1f62aa7ed909463d08d92ca4" prot="public" virt="non-virtual"><scope>Dimension</scope><name>DecTime</name></member>
      <member refid="class_dimension_1aa61dad15f33b6c3d09028ba9e545aa70" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Dimension</name></member>
      <member refid="class_dimension_1a68def81e037c1bcc005591f45c53e3a3" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Dimension</name></member>
      <member refid="class_dimension_1ab48cbe6ca22404ab5a2c522498c38d7c" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Dimension</name></member>
      <member refid="class_dimension_1a9282c4669e8f97dce010324886d79a99" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Dimension</name></member>
      <member refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>dimension_list</name></member>
      <member refid="class_dimension_1aba67083965a790931bc581a65f6ca01a" prot="private" virt="non-virtual"><scope>Dimension</scope><name>dimension_offset</name></member>
      <member refid="class_dimension_1a7ed6787b2ac9e0fe7e8fec36a3a1c287" prot="private" virt="non-virtual"><scope>Dimension</scope><name>dimension_scale</name></member>
      <member refid="class_dimension_1a3e2868e1f50df8d249835aa3d4819a52" prot="private" virt="non-virtual"><scope>Dimension</scope><name>dimension_time_counter</name></member>
      <member refid="class_dimension_1add0a5cbc1ccf67d063dbaf5e1ee07b40" prot="private" virt="non-virtual"><scope>Dimension</scope><name>dimension_type</name></member>
      <member refid="class_dimension_1aafe44c853102feeea49e8ffa00f2c6ae" prot="private" virt="non-virtual"><scope>Dimension</scope><name>dimensionCounter</name></member>
      <member refid="class_dimension_1a8095020214e474081002dbf7d9ff9d42" prot="public" virt="non-virtual"><scope>Dimension</scope><name>duration_since_last_event</name></member>
      <member refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>elementary_force_list</name></member>
      <member refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>elementary_particle_list</name></member>
      <member refid="class_dimension_1a6e57500586e9cd366f5cf76ea0299957" prot="private" virt="non-virtual"><scope>Dimension</scope><name>ElementaryForce</name></member>
      <member refid="class_dimension_1af2ace341c1d7ccd30de3502502773591" prot="private" virt="non-virtual"><scope>Dimension</scope><name>ElementaryParticle</name></member>
      <member refid="class_universe_1a982502e46868a00a9111738ccc9355c2" prot="public" virt="non-virtual"><scope>Dimension</scope><name>ExtendLife</name></member>
      <member refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetCognitiveNetwork</name></member>
      <member refid="class_universe_1a06968a24194280a43f077c5b77379ea8" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetCognitiveNetworks</name></member>
      <member refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetCompositeForceParticle</name></member>
      <member refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetCompositeForceParticles</name></member>
      <member refid="class_dimension_1a2fbee64eeea5de3d8eab10cf0fdb6363" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetCounter</name></member>
      <member refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetDimension</name></member>
      <member refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetDimensions</name></member>
      <member refid="class_dimension_1a21783c29a576518b722512f1245fa598" prot="public" virt="virtual"><scope>Dimension</scope><name>GetElectromagnetic</name></member>
      <member refid="class_dimension_1ae1babb1fa280c35966d7ee3de6655e4d" prot="public" virt="virtual"><scope>Dimension</scope><name>GetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a9506017d944cb64e67567477c1505a53" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetElementaryForce</name></member>
      <member refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetElementaryForces</name></member>
      <member refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetElementaryParticle</name></member>
      <member refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetElementaryParticles</name></member>
      <member refid="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetEnergy</name></member>
      <member refid="class_dimension_1a652220a2eb1b26c749ad032865d81788" prot="public" virt="virtual"><scope>Dimension</scope><name>GetGravitation</name></member>
      <member refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetMatter</name></member>
      <member refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetMatters</name></member>
      <member refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetMonomer</name></member>
      <member refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetMonomers</name></member>
      <member refid="class_dimension_1a72f494215a114cb43cecd9b170bcde51" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetObjectType</name></member>
      <member refid="class_dimension_1a58009cd435ead4b7b2f395a11fda0ae8" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetOffset</name></member>
      <member refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetPoint</name></member>
      <member refid="class_universe_1a765c6c658b7a465cd92418690db846ae" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetPoints</name></member>
      <member refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetPolymer</name></member>
      <member refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetPolymers</name></member>
      <member refid="class_dimension_1a6985e3d8738202530cb2cd428b5b884c" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetScale</name></member>
      <member refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetSolid</name></member>
      <member refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" prot="public" virt="non-virtual"><scope>Dimension</scope><name>GetSolids</name></member>
      <member refid="class_dimension_1ae36aadad4ae84735a5ff73bff4eb97b1" prot="public" virt="virtual"><scope>Dimension</scope><name>GetStrong</name></member>
      <member refid="class_dimension_1ad0d067d7f9dc4841b0ad280979ebe7af" prot="public" virt="virtual"><scope>Dimension</scope><name>GetStrongFundamental</name></member>
      <member refid="class_dimension_1aeee6025f17d9cd1bf7f324d715a30691" prot="public" virt="virtual"><scope>Dimension</scope><name>GetStrongResidual</name></member>
      <member refid="class_dimension_1a656ce92d07ea600cc0ec53865ad515e2" prot="public" virt="virtual"><scope>Dimension</scope><name>GetWeak</name></member>
      <member refid="class_dimension_1a5bb5a164564013a60728854cc2e5ddb3" prot="public" virt="virtual"><scope>Dimension</scope><name>GetWeakElectroweak</name></member>
      <member refid="class_dimension_1aaf18cc220562b30f9e7aee92f16cc08e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>IncOffset</name></member>
      <member refid="class_dimension_1aa323eaa2c592e498d48e0739009ec313" prot="public" virt="non-virtual"><scope>Dimension</scope><name>IncScale</name></member>
      <member refid="class_dimension_1afc61c6d6d68ec0ed461458d504fec16f" prot="public" virt="non-virtual"><scope>Dimension</scope><name>IncTime</name></member>
      <member refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>IsDead</name></member>
      <member refid="class_dimension_1a286384f40ffbb03d770307bb3a2b57d9" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_Counter</name></member>
      <member refid="class_dimension_1ad3a31f39b4ce1d8e2c777bffd8042378" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_Duration</name></member>
      <member refid="class_dimension_1af3cd48a0e5321d1cf48b24c48fcc5659" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_InternalClock</name></member>
      <member refid="class_dimension_1aa808e7d2df6d70eb81b74b8f5b1107c5" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_OrbitalType</name></member>
      <member refid="class_dimension_1aad79e5f97dffe0bff2908fee13d9ce8f" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_Phase</name></member>
      <member refid="class_dimension_1a1e1ba937169eefc74b53fac47ae4cf54" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_Position</name></member>
      <member refid="class_dimension_1a7c7a09553bdb908fc0f133e3049c62e3" prot="private" virt="non-virtual"><scope>Dimension</scope><name>m_Tau</name></member>
      <member refid="class_dimension_1a01ab5ef28c10ff1c9ed0c618fa044aea" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Matter</name></member>
      <member refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>matter_list</name></member>
      <member refid="class_dimension_1ac790db405644a01723104c3c0c8128bb" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Membrane</name></member>
      <member refid="class_dimension_1a9175d4e959674956ccb487d060bac93f" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Monomer</name></member>
      <member refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>monomer_list</name></member>
      <member refid="class_dimension_1aa410d74ba34b18a9f6bdf24323c4ee5b" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Neuron</name></member>
      <member refid="class_dimension_1abab9945cfe63c94dcf2a25e2fb3651e1" prot="private" virt="non-virtual"><scope>Dimension</scope><name>object_disabled</name></member>
      <member refid="class_dimension_1a4b4e30a89bc08dd201962f530b7c31f8" prot="private" virt="non-virtual"><scope>Dimension</scope><name>object_energy</name></member>
      <member refid="class_universe_1a17c8d799331a5b32837f285c12cbe858" prot="public" virt="non-virtual"><scope>Dimension</scope><name>object_energy_threshold</name></member>
      <member refid="class_dimension_1add91aa075486fb41cb889a1132ce1d9b" prot="private" virt="non-virtual"><scope>Dimension</scope><name>object_initialised</name></member>
      <member refid="class_universe_1a64f4f4025c9be1d84492c766a002a6d4" prot="public" virt="non-virtual"><scope>Dimension</scope><name>object_size</name></member>
      <member refid="class_dimension_1ac2df45c101a97359cfe179636f62b0f2" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>objectExpiration</name></member>
      <member refid="class_dimension_1a249074ae65a06cb5386baf196bdee022" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>objectLifespan</name></member>
      <member refid="class_dimension_1aa238d52f825b8ea8da6a5c4ae1b8d482" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Point</name></member>
      <member refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>point_list</name></member>
      <member refid="class_dimension_1a5b07f5c8558233c8f3488baf1fe3459a" prot="public" virt="virtual"><scope>Dimension</scope><name>PollElementaryForce</name></member>
      <member refid="class_dimension_1ae64ddc1700c5abc4106cbcc5843a4a42" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Polymer</name></member>
      <member refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>polymer_list</name></member>
      <member refid="class_dimension_1addc0ef6daebc40044668f4db8667c9c6" prot="private" virt="non-virtual"><scope>Dimension</scope><name>previous_event_time</name></member>
      <member refid="class_dimension_1af83732dba929ae01aca457e7d6121374" prot="public" virt="non-virtual"><scope>Dimension</scope><name>ResetParameters</name></member>
      <member refid="class_universe_1aeda74e3902c0e56c0c09779854045cde" prot="public" virt="non-virtual"><scope>Dimension</scope><name>ReturnEnergy</name></member>
      <member refid="class_dimension_1ad3ba9c1c332756658b1e711c447831a3" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>scale_time</name></member>
      <member refid="class_dimension_1a6d3f7fa4a26b92d8ae6161a1b8bb8220" prot="public" virt="virtual"><scope>Dimension</scope><name>SetCharge</name></member>
      <member refid="class_dimension_1a75c6a1a1e09c40b5860dc11a83384d9f" prot="public" virt="virtual"><scope>Dimension</scope><name>SetCounter</name></member>
      <member refid="class_dimension_1ad8c18ce6358904e01594092dca9f1311" prot="public" virt="virtual"><scope>Dimension</scope><name>SetElectromagnetic</name></member>
      <member refid="class_dimension_1aead73fc6a25388d14b514b2170735b1b" prot="public" virt="virtual"><scope>Dimension</scope><name>SetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a868250e67d0fcb2483aa8bdd73c40a02" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetEnergy</name></member>
      <member refid="class_dimension_1aeec6887382d09e3d78382582ff4e7c33" prot="public" virt="virtual"><scope>Dimension</scope><name>SetGravitation</name></member>
      <member refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetLifespan</name></member>
      <member refid="class_dimension_1a484621a7c6f9b43f6e251ba04e0fdf8b" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetObjectType</name></member>
      <member refid="class_dimension_1af74dd7af3af95c0a51b001b6ad665300" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetOffset</name></member>
      <member refid="class_dimension_1a7f655ea002e8f9614a8c5cfa1807c49c" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetScale</name></member>
      <member refid="class_dimension_1a8d73c050c67b0226572b4a1b08ae6594" prot="public" virt="virtual"><scope>Dimension</scope><name>SetSpin</name></member>
      <member refid="class_dimension_1ab9021cb6727ed590026bf870c638576d" prot="public" virt="virtual"><scope>Dimension</scope><name>SetStrong</name></member>
      <member refid="class_dimension_1a2de864aaa4b1074684395dbe928468c1" prot="public" virt="virtual"><scope>Dimension</scope><name>SetStrongFundamental</name></member>
      <member refid="class_dimension_1a9bd5480b1da689cd58bf61dac7169080" prot="public" virt="virtual"><scope>Dimension</scope><name>SetStrongResidual</name></member>
      <member refid="class_dimension_1a0558d45fe020ba1d1895e521a411decb" prot="public" virt="non-virtual"><scope>Dimension</scope><name>SetTime</name></member>
      <member refid="class_dimension_1a157cfa28dd6bc5518d622d01445ca827" prot="public" virt="virtual"><scope>Dimension</scope><name>SetWeak</name></member>
      <member refid="class_dimension_1a1d2accef9e6adf747f5cc143ae4527c9" prot="public" virt="virtual"><scope>Dimension</scope><name>SetWeakElectroweak</name></member>
      <member refid="class_dimension_1a5636b9113fd1246b3392dd52b3138229" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Solid</name></member>
      <member refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>solid_list</name></member>
      <member refid="class_dimension_1aaa07b7b364b620b9a781f30a5cd9f5ea" prot="private" virt="non-virtual"><scope>Dimension</scope><name>Soma</name></member>
      <member refid="class_dimension_1a370bb42cca1211c7a6c66846ecec4dd9" prot="public" virt="non-virtual"><scope>Dimension</scope><name>temporal_adjustment_list</name></member>
      <member refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" prot="public" virt="non-virtual"><scope>Dimension</scope><name>TheCalculatedTimeNow</name></member>
      <member refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" prot="public" virt="non-virtual"><scope>Dimension</scope><name>TheTimeNow</name></member>
      <member refid="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" prot="public" virt="non-virtual"><scope>Dimension</scope><name>time_dimension_pointer</name></member>
      <member refid="class_dimension_1a99ba1a7fe44c7e52520144ab4793cad3" prot="protected" virt="non-virtual"><scope>Dimension</scope><name>time_object_created</name></member>
      <member refid="class_universe_1a4d137a146dd3c2514dfb692dfbab6984" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Universe</name></member>
      <member refid="class_universe_1a1210ce56049f1fc67f53aeda223bb82b" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Universe</name></member>
      <member refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Universe</name></member>
      <member refid="class_dimension_1a663916c2573b6df4db02ccee5678a75d" prot="public" virt="non-virtual"><scope>Dimension</scope><name>Update</name></member>
      <member refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" prot="public" virt="non-virtual"><scope>Dimension</scope><name>UpdateCycle</name></member>
      <member refid="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" prot="public" virt="non-virtual"><scope>Dimension</scope><name>UseEnergy</name></member>
      <member refid="class_dimension_1aa990dfd442020c193a1941e9dffbfbee" prot="public" virt="virtual"><scope>Dimension</scope><name>~Dimension</name></member>
      <member refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" prot="public" virt="virtual"><scope>Dimension</scope><name>~Universe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
