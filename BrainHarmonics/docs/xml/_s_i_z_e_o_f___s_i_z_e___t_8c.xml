<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_s_i_z_e_o_f___s_i_z_e___t_8c" kind="file" language="C++">
    <compoundname>SIZEOF_SIZE_T.c</compoundname>
    <includes local="no">sys/types.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">stddef.h</includes>
    <incdepgraph>
      <node id="458">
        <label>stdint.h</label>
      </node>
      <node id="459">
        <label>stddef.h</label>
      </node>
      <node id="457">
        <label>sys/types.h</label>
      </node>
      <node id="456">
        <label>BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c</label>
        <link refid="_s_i_z_e_o_f___s_i_z_e___t_8c"/>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" prot="public" static="no">
        <name>SIZE</name>
        <initializer>(sizeof(size_t))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" line="23" column="9" bodyfile="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_s_i_z_e_o_f___s_i_z_e___t_8c_1a0355ddcca1b74f883f20cc208db8790b" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char info_size[]</definition>
        <argsstring>[]</argsstring>
        <name>info_size</name>
        <initializer>=  {&apos;I&apos;, &apos;N&apos;, &apos;F&apos;, &apos;O&apos;, &apos;:&apos;, &apos;<ref refid="glad_8h_1a4af680a6c683f88ed67b76f207f2e6e4" kindref="member">s</ref>&apos;,&apos;i&apos;,&apos;<ref refid="glad_8h_1a1483160fae141afea848a5393c286b2b" kindref="member">z</ref>&apos;,&apos;e&apos;,&apos;[&apos;,
  (&apos;0&apos; + ((<ref refid="_s_i_z_e_o_f___v_o_i_d___p_t_r_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref> / 10000)%10)),
  (&apos;0&apos; + ((<ref refid="_s_i_z_e_o_f___v_o_i_d___p_t_r_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref> / 1000)%10)),
  (&apos;0&apos; + ((<ref refid="_s_i_z_e_o_f___v_o_i_d___p_t_r_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref> / 100)%10)),
  (&apos;0&apos; + ((<ref refid="_s_i_z_e_o_f___v_o_i_d___p_t_r_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref> / 10)%10)),
  (&apos;0&apos; +  (<ref refid="_s_i_z_e_o_f___v_o_i_d___p_t_r_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref>    % 10)),
  &apos;]&apos;,



  &apos;\0&apos;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" line="24" column="1" bodyfile="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_s_i_z_e_o_f___s_i_z_e___t_8c_1a0ddf1224851353fc92bfbff6f499fa97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char *argv[])</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>argv</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" line="39" column="1" bodyfile="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c" bodystart="39" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>KEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__i386)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;i&apos;,&apos;3&apos;,&apos;8&apos;,&apos;6&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__x86_64)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;x&apos;,&apos;8&apos;,&apos;6&apos;,&apos;_&apos;,&apos;6&apos;,&apos;4&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ppc__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;p&apos;,&apos;p&apos;,&apos;c&apos;,&apos;_&apos;,&apos;_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ppc64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;p&apos;,&apos;p&apos;,&apos;c&apos;,&apos;6&apos;,&apos;4&apos;,&apos;_&apos;,&apos;_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__aarch64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;a&apos;,&apos;a&apos;,&apos;r&apos;,&apos;c&apos;,&apos;h&apos;,&apos;6&apos;,&apos;4&apos;,&apos;_&apos;,&apos;_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARM_ARCH_7A__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;A&apos;,&apos;R&apos;,&apos;M&apos;,&apos;_&apos;,&apos;A&apos;,&apos;R&apos;,&apos;C&apos;,&apos;H&apos;,&apos;_&apos;,&apos;7&apos;,&apos;A&apos;,&apos;_&apos;,&apos;_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(__ARM_ARCH_7S__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>KEY<sp/>&apos;_&apos;,&apos;_&apos;,&apos;A&apos;,&apos;R&apos;,&apos;M&apos;,&apos;_&apos;,&apos;A&apos;,&apos;R&apos;,&apos;C&apos;,&apos;H&apos;,&apos;_&apos;,&apos;7&apos;,&apos;S&apos;,&apos;_&apos;,&apos;_&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZE<sp/>(sizeof(size_t))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>info_size[]<sp/>=<sp/><sp/>{</highlight><highlight class="charliteral">&apos;I&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;N&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;F&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;O&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;i&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;z&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>((<ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref><sp/>/<sp/>10000)%10)),</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>((<ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref><sp/>/<sp/>1000)%10)),</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>((<ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref><sp/>/<sp/>100)%10)),</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/>((<ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref><sp/>/<sp/>10)%10)),</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal"><sp/>+<sp/><sp/>(<ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a70ed59adcb4159ac551058053e649640" kindref="member">SIZE</ref><sp/><sp/><sp/><sp/>%<sp/>10)),</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>KEY</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;k&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;e&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;y&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;[&apos;</highlight><highlight class="normal">,<sp/>KEY,<sp/></highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__CLASSIC_C__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(argc,<sp/>argv)<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc;<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[];</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a0ddf1224851353fc92bfbff6f499fa97" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_s_i_z_e_o_f___s_i_z_e___t_8c_1a0ddf1224851353fc92bfbff6f499fa97" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*argv[])</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>require<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/>require<sp/>+=<sp/>info_size[argc];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/>(<ref refid="glad_8h_1aef30cfca5b4a4c292babb2f60f6d3296" kindref="member">void</ref>)argv;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>require;</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="BrainHarmonics/CMakeFiles/CheckTypeSize/SIZEOF_SIZE_T.c"/>
  </compounddef>
</doxygen>
