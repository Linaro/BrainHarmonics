<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="sniffex_8h" kind="file" language="C++">
    <compoundname>sniffex.h</compoundname>
    <includes local="no">pcap.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">ctype.h</includes>
    <includes local="no">errno.h</includes>
    <includes local="no">sys/types.h</includes>
    <includes local="no">sys/socket.h</includes>
    <includes local="no">netinet/in.h</includes>
    <includes local="no">arpa/inet.h</includes>
    <includedby refid="_brain_harmonics_8cc" local="yes">BrainHarmonics/BrainHarmonics.cc</includedby>
    <includedby refid="sniffex_8cc" local="yes">BrainHarmonics/sniffex.cc</includedby>
    <incdepgraph>
      <node id="1668">
        <label>netinet/in.h</label>
      </node>
      <node id="1669">
        <label>arpa/inet.h</label>
      </node>
      <node id="1663">
        <label>stdlib.h</label>
      </node>
      <node id="1660">
        <label>pcap.h</label>
      </node>
      <node id="1665">
        <label>errno.h</label>
      </node>
      <node id="1666">
        <label>sys/types.h</label>
      </node>
      <node id="1662">
        <label>string.h</label>
      </node>
      <node id="1659">
        <label>BrainHarmonics/sniffex.h</label>
        <link refid="sniffex_8h"/>
        <childnode refid="1660" relation="include">
        </childnode>
        <childnode refid="1661" relation="include">
        </childnode>
        <childnode refid="1662" relation="include">
        </childnode>
        <childnode refid="1663" relation="include">
        </childnode>
        <childnode refid="1664" relation="include">
        </childnode>
        <childnode refid="1665" relation="include">
        </childnode>
        <childnode refid="1666" relation="include">
        </childnode>
        <childnode refid="1667" relation="include">
        </childnode>
        <childnode refid="1668" relation="include">
        </childnode>
        <childnode refid="1669" relation="include">
        </childnode>
      </node>
      <node id="1664">
        <label>ctype.h</label>
      </node>
      <node id="1667">
        <label>sys/socket.h</label>
      </node>
      <node id="1661">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1671">
        <label>BrainHarmonics/BrainHarmonics.cc</label>
        <link refid="_brain_harmonics_8cc"/>
      </node>
      <node id="1670">
        <label>BrainHarmonics/sniffex.h</label>
        <link refid="sniffex_8h"/>
        <childnode refid="1671" relation="include">
        </childnode>
        <childnode refid="1672" relation="include">
        </childnode>
      </node>
      <node id="1672">
        <label>BrainHarmonics/sniffex.cc</label>
        <link refid="sniffex_8cc"/>
      </node>
    </invincdepgraph>
    <innerclass refid="class_sniffex" prot="public">Sniffex</innerclass>
    <innerclass refid="struct_sniffex_1_1sniff__ethernet" prot="public">Sniffex::sniff_ethernet</innerclass>
    <innerclass refid="struct_sniffex_1_1sniff__ip" prot="public">Sniffex::sniff_ip</innerclass>
    <innerclass refid="struct_sniffex_1_1sniff__tcp" prot="public">Sniffex::sniff_tcp</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="sniffex_8h_1af0b5cfa4242ae7f98ba80fd23ef8afa9" prot="public" static="no">
        <name>APP_NAME</name>
        <initializer>&quot;sniffex&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="207" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a97559a7d956f0ee6aeae5f3886a2159e" prot="public" static="no">
        <name>APP_DESC</name>
        <initializer>&quot;Sniffer example using libpcap&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="208" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a9cf15f62d0ce89ef66e46d834242993e" prot="public" static="no">
        <name>APP_COPYRIGHT</name>
        <initializer>&quot;Copyright (<ref refid="glad_8h_1a1f2d7f8147412c43ba2303a56f97ee73" kindref="member">c</ref>) 2005 The Tcpdump Group&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="209" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a4994f979b73469e1e5cb01f62ad2ed57" prot="public" static="no">
        <name>APP_DISCLAIMER</name>
        <initializer>&quot;THERE IS ABSOLUTELY NO WARRANTY FOR THIS PROGRAM.&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="210" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a3b914b7c1a034667fcde02cd420a7928" prot="public" static="no">
        <name>SNAP_LEN</name>
        <initializer>1518</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="224" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="224" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a3f5b604fac0a778d4d05140ac486303a" prot="public" static="no">
        <name>SIZE_ETHERNET</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="227" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1abf4fcaacb1ad2010711b7c880ec2ed20" prot="public" static="no">
        <name>ETHER_ADDR_LEN</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="230" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="230" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a895709708f8f909cf7b7459491d549e7" prot="public" static="no">
        <name>IP_RF</name>
        <initializer>0x8000            /* reserved fragment flag */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="250" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1ae2473f4a88d141d5298f92a4335b714a" prot="public" static="no">
        <name>IP_DF</name>
        <initializer>0x4000            /* dont fragment flag */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="251" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="251" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1ae8afe1e04bb9bad791443556c3b2cd73" prot="public" static="no">
        <name>IP_MF</name>
        <initializer>0x2000            /* more fragments flag */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="252" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1ad059798b16d1f615b5af8770175121ba" prot="public" static="no">
        <name>IP_OFFMASK</name>
        <initializer>0x1fff       /* mask for fragmenting bits */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="253" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a316a88421a4b66af822ec0e097c01f9a" prot="public" static="no">
        <name>IP_HL</name>
        <param><defname>ip</defname></param>
        <initializer>(((ip)-&gt;ip_vhl) &amp; 0x0f)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="259" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1ad79fc88954ed6d1ab77e5fde5e23b864" prot="public" static="no">
        <name>IP_V</name>
        <param><defname>ip</defname></param>
        <initializer>(((ip)-&gt;ip_vhl) &gt;&gt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="260" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="260" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a040e084a163464aace3da0ab5673f97b" prot="public" static="no">
        <name>TH_OFF</name>
        <param><defname>th</defname></param>
        <initializer>(((th)-&gt;th_offx2 &amp; 0xf0) &gt;&gt; 4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="271" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a1cec9b372679734fcd8394d779442ddb" prot="public" static="no">
        <name>TH_FIN</name>
        <initializer>0x01</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="273" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="273" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a91006117f7ae427b957773ab0e80bfa4" prot="public" static="no">
        <name>TH_SYN</name>
        <initializer>0x02</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="274" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="274" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a7f2ce15991898c8d3397045087c4381f" prot="public" static="no">
        <name>TH_RST</name>
        <initializer>0x04</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="275" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="275" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a45b9964096064c9a0c84fbddd2c80d38" prot="public" static="no">
        <name>TH_PUSH</name>
        <initializer>0x08</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="276" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="276" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a362dae974cf06bab2b79b70f0cde524f" prot="public" static="no">
        <name>TH_ACK</name>
        <initializer>0x10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="277" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a7b18ca973f14696013696a00c5235f32" prot="public" static="no">
        <name>TH_URG</name>
        <initializer>0x20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="278" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="278" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1acb3203940d8aab3eef7dd8ec1e0112db" prot="public" static="no">
        <name>TH_ECE</name>
        <initializer>0x40</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="279" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="279" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a427da5535811ecaae82a11869ea9e1d9" prot="public" static="no">
        <name>TH_CWR</name>
        <initializer>0x80</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="280" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="280" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="sniffex_8h_1a618dec9145afa92eb20e74a97625f754" prot="public" static="no">
        <name>TH_FLAGS</name>
        <initializer>(<ref refid="sniffex_8h_1a1cec9b372679734fcd8394d779442ddb" kindref="member">TH_FIN</ref>|<ref refid="sniffex_8h_1a91006117f7ae427b957773ab0e80bfa4" kindref="member">TH_SYN</ref>|<ref refid="sniffex_8h_1a7f2ce15991898c8d3397045087c4381f" kindref="member">TH_RST</ref>|<ref refid="sniffex_8h_1a362dae974cf06bab2b79b70f0cde524f" kindref="member">TH_ACK</ref>|<ref refid="sniffex_8h_1a7b18ca973f14696013696a00c5235f32" kindref="member">TH_URG</ref>|<ref refid="sniffex_8h_1acb3203940d8aab3eef7dd8ec1e0112db" kindref="member">TH_ECE</ref>|<ref refid="sniffex_8h_1a427da5535811ecaae82a11869ea9e1d9" kindref="member">TH_CWR</ref>)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/sniffex.h" line="281" column="9" bodyfile="BrainHarmonics/sniffex.h" bodystart="281" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>sniffex.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>BrainHarmonics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Paul<sp/>Isaac&apos;s<sp/>on<sp/>05/04/17.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>©<sp/>2017<sp/>Paul<sp/>Isaac&apos;s.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BRAINHARMONICS_SNIFFEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BRAINHARMONICS_SNIFFEX_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>sniffex.c</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>Sniffer<sp/>example<sp/>of<sp/>TCP/IP<sp/>packet<sp/>capture<sp/>using<sp/>libpcap.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>Version<sp/>0.1.1<sp/>(2005-07-05)</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2005<sp/>The<sp/>Tcpdump<sp/>Group</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>intended<sp/>to<sp/>be<sp/>used<sp/>as<sp/>a<sp/>practical<sp/>example<sp/>and</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>demonstration<sp/>of<sp/>the<sp/>libpcap<sp/>library;<sp/>available<sp/>at:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>http://www.tcpdump.org/</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/>This<sp/>software<sp/>is<sp/>a<sp/>modification<sp/>of<sp/>Tim<sp/>Carstens&apos;<sp/>&quot;sniffer.c&quot;</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/>demonstration<sp/>source<sp/>code,<sp/>released<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>sniffer.c</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2002<sp/>Tim<sp/>Carstens</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*<sp/>2002-01-07</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>Demonstration<sp/>of<sp/>using<sp/>libpcap</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*<sp/>timcarst<sp/>-at-<sp/>yahoo<sp/>-dot-<sp/>com</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>&quot;sniffer.c&quot;<sp/>is<sp/>distributed<sp/>under<sp/>these<sp/>terms:</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/>4.<sp/>The<sp/>name<sp/>&quot;Tim<sp/>Carstens&quot;<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>prior<sp/>written<sp/>permission</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>REGENTS<sp/>AND<sp/>CONTRIBUTORS<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>ARE<sp/>DISCLAIMED.<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>REGENTS<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,<sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY<sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/>LIABILITY,<sp/>OR<sp/>TORT<sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/>&lt;end<sp/>of<sp/>&quot;sniffer.c&quot;<sp/>terms&gt;</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>This<sp/>software,<sp/>&quot;sniffex.c&quot;,<sp/>is<sp/>a<sp/>derivative<sp/>work<sp/>of<sp/>&quot;sniffer.c&quot;<sp/>and<sp/>is</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/>covered<sp/>by<sp/>the<sp/>following<sp/>terms:</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*<sp/>1.<sp/>Because<sp/>this<sp/>is<sp/>a<sp/>derivative<sp/>work,<sp/>you<sp/>must<sp/>comply<sp/>with<sp/>the<sp/>&quot;sniffer.c&quot;</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>terms<sp/>reproduced<sp/>above.</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/>2.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>Tcpdump<sp/>Group<sp/>copyright</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice<sp/>at<sp/>the<sp/>top<sp/>of<sp/>this<sp/>source<sp/>file,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/>3.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>4.<sp/>The<sp/>names<sp/>&quot;tcpdump&quot;<sp/>or<sp/>&quot;libpcap&quot;<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>products<sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>THERE<sp/>IS<sp/>ABSOLUTELY<sp/>NO<sp/>WARRANTY<sp/>FOR<sp/>THIS<sp/>PROGRAM.</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>BECAUSE<sp/>THE<sp/>PROGRAM<sp/>IS<sp/>LICENSED<sp/>FREE<sp/>OF<sp/>CHARGE,<sp/>THERE<sp/>IS<sp/>NO<sp/>WARRANTY</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/>FOR<sp/>THE<sp/>PROGRAM,<sp/>TO<sp/>THE<sp/>EXTENT<sp/>PERMITTED<sp/>BY<sp/>APPLICABLE<sp/>LAW.<sp/><sp/>EXCEPT<sp/>WHEN</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/>OTHERWISE<sp/>STATED<sp/>IN<sp/>WRITING<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND/OR<sp/>OTHER<sp/>PARTIES</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/>PROVIDE<sp/>THE<sp/>PROGRAM<sp/>&quot;AS<sp/>IS&quot;<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EITHER<sp/>EXPRESSED</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>THE<sp/>ENTIRE<sp/>RISK<sp/>AS</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/>TO<sp/>THE<sp/>QUALITY<sp/>AND<sp/>PERFORMANCE<sp/>OF<sp/>THE<sp/>PROGRAM<sp/>IS<sp/>WITH<sp/>YOU.<sp/><sp/>SHOULD<sp/>THE</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>PROGRAM<sp/>PROVE<sp/>DEFECTIVE,<sp/>YOU<sp/>ASSUME<sp/>THE<sp/>COST<sp/>OF<sp/>ALL<sp/>NECESSARY<sp/>SERVICING,</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>REPAIR<sp/>OR<sp/>CORRECTION.</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>UNLESS<sp/>REQUIRED<sp/>BY<sp/>APPLICABLE<sp/>LAW<sp/>OR<sp/>AGREED<sp/>TO<sp/>IN<sp/>WRITING</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/>WILL<sp/>ANY<sp/>COPYRIGHT<sp/>HOLDER,<sp/>OR<sp/>ANY<sp/>OTHER<sp/>PARTY<sp/>WHO<sp/>MAY<sp/>MODIFY<sp/>AND/OR</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>REDISTRIBUTE<sp/>THE<sp/>PROGRAM<sp/>AS<sp/>PERMITTED<sp/>ABOVE,<sp/>BE<sp/>LIABLE<sp/>TO<sp/>YOU<sp/>FOR<sp/>DAMAGES,</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>INCLUDING<sp/>ANY<sp/>GENERAL,<sp/>SPECIAL,<sp/>INCIDENTAL<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>ARISING</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OR<sp/>INABILITY<sp/>TO<sp/>USE<sp/>THE<sp/>PROGRAM<sp/>(INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/>TO<sp/>LOSS<sp/>OF<sp/>DATA<sp/>OR<sp/>DATA<sp/>BEING<sp/>RENDERED<sp/>INACCURATE<sp/>OR<sp/>LOSSES<sp/>SUSTAINED<sp/>BY</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/>YOU<sp/>OR<sp/>THIRD<sp/>PARTIES<sp/>OR<sp/>A<sp/>FAILURE<sp/>OF<sp/>THE<sp/>PROGRAM<sp/>TO<sp/>OPERATE<sp/>WITH<sp/>ANY<sp/>OTHER</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>PROGRAMS),<sp/>EVEN<sp/>IF<sp/>SUCH<sp/>HOLDER<sp/>OR<sp/>OTHER<sp/>PARTY<sp/>HAS<sp/>BEEN<sp/>ADVISED<sp/>OF<sp/>THE</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGES.</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/>&lt;end<sp/>of<sp/>&quot;sniffex.c&quot;<sp/>terms&gt;</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/>Below<sp/>is<sp/>an<sp/>excerpt<sp/>from<sp/>an<sp/>email<sp/>from<sp/>Guy<sp/>Harris<sp/>on<sp/>the<sp/>tcpdump-workers</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>mail<sp/>list<sp/>when<sp/>someone<sp/>asked,<sp/>&quot;How<sp/>do<sp/>I<sp/>Get<sp/>the<sp/>length<sp/>of<sp/>the<sp/>TCP</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>payload?&quot;<sp/>Guy<sp/>Harris&apos;<sp/>slightly<sp/>snipped<sp/>response<sp/>(edited<sp/>by<sp/>him<sp/>to</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>speak<sp/>of<sp/>the<sp/>IPv4<sp/>header<sp/>length<sp/>and<sp/>TCP<sp/>data<sp/>offset<sp/>without<sp/>referring</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/>to<sp/>bitfield<sp/>structure<sp/>members)<sp/>is<sp/>reproduced<sp/>below:</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>The<sp/>Ethernet<sp/>size<sp/>is<sp/>always<sp/>14<sp/>bytes.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/>&lt;snip&gt;...&lt;/snip&gt;</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>In<sp/>fact,<sp/>you<sp/>*MUST*<sp/>assume<sp/>the<sp/>Ethernet<sp/>header<sp/>is<sp/>14<sp/>bytes,<sp/>*and*,<sp/>if</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/>you&apos;re<sp/>using<sp/>structures,<sp/>you<sp/>must<sp/>use<sp/>structures<sp/>where<sp/>the<sp/>members</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>always<sp/>have<sp/>the<sp/>same<sp/>size<sp/>on<sp/>all<sp/>platforms,<sp/>because<sp/>the<sp/>sizes<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>fields<sp/>in<sp/>Ethernet<sp/>-<sp/>and<sp/>IP,<sp/>and<sp/>TCP,<sp/>and...<sp/>-<sp/>headers<sp/>are<sp/>defined<sp/>by</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>the<sp/>protocol<sp/>specification,<sp/>not<sp/>by<sp/>the<sp/>way<sp/>a<sp/>particular<sp/>platform&apos;s<sp/>C</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>compiler<sp/>works.)</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>The<sp/>IP<sp/>header<sp/>size,<sp/>in<sp/>bytes,<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>IP<sp/>header<sp/>length,</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/>as<sp/>extracted<sp/>from<sp/>the<sp/>&quot;ip_vhl&quot;<sp/>field<sp/>of<sp/>&quot;struct<sp/>sniff_ip&quot;<sp/>with</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/>the<sp/>&quot;IP_HL()&quot;<sp/>macro,<sp/>times<sp/>4<sp/>(&quot;times<sp/>4&quot;<sp/>because<sp/>it&apos;s<sp/>in<sp/>units<sp/>of</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/>4-byte<sp/>words).<sp/><sp/>If<sp/>that<sp/>value<sp/>is<sp/>less<sp/>than<sp/>20<sp/>-<sp/>i.e.,<sp/>if<sp/>the<sp/>value</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>extracted<sp/>with<sp/>&quot;IP_HL()&quot;<sp/>is<sp/>less<sp/>than<sp/>5<sp/>-<sp/>you<sp/>have<sp/>a<sp/>malformed</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>IP<sp/>datagram.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>The<sp/>TCP<sp/>header<sp/>size,<sp/>in<sp/>bytes,<sp/>is<sp/>the<sp/>value<sp/>of<sp/>the<sp/>TCP<sp/>data<sp/>offset,</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>as<sp/>extracted<sp/>from<sp/>the<sp/>&quot;th_offx2&quot;<sp/>field<sp/>of<sp/>&quot;struct<sp/>sniff_tcp&quot;<sp/>with</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>the<sp/>&quot;TH_OFF()&quot;<sp/>macro,<sp/>times<sp/>4<sp/>(for<sp/>the<sp/>same<sp/>reason<sp/>-<sp/>4-byte<sp/>words).</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>If<sp/>that<sp/>value<sp/>is<sp/>less<sp/>than<sp/>20<sp/>-<sp/>i.e.,<sp/>if<sp/>the<sp/>value<sp/>extracted<sp/>with</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>&quot;TH_OFF()&quot;<sp/>is<sp/>less<sp/>than<sp/>5<sp/>-<sp/>you<sp/>have<sp/>a<sp/>malformed<sp/>TCP<sp/>segment.</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>So,<sp/>to<sp/>find<sp/>the<sp/>IP<sp/>header<sp/>in<sp/>an<sp/>Ethernet<sp/>packet,<sp/>look<sp/>14<sp/>bytes<sp/>after</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>packet<sp/>data.<sp/><sp/>To<sp/>find<sp/>the<sp/>TCP<sp/>header,<sp/>look</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/>&quot;IP_HL(ip)*4&quot;<sp/>bytes<sp/>after<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>IP<sp/>header.<sp/><sp/>To<sp/>find<sp/>the</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/>TCP<sp/>payload,<sp/>look<sp/>&quot;TH_OFF(tcp)*4&quot;<sp/>bytes<sp/>after<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>TCP</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>header.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>To<sp/>find<sp/>out<sp/>how<sp/>much<sp/>payload<sp/>there<sp/>is:</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>Take<sp/>the<sp/>IP<sp/>*total*<sp/>length<sp/>field<sp/>-<sp/>&quot;ip_len&quot;<sp/>in<sp/>&quot;struct<sp/>sniff_ip&quot;</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>-<sp/>and,<sp/>first,<sp/>check<sp/>whether<sp/>it&apos;s<sp/>less<sp/>than<sp/>&quot;IP_HL(ip)*4&quot;<sp/>(after</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>you&apos;ve<sp/>checked<sp/>whether<sp/>&quot;IP_HL(ip)&quot;<sp/>is<sp/>&gt;=<sp/>5).<sp/><sp/>If<sp/>it<sp/>is,<sp/>you<sp/>have</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>a<sp/>malformed<sp/>IP<sp/>datagram.</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>Otherwise,<sp/>subtract<sp/>&quot;IP_HL(ip)*4&quot;<sp/>from<sp/>it;<sp/>that<sp/>gives<sp/>you<sp/>the<sp/>length</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>TCP<sp/>segment,<sp/>including<sp/>the<sp/>TCP<sp/>header.<sp/><sp/>If<sp/>that&apos;s<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/>&quot;TH_OFF(tcp)*4&quot;<sp/>(after<sp/>you&apos;ve<sp/>checked<sp/>whether<sp/>&quot;TH_OFF(tcp)&quot;<sp/>is<sp/>&gt;=<sp/>5),</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/>you<sp/>have<sp/>a<sp/>malformed<sp/>TCP<sp/>segment.</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>Otherwise,<sp/>subtract<sp/>&quot;TH_OFF(tcp)*4&quot;<sp/>from<sp/>it;<sp/>that<sp/>gives<sp/>you<sp/>the</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>length<sp/>of<sp/>the<sp/>TCP<sp/>payload.</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>Note<sp/>that<sp/>you<sp/>also<sp/>need<sp/>to<sp/>make<sp/>sure<sp/>that<sp/>you<sp/>don&apos;t<sp/>go<sp/>past<sp/>the<sp/>end</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/>of<sp/>the<sp/>captured<sp/>data<sp/>in<sp/>the<sp/>packet<sp/>-<sp/>you<sp/>might,<sp/>for<sp/>example,<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>15-byte<sp/>Ethernet<sp/>packet<sp/>that<sp/>claims<sp/>to<sp/>contain<sp/>an<sp/>IP<sp/>datagram,<sp/>but<sp/>if</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/>it&apos;s<sp/>15<sp/>bytes,<sp/>it<sp/>has<sp/>only<sp/>one<sp/>byte<sp/>of<sp/>Ethernet<sp/>payload,<sp/>which<sp/>is<sp/>too</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>small<sp/>for<sp/>an<sp/>IP<sp/>header.<sp/><sp/>The<sp/>length<sp/>of<sp/>the<sp/>captured<sp/>data<sp/>is<sp/>given<sp/>in</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/>the<sp/>&quot;caplen&quot;<sp/>field<sp/>in<sp/>the<sp/>&quot;struct<sp/>pcap_pkthdr&quot;;<sp/>it<sp/>might<sp/>be<sp/>less<sp/>than</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>the<sp/>length<sp/>of<sp/>the<sp/>packet,<sp/>if<sp/>you&apos;re<sp/>capturing<sp/>with<sp/>a<sp/>snapshot<sp/>length</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>other<sp/>than<sp/>a<sp/>value<sp/>&gt;=<sp/>the<sp/>maximum<sp/>packet<sp/>size.</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>&lt;end<sp/>of<sp/>response&gt;</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/>Example<sp/>compiler<sp/>command-line<sp/>for<sp/>GCC:</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/><sp/>gcc<sp/>-Wall<sp/>-o<sp/>sniffex<sp/>sniffex.c<sp/>-lpcap</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>Code<sp/>Comments</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>This<sp/>section<sp/>contains<sp/>additional<sp/>information<sp/>and<sp/>explanations<sp/>regarding</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>comments<sp/>in<sp/>the<sp/>source<sp/>code.<sp/>It<sp/>serves<sp/>as<sp/>documentaion<sp/>and<sp/>rationale</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>for<sp/>why<sp/>the<sp/>code<sp/>is<sp/>written<sp/>as<sp/>it<sp/>is<sp/>without<sp/>hindering<sp/>readability,<sp/>as<sp/>it</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/>might<sp/>if<sp/>it<sp/>were<sp/>placed<sp/>along<sp/>with<sp/>the<sp/>actual<sp/>code<sp/>inline.<sp/>References<sp/>in</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/>the<sp/>code<sp/>appear<sp/>as<sp/>footnote<sp/>notation<sp/>(e.g.<sp/>[1]).</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/>1.<sp/>Ethernet<sp/>headers<sp/>are<sp/>always<sp/>exactly<sp/>14<sp/>bytes,<sp/>so<sp/>we<sp/>define<sp/>this</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/>explicitly<sp/>with<sp/>&quot;#define&quot;.<sp/>Since<sp/>some<sp/>compilers<sp/>might<sp/>pad<sp/>structures<sp/>to<sp/>a</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>multiple<sp/>of<sp/>4<sp/>bytes<sp/>-<sp/>some<sp/>versions<sp/>of<sp/>GCC<sp/>for<sp/>ARM<sp/>may<sp/>do<sp/>this<sp/>-</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>&quot;sizeof<sp/>(struct<sp/>sniff_ethernet)&quot;<sp/>isn&apos;t<sp/>used.</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>2.<sp/>Check<sp/>the<sp/>link-layer<sp/>type<sp/>of<sp/>the<sp/>device<sp/>that&apos;s<sp/>being<sp/>opened<sp/>to<sp/>make</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>sure<sp/>it&apos;s<sp/>Ethernet,<sp/>since<sp/>that&apos;s<sp/>all<sp/>we<sp/>handle<sp/>in<sp/>this<sp/>example.<sp/>Other</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/>link-layer<sp/>types<sp/>may<sp/>have<sp/>different<sp/>length<sp/>headers<sp/>(see<sp/>[1]).</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/>3.<sp/>This<sp/>is<sp/>the<sp/>filter<sp/>expression<sp/>that<sp/>tells<sp/>libpcap<sp/>which<sp/>packets<sp/>we&apos;re</highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>interested<sp/>in<sp/>(i.e.<sp/>which<sp/>packets<sp/>to<sp/>capture).<sp/>Since<sp/>this<sp/>source<sp/>example</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/>focuses<sp/>on<sp/>IP<sp/>and<sp/>TCP,<sp/>we<sp/>use<sp/>the<sp/>expression<sp/>&quot;ip&quot;,<sp/>so<sp/>we<sp/>know<sp/>we&apos;ll<sp/>only</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>encounter<sp/>IP<sp/>packets.<sp/>The<sp/>capture<sp/>filter<sp/>syntax,<sp/>along<sp/>with<sp/>some</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>examples,<sp/>is<sp/>documented<sp/>in<sp/>the<sp/>tcpdump<sp/>man<sp/>page<sp/>under<sp/>&quot;expression.&quot;</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>Below<sp/>are<sp/>a<sp/>few<sp/>simple<sp/>examples:</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>Expression<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Description</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>----------<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-----------</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>ip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture<sp/>all<sp/>IP<sp/>packets.</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/>tcp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture<sp/>only<sp/>TCP<sp/>packets.</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/>tcp<sp/>port<sp/>80<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Capture<sp/>only<sp/>TCP<sp/>packets<sp/>with<sp/>a<sp/>port<sp/>equal<sp/>to<sp/>80.</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/>ip<sp/>host<sp/>10.1.2.3<sp/><sp/><sp/><sp/><sp/>Capture<sp/>all<sp/>IP<sp/>packets<sp/>to<sp/>or<sp/>from<sp/>host<sp/>10.1.2.3.</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="sniffex_8h_1af0b5cfa4242ae7f98ba80fd23ef8afa9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APP_NAME<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;sniffex&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="sniffex_8h_1a97559a7d956f0ee6aeae5f3886a2159e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APP_DESC<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;Sniffer<sp/>example<sp/>using<sp/>libpcap&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="sniffex_8h_1a9cf15f62d0ce89ef66e46d834242993e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APP_COPYRIGHT<sp/><sp/><sp/>&quot;Copyright<sp/>(c)<sp/>2005<sp/>The<sp/>Tcpdump<sp/>Group&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="sniffex_8h_1a4994f979b73469e1e5cb01f62ad2ed57" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>APP_DISCLAIMER<sp/><sp/>&quot;THERE<sp/>IS<sp/>ABSOLUTELY<sp/>NO<sp/>WARRANTY<sp/>FOR<sp/>THIS<sp/>PROGRAM.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;pcap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;errno.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/types.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/socket.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;netinet/in.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;arpa/inet.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>default<sp/>snap<sp/>length<sp/>(maximum<sp/>bytes<sp/>per<sp/>packet<sp/>to<sp/>capture)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224" refid="sniffex_8h_1a3b914b7c1a034667fcde02cd420a7928" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SNAP_LEN<sp/>1518</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>ethernet<sp/>headers<sp/>are<sp/>always<sp/>exactly<sp/>14<sp/>bytes<sp/>[1]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227" refid="sniffex_8h_1a3f5b604fac0a778d4d05140ac486303a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIZE_ETHERNET<sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ethernet<sp/>addresses<sp/>are<sp/>6<sp/>bytes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230" refid="sniffex_8h_1abf4fcaacb1ad2010711b7c880ec2ed20" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ETHER_ADDR_LEN<sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="class_sniffex" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_sniffex" kindref="compound">Sniffex</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Ethernet<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237" refid="struct_sniffex_1_1sniff__ethernet" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sniffex_1_1sniff__ethernet" kindref="compound">sniff_ethernet</ref><sp/>{</highlight></codeline>
<codeline lineno="238" refid="struct_sniffex_1_1sniff__ethernet_1a68600307767c3cfe20ba593423abec8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ethernet_1a68600307767c3cfe20ba593423abec8b" kindref="member">ether_dhost</ref>[<ref refid="sniffex_8h_1abf4fcaacb1ad2010711b7c880ec2ed20" kindref="member">ETHER_ADDR_LEN</ref>];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>destination<sp/>host<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239" refid="struct_sniffex_1_1sniff__ethernet_1af40407403f51872c064c28298441b2d9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ethernet_1af40407403f51872c064c28298441b2d9" kindref="member">ether_shost</ref>[<ref refid="sniffex_8h_1abf4fcaacb1ad2010711b7c880ec2ed20" kindref="member">ETHER_ADDR_LEN</ref>];<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>source<sp/>host<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="struct_sniffex_1_1sniff__ethernet_1a31b8a8e9232feffeeb747f949580753a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__ethernet_1a31b8a8e9232feffeeb747f949580753a" kindref="member">ether_type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IP?<sp/>ARP?<sp/>RARP?<sp/>etc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>IP<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244" refid="struct_sniffex_1_1sniff__ip" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sniffex_1_1sniff__ip" kindref="compound">sniff_ip</ref><sp/>{</highlight></codeline>
<codeline lineno="245" refid="struct_sniffex_1_1sniff__ip_1a64daddec106d5178ffbfe2f07378e438" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ip_1a64daddec106d5178ffbfe2f07378e438" kindref="member">ip_vhl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>&lt;&lt;<sp/>4<sp/>|<sp/>header<sp/>length<sp/>&gt;&gt;<sp/>2<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246" refid="struct_sniffex_1_1sniff__ip_1a2cfa668bb5e7079cc05e0d19d95b3816" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ip_1a2cfa668bb5e7079cc05e0d19d95b3816" kindref="member">ip_tos</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>type<sp/>of<sp/>service<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="struct_sniffex_1_1sniff__ip_1a8ae9deed5b399601307bca07dc59054a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__ip_1a8ae9deed5b399601307bca07dc59054a" kindref="member">ip_len</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>total<sp/>length<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248" refid="struct_sniffex_1_1sniff__ip_1a98026bc0aad86b837f246635ed9b25df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__ip_1a98026bc0aad86b837f246635ed9b25df" kindref="member">ip_id</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>identification<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249" refid="struct_sniffex_1_1sniff__ip_1aa66ee179c411c56586369198edcc7b43" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__ip_1aa66ee179c411c56586369198edcc7b43" kindref="member">ip_off</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>fragment<sp/>offset<sp/>field<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250" refid="sniffex_8h_1a895709708f8f909cf7b7459491d549e7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_RF<sp/>0x8000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reserved<sp/>fragment<sp/>flag<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251" refid="sniffex_8h_1ae2473f4a88d141d5298f92a4335b714a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_DF<sp/>0x4000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>dont<sp/>fragment<sp/>flag<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252" refid="sniffex_8h_1ae8afe1e04bb9bad791443556c3b2cd73" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_MF<sp/>0x2000<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>more<sp/>fragments<sp/>flag<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253" refid="sniffex_8h_1ad059798b16d1f615b5af8770175121ba" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_OFFMASK<sp/>0x1fff<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>mask<sp/>for<sp/>fragmenting<sp/>bits<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="struct_sniffex_1_1sniff__ip_1aea2468d9918eb811586acb71de6870ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ip_1aea2468d9918eb811586acb71de6870ef" kindref="member">ip_ttl</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>time<sp/>to<sp/>live<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255" refid="struct_sniffex_1_1sniff__ip_1a2c06fbd06dc42564a398cec20a6b15b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__ip_1a2c06fbd06dc42564a398cec20a6b15b9" kindref="member">ip_p</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>protocol<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256" refid="struct_sniffex_1_1sniff__ip_1ab50c5a07d672683f1039ba5edcd7d583" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__ip_1ab50c5a07d672683f1039ba5edcd7d583" kindref="member">ip_sum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checksum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257" refid="struct_sniffex_1_1sniff__ip_1abf8550a1a90663dc9f529f50ecee72ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/><sp/></highlight><highlight class="normal">in_addr<sp/>ip_src,<ref refid="struct_sniffex_1_1sniff__ip_1abf8550a1a90663dc9f529f50ecee72ee" kindref="member">ip_dst</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>source<sp/>and<sp/>dest<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="259" refid="sniffex_8h_1a316a88421a4b66af822ec0e097c01f9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_HL(ip)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((ip)-&gt;ip_vhl)<sp/>&amp;<sp/>0x0f)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260" refid="sniffex_8h_1ad79fc88954ed6d1ab77e5fde5e23b864" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>IP_V(ip)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(((ip)-&gt;ip_vhl)<sp/>&gt;&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TCP<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263" refid="class_sniffex_1a83629f6a3ec687dd2bb381e9bf157d4f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>u_int<sp/><ref refid="class_sniffex_1a83629f6a3ec687dd2bb381e9bf157d4f" kindref="member">tcp_seq</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="265" refid="struct_sniffex_1_1sniff__tcp" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_sniffex_1_1sniff__tcp" kindref="compound">sniff_tcp</ref><sp/>{</highlight></codeline>
<codeline lineno="266" refid="struct_sniffex_1_1sniff__tcp_1a3cbc5a34aaffbb66d2e37060bd2ea9b6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a3cbc5a34aaffbb66d2e37060bd2ea9b6" kindref="member">th_sport</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>source<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="struct_sniffex_1_1sniff__tcp_1a98f86dbef1d01db2bd032e1fe99342eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a98f86dbef1d01db2bd032e1fe99342eb" kindref="member">th_dport</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>destination<sp/>port<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268" refid="struct_sniffex_1_1sniff__tcp_1a7adabab3aaed105f0e075d3ce9ad523d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1a83629f6a3ec687dd2bb381e9bf157d4f" kindref="member">tcp_seq</ref><sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a7adabab3aaed105f0e075d3ce9ad523d" kindref="member">th_seq</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sequence<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269" refid="struct_sniffex_1_1sniff__tcp_1a3c946baf5941e2e12af8b56a2570eece" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1a83629f6a3ec687dd2bb381e9bf157d4f" kindref="member">tcp_seq</ref><sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a3c946baf5941e2e12af8b56a2570eece" kindref="member">th_ack</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>acknowledgement<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="struct_sniffex_1_1sniff__tcp_1a27045544602ef965e5a50025f42fbd1d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a27045544602ef965e5a50025f42fbd1d" kindref="member">th_offx2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>data<sp/>offset,<sp/>rsvd<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="sniffex_8h_1a040e084a163464aace3da0ab5673f97b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_OFF(th)<sp/><sp/><sp/><sp/><sp/><sp/>(((th)-&gt;th_offx2<sp/>&amp;<sp/>0xf0)<sp/>&gt;&gt;<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272" refid="struct_sniffex_1_1sniff__tcp_1a2bef60aa797ee914836f6b0007dc3ebb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_char<sp/><sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a2bef60aa797ee914836f6b0007dc3ebb" kindref="member">th_flags</ref>;</highlight></codeline>
<codeline lineno="273" refid="sniffex_8h_1a1cec9b372679734fcd8394d779442ddb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_FIN<sp/><sp/>0x01</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274" refid="sniffex_8h_1a91006117f7ae427b957773ab0e80bfa4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_SYN<sp/><sp/>0x02</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275" refid="sniffex_8h_1a7f2ce15991898c8d3397045087c4381f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_RST<sp/><sp/>0x04</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276" refid="sniffex_8h_1a45b9964096064c9a0c84fbddd2c80d38" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_PUSH<sp/>0x08</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277" refid="sniffex_8h_1a362dae974cf06bab2b79b70f0cde524f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_ACK<sp/><sp/>0x10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278" refid="sniffex_8h_1a7b18ca973f14696013696a00c5235f32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_URG<sp/><sp/>0x20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="sniffex_8h_1acb3203940d8aab3eef7dd8ec1e0112db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_ECE<sp/><sp/>0x40</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280" refid="sniffex_8h_1a427da5535811ecaae82a11869ea9e1d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_CWR<sp/><sp/>0x80</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281" refid="sniffex_8h_1a618dec9145afa92eb20e74a97625f754" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TH_FLAGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(TH_FIN|TH_SYN|TH_RST|TH_ACK|TH_URG|TH_ECE|TH_CWR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="struct_sniffex_1_1sniff__tcp_1aa8b7d8b1967e81a255ec9362f681c721" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__tcp_1aa8b7d8b1967e81a255ec9362f681c721" kindref="member">th_win</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>window<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="struct_sniffex_1_1sniff__tcp_1a69830e35f22fcd1b9051afbd4e633fc0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a69830e35f22fcd1b9051afbd4e633fc0" kindref="member">th_sum</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>checksum<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284" refid="struct_sniffex_1_1sniff__tcp_1a9f030cb6718b8d828f242d0464560761" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>u_short<sp/><ref refid="struct_sniffex_1_1sniff__tcp_1a9f030cb6718b8d828f242d0464560761" kindref="member">th_urp</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>urgent<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1a3d4ef3c90e55035eadca2d577004cd14" kindref="member">got_packet</ref>(u_char<sp/>*args,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>pcap_pkthdr<sp/>*header,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u_char<sp/>*packet);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1a1b24163d441d38f3672800c3de85d149" kindref="member">print_payload</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u_char<sp/>*payload,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glad_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1aec1e34cb4b2ff906304f957c205707ea" kindref="member">print_hex_ascii_line</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>u_char<sp/>*payload,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glad_8h_1a652168017ea9a8bbcead03d5c16269fb" kindref="member">len</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="glad_8h_1ac915cd848f42b26af51745f204a3b9af" kindref="member">offset</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1ab32951f576e7cd62caf4fe1c5b085b4e" kindref="member">print_app_banner</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_sniffex_1aea81794fe2ac6e2b857eef01c3b109e5" kindref="member">print_app_usage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_sniffex_1a41e146d588c285c94c0beee223d8552b" kindref="member">sniffexmain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="304"><highlight class="normal">};</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//<sp/>BRAINHARMONICS_SNIFFEX_H</highlight></codeline>
    </programlisting>
    <location file="BrainHarmonics/sniffex.h"/>
  </compounddef>
</doxygen>
