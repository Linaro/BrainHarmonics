<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_graph" kind="struct" language="C++" prot="public">
    <compoundname>Graph</compoundname>
    <templateparamlist>
      <param>
        <type>typename L</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="struct_graph_1aea7d42bb67163fe692353674435a1426" prot="public" static="no">
        <type>L</type>
        <definition>typedef L Graph&lt; L &gt;::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/implementation orig.cpp" line="34" column="1" bodyfile="BrainHarmonics/implementation orig.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" prot="public" static="no">
        <type>vector&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref> &gt;::<ref refid="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" kindref="member">iterator</ref></type>
        <definition>typedef vector&lt;Location&gt;::iterator Graph&lt; L &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/implementation orig.cpp" line="35" column="1" bodyfile="BrainHarmonics/implementation orig.cpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_graph_1aea7d42bb67163fe692353674435a1426" prot="public" static="no">
        <type>L</type>
        <definition>typedef L Graph&lt; L &gt;::Location</definition>
        <argsstring></argsstring>
        <name>Location</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/search.cpp" line="40" column="1" bodyfile="BrainHarmonics/search.cpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" prot="public" static="no">
        <type>vector&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref> &gt;::<ref refid="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" kindref="member">iterator</ref></type>
        <definition>typedef vector&lt;Location&gt;::iterator Graph&lt; L &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/search.cpp" line="41" column="1" bodyfile="BrainHarmonics/search.cpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_graph_1a8b01818e086835dc5d24ec4082afeef0" prot="public" static="no" mutable="no">
        <type>unordered_map&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref>, vector&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref> &gt; &gt;</type>
        <definition>unordered_map&lt; Location, vector&lt; Location &gt; &gt; Graph&lt; L &gt;::edges</definition>
        <argsstring></argsstring>
        <name>edges</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/implementation orig.cpp" line="36" column="1" bodyfile="BrainHarmonics/implementation orig.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_graph_1a8389c308ee673e63d574e0a30191662e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const vector&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref> &gt;</type>
        <definition>const vector&lt;Location&gt; Graph&lt; L &gt;::neighbors</definition>
        <argsstring>(Location id)</argsstring>
        <name>neighbors</name>
        <param>
          <type><ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/implementation orig.cpp" line="38" column="1" bodyfile="BrainHarmonics/implementation orig.cpp" bodystart="38" bodyend="40"/>
        <referencedby refid="implementation_01orig_8cpp_1ae5dda031f20466b1a419ca983a3dc474" compoundref="implementation_01orig_8cpp" startline="210" endline="239">dijkstra_search</referencedby>
        <referencedby refid="implementation_01orig_8cpp_1a9b1566d7e8a1017f075720664601abb0" compoundref="implementation_01orig_8cpp" startline="267" endline="297">a_star_search</referencedby>
      </memberdef>
      <memberdef kind="function" id="struct_graph_1a8389c308ee673e63d574e0a30191662e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const vector&lt; <ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref> &gt;</type>
        <definition>const vector&lt;Location&gt; Graph&lt; L &gt;::neighbors</definition>
        <argsstring>(Location id)</argsstring>
        <name>neighbors</name>
        <param>
          <type><ref refid="struct_graph_1aea7d42bb67163fe692353674435a1426" kindref="member">Location</ref></type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/search.cpp" line="44" column="1" bodyfile="BrainHarmonics/search.cpp" bodystart="44" bodyend="46"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="169">
        <label>Graph&lt; L &gt;</label>
        <link refid="struct_graph"/>
        <childnode refid="170" relation="usage">
          <edgelabel>edges</edgelabel>
        </childnode>
      </node>
      <node id="170">
        <label>unordered_map&lt; Location, vector&lt; Location &gt; &gt;</label>
      </node>
    </collaborationgraph>
    <location file="BrainHarmonics/implementation orig.cpp" line="33" column="1" bodyfile="BrainHarmonics/implementation orig.cpp" bodystart="33" bodyend="41"/>
    <listofallmembers>
      <member refid="struct_graph_1a8b01818e086835dc5d24ec4082afeef0" prot="public" virt="non-virtual"><scope>Graph</scope><name>edges</name></member>
      <member refid="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" prot="public" virt="non-virtual"><scope>Graph</scope><name>iterator</name></member>
      <member refid="struct_graph_1af43d6412d7a6034eaeacde8ca1c1d984" prot="public" virt="non-virtual"><scope>Graph</scope><name>iterator</name></member>
      <member refid="struct_graph_1aea7d42bb67163fe692353674435a1426" prot="public" virt="non-virtual"><scope>Graph</scope><name>Location</name></member>
      <member refid="struct_graph_1aea7d42bb67163fe692353674435a1426" prot="public" virt="non-virtual"><scope>Graph</scope><name>Location</name></member>
      <member refid="struct_graph_1a8389c308ee673e63d574e0a30191662e" prot="public" virt="non-virtual"><scope>Graph</scope><name>neighbors</name></member>
      <member refid="struct_graph_1a8389c308ee673e63d574e0a30191662e" prot="public" virt="non-virtual"><scope>Graph</scope><name>neighbors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
