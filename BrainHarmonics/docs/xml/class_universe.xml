<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_universe" kind="class" language="C++" prot="public">
    <compoundname>Universe</compoundname>
    <derivedcompoundref refid="class_abstraction" prot="public" virt="non-virtual">Abstraction</derivedcompoundref>
    <derivedcompoundref refid="class_app_timer" prot="public" virt="virtual">AppTimer</derivedcompoundref>
    <derivedcompoundref refid="class_cognitive_network" prot="public" virt="non-virtual">CognitiveNetwork</derivedcompoundref>
    <derivedcompoundref refid="class_composite_force_particle" prot="public" virt="non-virtual">CompositeForceParticle</derivedcompoundref>
    <derivedcompoundref refid="class_dimension" prot="public" virt="non-virtual">Dimension</derivedcompoundref>
    <derivedcompoundref refid="class_elementary_force" prot="public" virt="non-virtual">ElementaryForce</derivedcompoundref>
    <derivedcompoundref refid="class_elementary_particle" prot="public" virt="non-virtual">ElementaryParticle</derivedcompoundref>
    <derivedcompoundref refid="class_law" prot="public" virt="non-virtual">Law</derivedcompoundref>
    <derivedcompoundref refid="class_line" prot="public" virt="non-virtual">Line</derivedcompoundref>
    <derivedcompoundref refid="class_matter" prot="public" virt="non-virtual">Matter</derivedcompoundref>
    <derivedcompoundref refid="class_monomer" prot="public" virt="non-virtual">Monomer</derivedcompoundref>
    <derivedcompoundref refid="class_point" prot="public" virt="non-virtual">Point</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_solid" prot="public" virt="non-virtual">Solid</derivedcompoundref>
    <includes refid="universe_8h" local="no">universe.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_universe_1aeccab978b0db45b64015aebdf44fa2d8" prot="private" static="no" mutable="no">
        <type>friend</type>
        <definition>friend Universe::Dimension</definition>
        <argsstring></argsstring>
        <name>Dimension</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="70" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1af8893059e57118d5da20d512b1df4d20" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Universe::object_initialised</definition>
        <argsstring></argsstring>
        <name>object_initialised</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="304" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a76279bc43f1ce7a7fc4ee2f6a2cf4228" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::duration_since_last_event</definition>
        <argsstring></argsstring>
        <name>duration_since_last_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="305" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="305" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a6c530f6d3647d078794b1060afbb1acf" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::default_object_type</definition>
        <argsstring></argsstring>
        <name>default_object_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="306" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="306" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1ac7a26cb9cb97f61bb270a7bbef4a2ae2" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::test_subject_one</definition>
        <argsstring></argsstring>
        <name>test_subject_one</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="307" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="307" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1ae4768ac314bcab322ffe484658b2bb06" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::test_subject_two</definition>
        <argsstring></argsstring>
        <name>test_subject_two</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="308" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="308" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a4332e3210a61dcfcb26e16b9f604d489" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::universe_type</definition>
        <argsstring></argsstring>
        <name>universe_type</name>
        <briefdescription>
<para>Member variable &quot;universe_type&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="309" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a86742eff738f3d7812da8581a59f0812" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Universe::universe_energy</definition>
        <argsstring></argsstring>
        <name>universe_energy</name>
        <briefdescription>
<para>Member variable &quot;universe_energy&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="310" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="310" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a0406fae45a576526b0ea78b2b5a74ebb" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double Universe::scaled_time</definition>
        <argsstring></argsstring>
        <name>scaled_time</name>
        <briefdescription>
<para>Member variable &quot;scaled_time&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="311" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="311" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a49ef0c3c2bd9ec438f5d9703c6aaa402" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Universe::time_object_created</definition>
        <argsstring></argsstring>
        <name>time_object_created</name>
        <briefdescription>
<para>Member variable &quot;time_object_created&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="312" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="312" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1aacac76865f3600d5f308b83db9809184" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Universe::object_expiration</definition>
        <argsstring></argsstring>
        <name>object_expiration</name>
        <briefdescription>
<para>Member variable &quot;object_expiration&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="313" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="313" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1ad31a1d2865f16b1b8f4c597e116416e8" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Universe::previous_event_time</definition>
        <argsstring></argsstring>
        <name>previous_event_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="314" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="314" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1acb8bc2b083f0227a0427a5fbe6109286" prot="private" static="no" mutable="no">
        <type>std::chrono::nanoseconds</type>
        <definition>std::chrono::nanoseconds Universe::object_lifespan</definition>
        <argsstring></argsstring>
        <name>object_lifespan</name>
        <briefdescription>
<para>Member variable &quot;object_lifespan&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="315" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="315" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_universe_1ab64777e25c83216e7a91d2761a10463c" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Universe::object_energy</definition>
        <argsstring></argsstring>
        <name>object_energy</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="281" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="281" bodyend="-1"/>
        <referencedby refid="class_composite_force_particle_1a69b47aaf17ab6faa396c2f6e6c85b2e3" compoundref="compositeforceparticle_8cc" startline="71" endline="110">CompositeForceParticle::Update</referencedby>
        <referencedby refid="class_elementary_force_1a855c26eb8a542ff633af66940da5f90b" compoundref="elementaryforce_8cc" startline="80" endline="109">ElementaryForce::Update</referencedby>
        <referencedby refid="class_elementary_particle_1abf5114c3d032bc9511a14aa7368ec450" compoundref="elementaryparticle_8cc" startline="168" endline="197">ElementaryParticle::Update</referencedby>
        <referencedby refid="class_law_1a56541ec0b82b8a7c377ae2e6b444205c" compoundref="law_8cc" startline="20" endline="58">Law::ResetParameters</referencedby>
        <referencedby refid="class_law_1a0240b10c679b671039dbf10771342ea7" compoundref="law_8cc" startline="64" endline="98">Law::Update</referencedby>
        <referencedby refid="class_line_1af1756d1500ab0a5616313be6e213015a" compoundref="line_8cc" startline="19" endline="57">Line::ResetParameters</referencedby>
        <referencedby refid="class_line_1a8c6dece66f5cd93ce40134002a40f505" compoundref="line_8cc" startline="59" endline="93">Line::Update</referencedby>
        <referencedby refid="class_matter_1adfd93d323e43d09fa8d8b7cdd2258611" compoundref="matter_8cc" startline="20" endline="58">Matter::ResetParameters</referencedby>
        <referencedby refid="class_matter_1a56898dd51e5a675832bc82de285b3ef7" compoundref="matter_8cc" startline="60" endline="94">Matter::Update</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a544742864485b9ac052f3b241ae5c6b4" compoundref="membrane_8cc" startline="194" endline="213">Membrane::Growth</referencedby>
        <referencedby refid="class_membrane_1a4af9710ea7f0bc6f1b6b6b6462612d51" compoundref="membrane_8cc" startline="215" endline="275">Membrane::Update</referencedby>
        <referencedby refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">Monomer::ResetParameters</referencedby>
        <referencedby refid="class_monomer_1a48dc2ffb5da8cf3dc3f4f56bba674de6" compoundref="monomer_8cc" startline="83" endline="117">Monomer::Update</referencedby>
        <referencedby refid="class_point_1a123c78bef71f74d71bc833709a38709c" compoundref="point_8cc" startline="20" endline="90">Point::ResetParameters</referencedby>
        <referencedby refid="class_point_1a7ad2d1933410012c59bffbd4ac611279" compoundref="point_8cc" startline="445" endline="481">Point::Update</referencedby>
        <referencedby refid="class_polygon_1a0e2824d12cd6b18c8b14c64ef4b2bf97" compoundref="polygon_8cc" startline="19" endline="56">Polygon::ResetParameters</referencedby>
        <referencedby refid="class_polygon_1ab3fe58d8ffce2e16589958def88aa188" compoundref="polygon_8cc" startline="58" endline="88">Polygon::Update</referencedby>
        <referencedby refid="class_polyhedron_1ae90c347cfb8ca8028a260e88bef2b45c" compoundref="polyhedron_8cc" startline="22" endline="115">Polyhedron::ResetParameters</referencedby>
        <referencedby refid="class_polyhedron_1a5fdc8c91719799904b8a1ccef535a42c" compoundref="polyhedron_8cc" startline="265" endline="298">Polyhedron::Update</referencedby>
        <referencedby refid="class_polymer_1aa20f1e5c79e8631afa291569d5030103" compoundref="polymer_8cc" startline="19" endline="56">Polymer::ResetParameters</referencedby>
        <referencedby refid="class_polymer_1ac82f603c3010212122008c4ed3953045" compoundref="polymer_8cc" startline="58" endline="88">Polymer::Update</referencedby>
        <referencedby refid="class_quad_1af7c18022d7db1ad20bb7a1e1bd1ffb90" compoundref="quad_8cc" startline="19" endline="56">Quad::ResetParameters</referencedby>
        <referencedby refid="class_quad_1a0710e6a7d77a34fdadbd2c36d03ade62" compoundref="quad_8cc" startline="58" endline="88">Quad::Update</referencedby>
        <referencedby refid="class_solid_1ac43dc78fa7f6a3348fc99751ff6bbc52" compoundref="solid_8cc" startline="20" endline="94">Solid::ResetParameters</referencedby>
        <referencedby refid="class_solid_1a248a5eab9fa0c584af7cdec2f86dc3a3" compoundref="solid_8cc" startline="244" endline="277">Solid::Update</referencedby>
        <referencedby refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" compoundref="universe_8cc" startline="138" endline="148">IsDead</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a17c8d799331a5b32837f285c12cbe858" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double Universe::object_energy_threshold</definition>
        <argsstring></argsstring>
        <name>object_energy_threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="282" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="282" bodyend="-1"/>
        <referencedby refid="class_law_1a56541ec0b82b8a7c377ae2e6b444205c" compoundref="law_8cc" startline="20" endline="58">Law::ResetParameters</referencedby>
        <referencedby refid="class_line_1af1756d1500ab0a5616313be6e213015a" compoundref="line_8cc" startline="19" endline="57">Line::ResetParameters</referencedby>
        <referencedby refid="class_matter_1adfd93d323e43d09fa8d8b7cdd2258611" compoundref="matter_8cc" startline="20" endline="58">Matter::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a544742864485b9ac052f3b241ae5c6b4" compoundref="membrane_8cc" startline="194" endline="213">Membrane::Growth</referencedby>
        <referencedby refid="class_membrane_1a4af9710ea7f0bc6f1b6b6b6462612d51" compoundref="membrane_8cc" startline="215" endline="275">Membrane::Update</referencedby>
        <referencedby refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">Monomer::ResetParameters</referencedby>
        <referencedby refid="class_point_1a123c78bef71f74d71bc833709a38709c" compoundref="point_8cc" startline="20" endline="90">Point::ResetParameters</referencedby>
        <referencedby refid="class_soma_1a0b45cc454565027bb25daa1396056a7e" compoundref="soma_8h" startline="56" endline="56">Soma::GetEnergyThreshold</referencedby>
        <referencedby refid="class_soma_1ae2876b37909f37e8922ce364eb06491f" compoundref="soma_8h" startline="69" endline="69">Soma::SetEnergyThreshold</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a64f4f4025c9be1d84492c766a002a6d4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int Universe::object_size</definition>
        <argsstring></argsstring>
        <name>object_size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="283" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="283" bodyend="-1"/>
        <referencedby refid="class_law_1a56541ec0b82b8a7c377ae2e6b444205c" compoundref="law_8cc" startline="20" endline="58">Law::ResetParameters</referencedby>
        <referencedby refid="class_line_1af1756d1500ab0a5616313be6e213015a" compoundref="line_8cc" startline="19" endline="57">Line::ResetParameters</referencedby>
        <referencedby refid="class_matter_1adfd93d323e43d09fa8d8b7cdd2258611" compoundref="matter_8cc" startline="20" endline="58">Matter::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a544742864485b9ac052f3b241ae5c6b4" compoundref="membrane_8cc" startline="194" endline="213">Membrane::Growth</referencedby>
        <referencedby refid="class_membrane_1a4af9710ea7f0bc6f1b6b6b6462612d51" compoundref="membrane_8cc" startline="215" endline="275">Membrane::Update</referencedby>
        <referencedby refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">Monomer::ResetParameters</referencedby>
        <referencedby refid="class_point_1a123c78bef71f74d71bc833709a38709c" compoundref="point_8cc" startline="20" endline="90">Point::ResetParameters</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" prot="public" static="no" mutable="no">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe* Universe::time_dimension_pointer</definition>
        <argsstring></argsstring>
        <name>time_dimension_pointer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="284" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="284" bodyend="-1"/>
        <referencedby refid="class_app_timer_1af0836d131aa78b6812930199a5c7f9bd" compoundref="apptimer_8h" startline="32" endline="46">AppTimer::AppTimer</referencedby>
        <referencedby refid="class_axon_1a472ee760a1727072afaff0035d1eedd9" compoundref="axon_8cc" startline="197" endline="243">Axon::Update</referencedby>
        <referencedby refid="class_axon_bouton_1a26f89bac681b8f0894fe1ae249733917" compoundref="axonbouton_8cc" startline="184" endline="251">AxonBouton::Update</referencedby>
        <referencedby refid="class_axon_branch_1a5a80bcccdc2be9f77fca25131937b52f" compoundref="axonbranch_8cc" startline="196" endline="235">AxonBranch::Update</referencedby>
        <referencedby refid="class_axon_hillock_1a5a6a6a93a98b32c303b9ee6320c09909" compoundref="axonhillock_8cc" startline="197" endline="255">AxonHillock::Update</referencedby>
        <referencedby refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" compoundref="cognitivenetwork_8cc" startline="32" endline="95">CognitiveNetwork::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_output_1ab43b79aaadf75d18512c4379a77542cd" compoundref="cognitiveoutput_8cc" startline="19" endline="64">CognitiveOutput::ResetParameters</referencedby>
        <referencedby refid="class_composite_force_particle_1a8c311b3e35f6def3a532346a50c15281" compoundref="compositeforceparticle_8h" startline="33" endline="47">CompositeForceParticle::CompositeForceParticle</referencedby>
        <referencedby refid="class_elementary_force_1a1b466cc9aeb317161a7632cb5651a537" compoundref="elementaryforce_8h" startline="34" endline="48">ElementaryForce::ElementaryForce</referencedby>
        <referencedby refid="class_elementary_particle_1a0b43033247b36096d0de2a7553c620a9" compoundref="elementaryparticle_8h" startline="34" endline="48">ElementaryParticle::ElementaryParticle</referencedby>
        <referencedby refid="class_matter_1a724543a0439d3099f5fc0eae68110b75" compoundref="matter_8h" startline="34" endline="48">Matter::Matter</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_neuron_1a4c154fecb0b689d7da9d8d274f067ccf" compoundref="neuron_8cc" startline="27" endline="85">Neuron::ResetParameters</referencedby>
        <referencedby refid="class_orbital_1acc6137a5a79be91a255f685a2f065330" compoundref="orbital_8cc" startline="26" endline="74">Orbital::ResetParameters</referencedby>
        <referencedby refid="class_point_1abbc76ed1b437c982eb607ec165ecfa47" compoundref="point_8h" startline="40" endline="54">Point::Point</referencedby>
        <referencedby refid="class_solid_1ac43dc78fa7f6a3348fc99751ff6bbc52" compoundref="solid_8cc" startline="20" endline="94">Solid::ResetParameters</referencedby>
        <referencedby refid="class_soma_1a82f016dc126f7d1053e5eb455d28c44b" compoundref="soma_8cc" startline="27" endline="90">Soma::ResetParameters</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::cognitive_network_list</definition>
        <argsstring></argsstring>
        <name>cognitive_network_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="291" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="291" bodyend="-1"/>
        <referencedby refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" compoundref="universe_8cc" startline="367" endline="375">AddCognitiveNetworks</referencedby>
        <referencedby refid="class_universe_1a06968a24194280a43f077c5b77379ea8" compoundref="universe_8cc" startline="382" endline="385">GetCognitiveNetworks</referencedby>
        <referencedby refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" compoundref="universe_8cc" startline="387" endline="390">GetCognitiveNetwork</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1ae9795d06e406c4322637825aa545aa2f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::composite_forceparticle_list</definition>
        <argsstring></argsstring>
        <name>composite_forceparticle_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="292" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="292" bodyend="-1"/>
        <referencedby refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" compoundref="universe_8cc" startline="237" endline="245">AddCompositeForceParticles</referencedby>
        <referencedby refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" compoundref="universe_8cc" startline="252" endline="255">GetCompositeForceParticles</referencedby>
        <referencedby refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" compoundref="universe_8cc" startline="257" endline="260">GetCompositeForceParticle</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a159461f7098c3a30274f54c8acff6eac" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::dimension_list</definition>
        <argsstring></argsstring>
        <name>dimension_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="293" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="293" bodyend="-1"/>
        <referencedby refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" compoundref="universe_8cc" startline="151" endline="164">AddDimensions</referencedby>
        <referencedby refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" compoundref="universe_8cc" startline="174" endline="177">GetDimensions</referencedby>
        <referencedby refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" compoundref="universe_8cc" startline="179" endline="182">GetDimension</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::elementary_force_list</definition>
        <argsstring></argsstring>
        <name>elementary_force_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="294" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="294" bodyend="-1"/>
        <referencedby refid="class_universe_1a81d294300346e9f901836ab609cce942" compoundref="universe_8cc" startline="211" endline="219">AddElementaryForces</referencedby>
        <referencedby refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" compoundref="universe_8cc" startline="226" endline="229">GetElementaryForces</referencedby>
        <referencedby refid="class_universe_1a9506017d944cb64e67567477c1505a53" compoundref="universe_8cc" startline="231" endline="234">GetElementaryForce</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::elementary_particle_list</definition>
        <argsstring></argsstring>
        <name>elementary_particle_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="295" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="295" bodyend="-1"/>
        <referencedby refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" compoundref="universe_8cc" startline="185" endline="193">AddElementaryParticles</referencedby>
        <referencedby refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" compoundref="universe_8cc" startline="200" endline="203">GetElementaryParticles</referencedby>
        <referencedby refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" compoundref="universe_8cc" startline="205" endline="208">GetElementaryParticle</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::matter_list</definition>
        <argsstring></argsstring>
        <name>matter_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="296" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="296" bodyend="-1"/>
        <referencedby refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" compoundref="universe_8cc" startline="263" endline="271">AddMatters</referencedby>
        <referencedby refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" compoundref="universe_8cc" startline="278" endline="281">GetMatters</referencedby>
        <referencedby refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" compoundref="universe_8cc" startline="283" endline="286">GetMatter</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::monomer_list</definition>
        <argsstring></argsstring>
        <name>monomer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="297" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="297" bodyend="-1"/>
        <referencedby refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" compoundref="universe_8cc" startline="289" endline="297">AddMonomers</referencedby>
        <referencedby refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" compoundref="universe_8cc" startline="304" endline="307">GetMonomers</referencedby>
        <referencedby refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" compoundref="universe_8cc" startline="309" endline="312">GetMonomer</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::polymer_list</definition>
        <argsstring></argsstring>
        <name>polymer_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="298" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="298" bodyend="-1"/>
        <referencedby refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" compoundref="universe_8cc" startline="315" endline="323">AddPolymers</referencedby>
        <referencedby refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" compoundref="universe_8cc" startline="330" endline="333">GetPolymers</referencedby>
        <referencedby refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" compoundref="universe_8cc" startline="335" endline="338">GetPolymer</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::solid_list</definition>
        <argsstring></argsstring>
        <name>solid_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="299" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="299" bodyend="-1"/>
        <referencedby refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" compoundref="universe_8cc" startline="341" endline="349">AddSolids</referencedby>
        <referencedby refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" compoundref="universe_8cc" startline="356" endline="359">GetSolids</referencedby>
        <referencedby refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" compoundref="universe_8cc" startline="361" endline="364">GetSolid</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt;Universe*&gt; Universe::point_list</definition>
        <argsstring></argsstring>
        <name>point_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="300" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="300" bodyend="-1"/>
        <referencedby refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" compoundref="universe_8cc" startline="393" endline="401">AddPoints</referencedby>
        <referencedby refid="class_universe_1a765c6c658b7a465cd92418690db846ae" compoundref="universe_8cc" startline="408" endline="411">GetPoints</referencedby>
        <referencedby refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" compoundref="universe_8cc" startline="413" endline="416">GetPoint</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_universe_1a4d137a146dd3c2514dfb692dfbab6984" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Universe::Universe</definition>
        <argsstring>()</argsstring>
        <name>Universe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="76" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1210ce56049f1fc67f53aeda223bb82b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Universe::Universe</definition>
        <argsstring>(int interim_object_type)</argsstring>
        <name>Universe</name>
        <param>
          <type>int</type>
          <declname>interim_object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="78" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Universe::Universe</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int object_type)</argsstring>
        <name>Universe</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="81" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="81" bodyend="90"/>
        <references refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" compoundref="universe_8cc" startline="57" endline="61">Creation</references>
        <references refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</references>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Universe::~Universe</definition>
        <argsstring>()</argsstring>
        <name>~Universe</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="92" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="92" bodyend="104"/>
        <references refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" compoundref="universe_8h" startline="300">point_list</references>
        <references refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" compoundref="universe_8h" startline="299">solid_list</references>
        <references refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" compoundref="universe_8h" startline="296">matter_list</references>
        <references refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" compoundref="universe_8h" startline="292">composite_forceparticle_list</references>
        <references refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" compoundref="universe_8h" startline="294">elementary_force_list</references>
        <references refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" compoundref="universe_8h" startline="295">elementary_particle_list</references>
        <references refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" compoundref="universe_8h" startline="298">polymer_list</references>
        <references refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" compoundref="universe_8h" startline="297">monomer_list</references>
        <references refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" compoundref="universe_8h" startline="291">cognitive_network_list</references>
        <references refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" compoundref="universe_8h" startline="293">dimension_list</references>
        <references refid="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" compoundref="universe_8cc" startline="30" endline="33">GetEnergy</references>
        <references refid="class_universe_1a868250e67d0fcb2483aa8bdd73c40a02" compoundref="universe_8cc" startline="35" endline="38">SetEnergy</references>
        <references refid="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" compoundref="universe_8cc" startline="40" endline="49">UseEnergy</references>
        <references refid="class_universe_1aeda74e3902c0e56c0c09779854045cde" compoundref="universe_8cc" startline="51" endline="55">ReturnEnergy</references>
        <references refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" compoundref="universe_8cc" startline="57" endline="61">Creation</references>
        <references refid="class_universe_1a2274a54fbdc7504c897e4272162bf17a" compoundref="universe_8cc" startline="63" endline="67">SetObjectType</references>
        <references refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</references>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">TheTimeNow</references>
        <references refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" compoundref="universe_8cc" startline="116" endline="119">TheCalculatedTimeNow</references>
        <references refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" compoundref="universe_8cc" startline="121" endline="125">SetLifespan</references>
        <references refid="class_universe_1a982502e46868a00a9111738ccc9355c2" compoundref="universe_8cc" startline="127" endline="135">ExtendLife</references>
        <references refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" compoundref="universe_8cc" startline="138" endline="148">IsDead</references>
        <references refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" compoundref="universe_8cc" startline="151" endline="164">AddDimensions</references>
        <references refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" compoundref="universe_8cc" startline="166" endline="172">AddDimension</references>
        <references refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" compoundref="universe_8cc" startline="174" endline="177">GetDimensions</references>
        <references refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" compoundref="universe_8cc" startline="179" endline="182">GetDimension</references>
        <references refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" compoundref="universe_8cc" startline="185" endline="193">AddElementaryParticles</references>
        <references refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" compoundref="universe_8cc" startline="195" endline="198">AddElementaryParticle</references>
        <references refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" compoundref="universe_8cc" startline="200" endline="203">GetElementaryParticles</references>
        <references refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" compoundref="universe_8cc" startline="205" endline="208">GetElementaryParticle</references>
        <references refid="class_universe_1a81d294300346e9f901836ab609cce942" compoundref="universe_8cc" startline="211" endline="219">AddElementaryForces</references>
        <references refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" compoundref="universe_8cc" startline="221" endline="224">AddElementaryForce</references>
        <references refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" compoundref="universe_8cc" startline="226" endline="229">GetElementaryForces</references>
        <references refid="class_universe_1a9506017d944cb64e67567477c1505a53" compoundref="universe_8cc" startline="231" endline="234">GetElementaryForce</references>
        <references refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" compoundref="universe_8cc" startline="237" endline="245">AddCompositeForceParticles</references>
        <references refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" compoundref="universe_8cc" startline="247" endline="250">AddCompositeForceParticle</references>
        <references refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" compoundref="universe_8cc" startline="252" endline="255">GetCompositeForceParticles</references>
        <references refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" compoundref="universe_8cc" startline="257" endline="260">GetCompositeForceParticle</references>
        <references refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" compoundref="universe_8cc" startline="263" endline="271">AddMatters</references>
        <references refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" compoundref="universe_8cc" startline="273" endline="276">AddMatter</references>
        <references refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" compoundref="universe_8cc" startline="278" endline="281">GetMatters</references>
        <references refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" compoundref="universe_8cc" startline="283" endline="286">GetMatter</references>
        <references refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" compoundref="universe_8cc" startline="289" endline="297">AddMonomers</references>
        <references refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" compoundref="universe_8cc" startline="299" endline="302">AddMonomer</references>
        <references refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" compoundref="universe_8cc" startline="304" endline="307">GetMonomers</references>
        <references refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" compoundref="universe_8cc" startline="309" endline="312">GetMonomer</references>
        <references refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" compoundref="universe_8cc" startline="315" endline="323">AddPolymers</references>
        <references refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" compoundref="universe_8cc" startline="325" endline="328">AddPolymer</references>
        <references refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" compoundref="universe_8cc" startline="330" endline="333">GetPolymers</references>
        <references refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" compoundref="universe_8cc" startline="335" endline="338">GetPolymer</references>
        <references refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" compoundref="universe_8cc" startline="341" endline="349">AddSolids</references>
        <references refid="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" compoundref="universe_8cc" startline="351" endline="354">AddSolid</references>
        <references refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" compoundref="universe_8cc" startline="356" endline="359">GetSolids</references>
        <references refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" compoundref="universe_8cc" startline="361" endline="364">GetSolid</references>
        <references refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" compoundref="universe_8cc" startline="367" endline="375">AddCognitiveNetworks</references>
        <references refid="class_universe_1ab682307c963836cd81b35b5604bd7064" compoundref="universe_8cc" startline="377" endline="380">AddCognitiveNetwork</references>
        <references refid="class_universe_1a06968a24194280a43f077c5b77379ea8" compoundref="universe_8cc" startline="382" endline="385">GetCognitiveNetworks</references>
        <references refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" compoundref="universe_8cc" startline="387" endline="390">GetCognitiveNetwork</references>
        <references refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" compoundref="universe_8cc" startline="393" endline="401">AddPoints</references>
        <references refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" compoundref="universe_8cc" startline="403" endline="406">AddPoint</references>
        <references refid="class_universe_1a765c6c658b7a465cd92418690db846ae" compoundref="universe_8cc" startline="408" endline="411">GetPoints</references>
        <references refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" compoundref="universe_8cc" startline="413" endline="416">GetPoint</references>
        <references refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" compoundref="universe_8cc" startline="418" endline="479">UpdateCycle</references>
        <references refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</references>
        <references refid="class_universe_1a901e16db5e8af258c66af7ac75662fe0" compoundref="universe_8cc" startline="600" endline="600">AddTemporalAdjustment</references>
        <references refid="class_universe_1a15aa20218286fd11ecb9b792dfb63be3" compoundref="universe_8cc" startline="602" endline="602">AdjustCounters</references>
        <references refid="class_universe_1a3b3da7c86a7b75e5e5c0b7972ac82a87" compoundref="universe_8cc" startline="604" endline="604">SetCharge</references>
        <references refid="class_universe_1ae2ae1c3b3e4cde2c18f5f6a814761ec8" compoundref="universe_8cc" startline="605" endline="605">SetSpin</references>
        <references refid="class_universe_1ab0404e774ee0ed66b597ff5b8e989446" compoundref="universe_8cc" startline="606" endline="606">GetGravitation</references>
        <references refid="class_universe_1a4476b7e0a3fc1764909f556257fd9ec7" compoundref="universe_8cc" startline="607" endline="607">GetWeak</references>
        <references refid="class_universe_1a645299738e6b798a037f2a15a2e7cf4d" compoundref="universe_8cc" startline="608" endline="608">GetWeakElectroweak</references>
        <references refid="class_universe_1a63b850ef3f3394313353109d222bf5d1" compoundref="universe_8cc" startline="609" endline="609">GetElectromagnetic</references>
        <references refid="class_universe_1a9f099605c082e7fa755787a6a8cab7ba" compoundref="universe_8cc" startline="610" endline="610">GetElectromagneticElectroweak</references>
        <references refid="class_universe_1acb453ce71da418c5b5617fecede9571b" compoundref="universe_8cc" startline="611" endline="611">GetStrong</references>
        <references refid="class_universe_1ab44daccba01ee7e3cf9b50bba83dd19e" compoundref="universe_8cc" startline="612" endline="612">GetStrongFundamental</references>
        <references refid="class_universe_1af0f4b81950061e63c2855eb40957a5b1" compoundref="universe_8cc" startline="613" endline="613">GetStrongResidual</references>
        <references refid="class_universe_1a76c0b5e63c2a7d1988c44db341c3d64c" compoundref="universe_8cc" startline="615" endline="615">ApplyGravitation</references>
        <references refid="class_universe_1a6d1226b3adec3c42a833afdbb6a65a92" compoundref="universe_8cc" startline="616" endline="616">ApplyWeak</references>
        <references refid="class_universe_1a46a906baabb63e5d31f8b48ea1fae52e" compoundref="universe_8cc" startline="617" endline="617">ApplyWeakElectroweak</references>
        <references refid="class_universe_1a1f787da78fa196ba635db21a9e91dabb" compoundref="universe_8cc" startline="618" endline="618">ApplyElectromagnetic</references>
        <references refid="class_universe_1a4c36c1ab30db993307f88363dde5e8c5" compoundref="universe_8cc" startline="619" endline="619">ApplyElectromagneticElectroweak</references>
        <references refid="class_universe_1a906a88b37f10bfa630bef49dfd0e907a" compoundref="universe_8cc" startline="620" endline="620">ApplyStrong</references>
        <references refid="class_universe_1a62789bcff84bd750b0366004381e2fdd" compoundref="universe_8cc" startline="621" endline="621">ApplyStrongFundamental</references>
        <references refid="class_universe_1af7becebb347be9a85541d96a3eca1ca7" compoundref="universe_8cc" startline="622" endline="622">ApplyStrongResidual</references>
        <references refid="class_universe_1aa22202ae740eb1355529afcb13285e91" compoundref="universe_8cc" startline="624" endline="624">SetCounter</references>
        <references refid="class_universe_1ae0cb8d86b2fbb8396d605160344b42f5" compoundref="universe_8cc" startline="625" endline="625">SetGravitation</references>
        <references refid="class_universe_1a0f5cd04081b41ee931c0557dc397f6fb" compoundref="universe_8cc" startline="626" endline="626">SetWeak</references>
        <references refid="class_universe_1a2d3d642bfdc863248e93535832fa4b00" compoundref="universe_8cc" startline="627" endline="627">SetWeakElectroweak</references>
        <references refid="class_universe_1aa981fc7e252b1fbbb675f0371860954d" compoundref="universe_8cc" startline="628" endline="628">SetElectromagnetic</references>
        <references refid="class_universe_1a608aa95698380f791a0ffba45cc1bee3" compoundref="universe_8cc" startline="629" endline="629">SetElectromagneticElectroweak</references>
        <references refid="class_universe_1a5946c8f3d4cda305f3ecd10df21a2f94" compoundref="universe_8cc" startline="630" endline="630">SetStrong</references>
        <references refid="class_universe_1aafec97a231126b71c73ac1258609a284" compoundref="universe_8cc" startline="631" endline="631">SetStrongFundamental</references>
        <references refid="class_universe_1a1b2d6197ddf3d613cc30bd04d22ed8b7" compoundref="universe_8cc" startline="632" endline="632">SetStrongResidual</references>
        <references refid="class_universe_1a0c485c504542409cbb5cfd8543c35b11" compoundref="universe_8cc" startline="634" endline="634">PollElementaryForce</references>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Universe::GetEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="107" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="30" bodyend="33"/>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a868250e67d0fcb2483aa8bdd73c40a02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::SetEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double energy_transfer)</argsstring>
        <name>SetEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy_transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="110" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="35" bodyend="38"/>
        <referencedby refid="_brain_harmonics_8cc_1a5b7bc303552f00bc26a7b5bf962f3376" compoundref="_brain_harmonics_8cc" startline="291" endline="307">CreateUniverse</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Universe::UseEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double energy_transfer)</argsstring>
        <name>UseEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy_transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="113" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="40" bodyend="49"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aeda74e3902c0e56c0c09779854045cde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Universe::ReturnEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double energy_transfer)</argsstring>
        <name>ReturnEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>energy_transfer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="116" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="51" bodyend="55"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a28615baf47d4558cbe5eebeed6575024" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::Creation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::string object_title, int object_type)</argsstring>
        <name>Creation</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::string</type>
          <declname>object_title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="119" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="57" bodyend="61"/>
        <referencedby refid="class_app_timer_1af0836d131aa78b6812930199a5c7f9bd" compoundref="apptimer_8h" startline="32" endline="46">AppTimer::AppTimer</referencedby>
        <referencedby refid="class_axon_1afaffed720efb3cb75e46088c5fb81d95" compoundref="axon_8h" startline="23" endline="34">Axon::Axon</referencedby>
        <referencedby refid="class_axon_bouton_1a6d671fc3b6bd8e617085c1bc7212400d" compoundref="axonbouton_8h" startline="23" endline="34">AxonBouton::AxonBouton</referencedby>
        <referencedby refid="class_axon_branch_1a98f33462edf82dacab750d1140172912" compoundref="axonbranch_8h" startline="23" endline="34">AxonBranch::AxonBranch</referencedby>
        <referencedby refid="class_axon_hillock_1a250945e24a51475369b6c7881c0d955b" compoundref="axonhillock_8h" startline="24" endline="35">AxonHillock::AxonHillock</referencedby>
        <referencedby refid="class_cognitive_input_1a230ebb8f019af7e0bff51c13bc10c580" compoundref="cognitiveinput_8h" startline="26" endline="35">CognitiveInput::CognitiveInput</referencedby>
        <referencedby refid="class_cognitive_network_1a6ec49dcc8cc58cded71983291629179c" compoundref="cognitivenetwork_8h" startline="25" endline="36">CognitiveNetwork::CognitiveNetwork</referencedby>
        <referencedby refid="class_cognitive_output_1a9874901c7b49a6bb495d34c84fdbf651" compoundref="cognitiveoutput_8h" startline="26" endline="35">CognitiveOutput::CognitiveOutput</referencedby>
        <referencedby refid="class_composite_force_particle_1a8c311b3e35f6def3a532346a50c15281" compoundref="compositeforceparticle_8h" startline="33" endline="47">CompositeForceParticle::CompositeForceParticle</referencedby>
        <referencedby refid="class_dendrite_1ac358d84fb75919386aced214fa0e1107" compoundref="dendrite_8h" startline="23" endline="34">Dendrite::Dendrite</referencedby>
        <referencedby refid="class_dendrite_branch_1a9b7e932b0614dad370edd76f31900c40" compoundref="dendritebranch_8h" startline="23" endline="34">DendriteBranch::DendriteBranch</referencedby>
        <referencedby refid="class_dendrite_cleft_1abcb81284cd9bd7ee2863eecfb6b59f62" compoundref="dendritecleft_8h" startline="23" endline="34">DendriteCleft::DendriteCleft</referencedby>
        <referencedby refid="class_elementary_force_1a1b466cc9aeb317161a7632cb5651a537" compoundref="elementaryforce_8h" startline="34" endline="48">ElementaryForce::ElementaryForce</referencedby>
        <referencedby refid="class_elementary_particle_1a0b43033247b36096d0de2a7553c620a9" compoundref="elementaryparticle_8h" startline="34" endline="48">ElementaryParticle::ElementaryParticle</referencedby>
        <referencedby refid="class_interneuron_space_1aa87eb8c7186542989fccdadc594c5915" compoundref="interneuronspace_8h" startline="27" endline="38">InterneuronSpace::InterneuronSpace</referencedby>
        <referencedby refid="class_law_1aa4fb7baf54aa77720605fd601fb80b8d" compoundref="law_8h" startline="32" endline="43">Law::Law</referencedby>
        <referencedby refid="class_line_1a740aacdf468a1519f9a01d9cbd1f9219" compoundref="line_8h" startline="34" endline="45">Line::Line</referencedby>
        <referencedby refid="class_matter_1a724543a0439d3099f5fc0eae68110b75" compoundref="matter_8h" startline="34" endline="48">Matter::Matter</referencedby>
        <referencedby refid="class_membrane_1a8d61894d90a7f63e427cd8b1a5eca380" compoundref="membrane_8h" startline="26" endline="37">Membrane::Membrane</referencedby>
        <referencedby refid="class_membrane_channel_1ac467743cbdebcdc6a77ad5ea0527e6f0" compoundref="membranechannel_8h" startline="42" endline="51">MembraneChannel::MembraneChannel</referencedby>
        <referencedby refid="class_monomer_1ae2b80466a0e724125aee173df34d1a6c" compoundref="monomer_8h" startline="34" endline="45">Monomer::Monomer</referencedby>
        <referencedby refid="class_neuron_1a6839febd20fb8f776151e00142411a56" compoundref="neuron_8h" startline="24" endline="35">Neuron::Neuron</referencedby>
        <referencedby refid="class_neuroreceptor_1ab002bab3b4ffeed402f60e574ce0263e" compoundref="neuroreceptor_8h" startline="40" endline="49">Neuroreceptor::Neuroreceptor</referencedby>
        <referencedby refid="class_neurotransmitter_1ac9257a1b310a26eba8a08ffb4b93bb64" compoundref="neurotransmitter_8h" startline="26" endline="35">Neurotransmitter::Neurotransmitter</referencedby>
        <referencedby refid="class_orbital_1ac54161437f3bd23cc1e6e85e702239c8" compoundref="orbital_8h" startline="30" endline="41">Orbital::Orbital</referencedby>
        <referencedby refid="class_point_1abbc76ed1b437c982eb607ec165ecfa47" compoundref="point_8h" startline="40" endline="54">Point::Point</referencedby>
        <referencedby refid="class_polygon_1a581ad88f80bf40668e6c8b928c908bcb" compoundref="polygon_8h" startline="33" endline="44">Polygon::Polygon</referencedby>
        <referencedby refid="class_polyhedron_1af5bb1d2a6b04502dfdbfc9f04aafc950" compoundref="polyhedron_8h" startline="35" endline="46">Polyhedron::Polyhedron</referencedby>
        <referencedby refid="class_polymer_1a53797e297c95b3bd934e1b8dd8c0c399" compoundref="polymer_8h" startline="34" endline="45">Polymer::Polymer</referencedby>
        <referencedby refid="class_quad_1a4bb08fd4d953ce61076ed06b51ee2793" compoundref="quad_8h" startline="32" endline="43">Quad::Quad</referencedby>
        <referencedby refid="class_solid_1a80746ad255dded6090e648fc3f0dbd93" compoundref="solid_8h" startline="37" endline="48">Solid::Solid</referencedby>
        <referencedby refid="class_soma_1a451e3918aa5f3ec5670fa08d4d710dd6" compoundref="soma_8h" startline="26" endline="38">Soma::Soma</referencedby>
        <referencedby refid="class_spike_1afecf811f48103b529016a73349b50fe4" compoundref="spike_8h" startline="33" endline="44">Spike::Spike</referencedby>
        <referencedby refid="class_synapse_1ab651f847b74235df5121fe42faf3f253" compoundref="synapse_8h" startline="27" endline="38">Synapse::Synapse</referencedby>
        <referencedby refid="class_synaptic_vesicle_1a0f86278b771137978d03bb6cf460a527" compoundref="synapticvesicle_8h" startline="25" endline="36">SynapticVesicle::SynapticVesicle</referencedby>
        <referencedby refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" compoundref="universe_8h" startline="81" endline="90">Universe</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a2274a54fbdc7504c897e4272162bf17a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::SetObjectType</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int object_type)</argsstring>
        <name>SetObjectType</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="121" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="63" bodyend="67"/>
        <references refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</references>
        <referencedby refid="class_app_timer_1af0836d131aa78b6812930199a5c7f9bd" compoundref="apptimer_8h" startline="32" endline="46">AppTimer::AppTimer</referencedby>
        <referencedby refid="class_axon_1a472ee760a1727072afaff0035d1eedd9" compoundref="axon_8cc" startline="197" endline="243">Axon::Update</referencedby>
        <referencedby refid="class_axon_bouton_1a26f89bac681b8f0894fe1ae249733917" compoundref="axonbouton_8cc" startline="184" endline="251">AxonBouton::Update</referencedby>
        <referencedby refid="class_axon_branch_1a5a80bcccdc2be9f77fca25131937b52f" compoundref="axonbranch_8cc" startline="196" endline="235">AxonBranch::Update</referencedby>
        <referencedby refid="class_axon_hillock_1a5a6a6a93a98b32c303b9ee6320c09909" compoundref="axonhillock_8cc" startline="197" endline="255">AxonHillock::Update</referencedby>
        <referencedby refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" compoundref="cognitivenetwork_8cc" startline="32" endline="95">CognitiveNetwork::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_output_1ab43b79aaadf75d18512c4379a77542cd" compoundref="cognitiveoutput_8cc" startline="19" endline="64">CognitiveOutput::ResetParameters</referencedby>
        <referencedby refid="class_composite_force_particle_1a8c311b3e35f6def3a532346a50c15281" compoundref="compositeforceparticle_8h" startline="33" endline="47">CompositeForceParticle::CompositeForceParticle</referencedby>
        <referencedby refid="class_elementary_force_1a1b466cc9aeb317161a7632cb5651a537" compoundref="elementaryforce_8h" startline="34" endline="48">ElementaryForce::ElementaryForce</referencedby>
        <referencedby refid="class_elementary_particle_1a0b43033247b36096d0de2a7553c620a9" compoundref="elementaryparticle_8h" startline="34" endline="48">ElementaryParticle::ElementaryParticle</referencedby>
        <referencedby refid="class_matter_1a724543a0439d3099f5fc0eae68110b75" compoundref="matter_8h" startline="34" endline="48">Matter::Matter</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_neuron_1a4c154fecb0b689d7da9d8d274f067ccf" compoundref="neuron_8cc" startline="27" endline="85">Neuron::ResetParameters</referencedby>
        <referencedby refid="class_orbital_1acc6137a5a79be91a255f685a2f065330" compoundref="orbital_8cc" startline="26" endline="74">Orbital::ResetParameters</referencedby>
        <referencedby refid="class_point_1abbc76ed1b437c982eb607ec165ecfa47" compoundref="point_8h" startline="40" endline="54">Point::Point</referencedby>
        <referencedby refid="class_solid_1ac43dc78fa7f6a3348fc99751ff6bbc52" compoundref="solid_8cc" startline="20" endline="94">Solid::ResetParameters</referencedby>
        <referencedby refid="class_soma_1a82f016dc126f7d1053e5eb455d28c44b" compoundref="soma_8cc" startline="27" endline="90">Soma::ResetParameters</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1d92b2277564577571c802f6e0c206dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Universe::ResetParameters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>ResetParameters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="124" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="69" bodyend="109"/>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">TheTimeNow</references>
        <references refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" compoundref="universe_8cc" startline="121" endline="125">SetLifespan</references>
        <referencedby refid="class_app_timer_1af0836d131aa78b6812930199a5c7f9bd" compoundref="apptimer_8h" startline="32" endline="46">AppTimer::AppTimer</referencedby>
        <referencedby refid="class_universe_1a2274a54fbdc7504c897e4272162bf17a" compoundref="universe_8cc" startline="63" endline="67">SetObjectType</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" compoundref="universe_8h" startline="81" endline="90">Universe</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; Universe::TheTimeNow</definition>
        <argsstring>()</argsstring>
        <name>TheTimeNow</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="127" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="111" bodyend="114"/>
        <references refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" compoundref="universe_8cc" startline="116" endline="119">TheCalculatedTimeNow</references>
        <referencedby refid="class_axon_1ae079e0b47f5027625da158930e4fa9c5" compoundref="axon_8cc" startline="20" endline="60">Axon::ResetParameters</referencedby>
        <referencedby refid="class_axon_bouton_1a73d3721361c4e1ce6b110ffe1b4a7a88" compoundref="axonbouton_8cc" startline="21" endline="60">AxonBouton::ResetParameters</referencedby>
        <referencedby refid="class_axon_branch_1a195d68dffd37317db3f94e1b4c8f73c7" compoundref="axonbranch_8cc" startline="20" endline="60">AxonBranch::ResetParameters</referencedby>
        <referencedby refid="class_axon_hillock_1acec1571ef0b74f7f5ce6699c9b459b4f" compoundref="axonhillock_8cc" startline="20" endline="65">AxonHillock::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_input_1a943605b820cc279533e19d24e11405c6" compoundref="cognitiveinput_8cc" startline="19" endline="57">CognitiveInput::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" compoundref="cognitivenetwork_8cc" startline="32" endline="95">CognitiveNetwork::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_output_1ab43b79aaadf75d18512c4379a77542cd" compoundref="cognitiveoutput_8cc" startline="19" endline="64">CognitiveOutput::ResetParameters</referencedby>
        <referencedby refid="class_composite_force_particle_1ab4767179e32f6d2b4b31941dd3c48b10" compoundref="compositeforceparticle_8cc" startline="21" endline="46">CompositeForceParticle::ResetParameters</referencedby>
        <referencedby refid="class_dendrite_1a6a6290955348051819badb801b753901" compoundref="dendrite_8cc" startline="20" endline="64">Dendrite::ResetParameters</referencedby>
        <referencedby refid="class_dendrite_branch_1a70b5e63fc44166ccd7f0c7177660c250" compoundref="dendritebranch_8cc" startline="20" endline="64">DendriteBranch::ResetParameters</referencedby>
        <referencedby refid="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" compoundref="dendritecleft_8cc" startline="20" endline="66">DendriteCleft::ResetParameters</referencedby>
        <referencedby refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" compoundref="dimension_8cc" startline="19" endline="22">Dimension::TheTimeNow</referencedby>
        <referencedby refid="class_elementary_force_1a1dedcd23a538b87f71ecd43cb36a6db5" compoundref="elementaryforce_8cc" startline="20" endline="45">ElementaryForce::ResetParameters</referencedby>
        <referencedby refid="class_elementary_particle_1ac0f85f34bdfc1d42324201eb7c38e85e" compoundref="elementaryparticle_8cc" startline="19" endline="40">ElementaryParticle::ResetParameters</referencedby>
        <referencedby refid="class_interneuron_space_1a3a9776e4a77b87374204468ca7974157" compoundref="interneuronspace_8cc" startline="22" endline="68">InterneuronSpace::ResetParameters</referencedby>
        <referencedby refid="class_law_1a56541ec0b82b8a7c377ae2e6b444205c" compoundref="law_8cc" startline="20" endline="58">Law::ResetParameters</referencedby>
        <referencedby refid="class_line_1af1756d1500ab0a5616313be6e213015a" compoundref="line_8cc" startline="19" endline="57">Line::ResetParameters</referencedby>
        <referencedby refid="class_matter_1adfd93d323e43d09fa8d8b7cdd2258611" compoundref="matter_8cc" startline="20" endline="58">Matter::ResetParameters</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_membrane_channel_1a5982040b46efe5e2b824d1cf4dead25e" compoundref="membranechannel_8cc" startline="20" endline="72">MembraneChannel::ResetParameters</referencedby>
        <referencedby refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">Monomer::ResetParameters</referencedby>
        <referencedby refid="class_myelin_sheath_1af1174b93be36aa43506a4ba9857d92a4" compoundref="myelinsheath_8cc" startline="20" endline="72">MyelinSheath::ResetParameters</referencedby>
        <referencedby refid="class_neuron_1a4c154fecb0b689d7da9d8d274f067ccf" compoundref="neuron_8cc" startline="27" endline="85">Neuron::ResetParameters</referencedby>
        <referencedby refid="class_neuroreceptor_1a30debeb0311d92eb6abe354409c15d09" compoundref="neuroreceptor_8cc" startline="20" endline="63">Neuroreceptor::ResetParameters</referencedby>
        <referencedby refid="class_neurotransmitter_1a6e7650d738bccfbbd49ede10970687aa" compoundref="neurotransmitter_8cc" startline="19" endline="57">Neurotransmitter::ResetParameters</referencedby>
        <referencedby refid="class_orbital_1acc6137a5a79be91a255f685a2f065330" compoundref="orbital_8cc" startline="26" endline="74">Orbital::ResetParameters</referencedby>
        <referencedby refid="class_point_1a123c78bef71f74d71bc833709a38709c" compoundref="point_8cc" startline="20" endline="90">Point::ResetParameters</referencedby>
        <referencedby refid="class_polygon_1a0e2824d12cd6b18c8b14c64ef4b2bf97" compoundref="polygon_8cc" startline="19" endline="56">Polygon::ResetParameters</referencedby>
        <referencedby refid="class_polyhedron_1ae90c347cfb8ca8028a260e88bef2b45c" compoundref="polyhedron_8cc" startline="22" endline="115">Polyhedron::ResetParameters</referencedby>
        <referencedby refid="class_polymer_1aa20f1e5c79e8631afa291569d5030103" compoundref="polymer_8cc" startline="19" endline="56">Polymer::ResetParameters</referencedby>
        <referencedby refid="class_quad_1af7c18022d7db1ad20bb7a1e1bd1ffb90" compoundref="quad_8cc" startline="19" endline="56">Quad::ResetParameters</referencedby>
        <referencedby refid="class_solid_1ac43dc78fa7f6a3348fc99751ff6bbc52" compoundref="solid_8cc" startline="20" endline="94">Solid::ResetParameters</referencedby>
        <referencedby refid="class_soma_1a82f016dc126f7d1053e5eb455d28c44b" compoundref="soma_8cc" startline="27" endline="90">Soma::ResetParameters</referencedby>
        <referencedby refid="class_spike_1af4475560da7a33e70a0f2036197f000f" compoundref="spike_8cc" startline="21" endline="58">Spike::ResetParameters</referencedby>
        <referencedby refid="class_synapse_1a5b2bbc3553e92492a5c38d1d797fcd92" compoundref="synapse_8cc" startline="23" endline="69">Synapse::ResetParameters</referencedby>
        <referencedby refid="class_synaptic_vesicle_1add2f2815448729977fbcdbd5a59ec7b4" compoundref="synapticvesicle_8cc" startline="20" endline="60">SynapticVesicle::ResetParameters</referencedby>
        <referencedby refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</referencedby>
        <referencedby refid="class_universe_1a982502e46868a00a9111738ccc9355c2" compoundref="universe_8cc" startline="127" endline="135">ExtendLife</referencedby>
        <referencedby refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" compoundref="universe_8cc" startline="138" endline="148">IsDead</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
        <definition>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; Universe::TheCalculatedTimeNow</definition>
        <argsstring>(std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; time_object_created_time, std::chrono::time_point&lt; Clock &gt; event_time, double calculated_scaled_time)</argsstring>
        <name>TheCalculatedTimeNow</name>
        <param>
          <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
          <declname>time_object_created_time</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>calculated_scaled_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="130" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="116" bodyend="119"/>
        <referencedby refid="class_dimension_1ab39b7ff253ade59c5c2d807c511b4028" compoundref="dimension_8cc" startline="19" endline="22">Dimension::TheTimeNow</referencedby>
        <referencedby refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">TheTimeNow</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::SetLifespan</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::chrono::nanoseconds life_time)</argsstring>
        <name>SetLifespan</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>life_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="133" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="121" bodyend="125"/>
        <referencedby refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a982502e46868a00a9111738ccc9355c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::ExtendLife</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::chrono::nanoseconds life_time)</argsstring>
        <name>ExtendLife</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::chrono::nanoseconds</type>
          <declname>life_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="136" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="127" bodyend="135"/>
        <references refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" compoundref="universe_8cc" startline="138" endline="148">IsDead</references>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">TheTimeNow</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Universe::IsDead</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>IsDead</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="139" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="138" bodyend="148"/>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">TheTimeNow</references>
        <references refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" compoundref="universe_8h" startline="281">object_energy</references>
        <referencedby refid="class_universe_1a982502e46868a00a9111738ccc9355c2" compoundref="universe_8cc" startline="127" endline="135">ExtendLife</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddDimensions</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddDimensions</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="143" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="151" bodyend="164"/>
        <references refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" compoundref="universe_8h" startline="293">dimension_list</references>
        <referencedby refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" compoundref="universe_8cc" startline="166" endline="172">AddDimension</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddDimension</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddDimension</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="145" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="166" bodyend="172"/>
        <references refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" compoundref="universe_8cc" startline="151" endline="164">AddDimensions</references>
        <referencedby refid="class_app_timer_1af0836d131aa78b6812930199a5c7f9bd" compoundref="apptimer_8h" startline="32" endline="46">AppTimer::AppTimer</referencedby>
        <referencedby refid="class_axon_1a472ee760a1727072afaff0035d1eedd9" compoundref="axon_8cc" startline="197" endline="243">Axon::Update</referencedby>
        <referencedby refid="class_axon_bouton_1a26f89bac681b8f0894fe1ae249733917" compoundref="axonbouton_8cc" startline="184" endline="251">AxonBouton::Update</referencedby>
        <referencedby refid="class_axon_branch_1a5a80bcccdc2be9f77fca25131937b52f" compoundref="axonbranch_8cc" startline="196" endline="235">AxonBranch::Update</referencedby>
        <referencedby refid="class_axon_hillock_1a5a6a6a93a98b32c303b9ee6320c09909" compoundref="axonhillock_8cc" startline="197" endline="255">AxonHillock::Update</referencedby>
        <referencedby refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" compoundref="cognitivenetwork_8cc" startline="32" endline="95">CognitiveNetwork::ResetParameters</referencedby>
        <referencedby refid="class_cognitive_output_1ab43b79aaadf75d18512c4379a77542cd" compoundref="cognitiveoutput_8cc" startline="19" endline="64">CognitiveOutput::ResetParameters</referencedby>
        <referencedby refid="class_composite_force_particle_1a8c311b3e35f6def3a532346a50c15281" compoundref="compositeforceparticle_8h" startline="33" endline="47">CompositeForceParticle::CompositeForceParticle</referencedby>
        <referencedby refid="class_elementary_force_1a1b466cc9aeb317161a7632cb5651a537" compoundref="elementaryforce_8h" startline="34" endline="48">ElementaryForce::ElementaryForce</referencedby>
        <referencedby refid="class_elementary_particle_1a0b43033247b36096d0de2a7553c620a9" compoundref="elementaryparticle_8h" startline="34" endline="48">ElementaryParticle::ElementaryParticle</referencedby>
        <referencedby refid="class_matter_1a724543a0439d3099f5fc0eae68110b75" compoundref="matter_8h" startline="34" endline="48">Matter::Matter</referencedby>
        <referencedby refid="class_membrane_1a9c49462cf63495381a52e2defc80b1e4" compoundref="membrane_8cc" startline="26" endline="83">Membrane::ResetParameters</referencedby>
        <referencedby refid="class_neuron_1a4c154fecb0b689d7da9d8d274f067ccf" compoundref="neuron_8cc" startline="27" endline="85">Neuron::ResetParameters</referencedby>
        <referencedby refid="class_orbital_1acc6137a5a79be91a255f685a2f065330" compoundref="orbital_8cc" startline="26" endline="74">Orbital::ResetParameters</referencedby>
        <referencedby refid="class_point_1abbc76ed1b437c982eb607ec165ecfa47" compoundref="point_8h" startline="40" endline="54">Point::Point</referencedby>
        <referencedby refid="class_solid_1ac43dc78fa7f6a3348fc99751ff6bbc52" compoundref="solid_8cc" startline="20" endline="94">Solid::ResetParameters</referencedby>
        <referencedby refid="class_soma_1a82f016dc126f7d1053e5eb455d28c44b" compoundref="soma_8cc" startline="27" endline="90">Soma::ResetParameters</referencedby>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1869fc7bf43827378bab5a701f7f917a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetDimensions</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetDimensions</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="147" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="174" bodyend="177"/>
        <references refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" compoundref="universe_8h" startline="293">dimension_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab79a380dee684c6dc304b571f4d28645" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetDimension</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetDimension</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="149" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="179" bodyend="182"/>
        <references refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" compoundref="universe_8h" startline="293">dimension_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a857cf7f208cd11c80736e82fa523feb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddElementaryParticles</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddElementaryParticles</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="152" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="185" bodyend="193"/>
        <references refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" compoundref="universe_8h" startline="295">elementary_particle_list</references>
        <referencedby refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" compoundref="universe_8cc" startline="195" endline="198">AddElementaryParticle</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddElementaryParticle</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddElementaryParticle</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="154" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="195" bodyend="198"/>
        <references refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" compoundref="universe_8cc" startline="185" endline="193">AddElementaryParticles</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a168fd9bf7602adcba1de5dd93a212775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetElementaryParticles</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetElementaryParticles</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="156" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="200" bodyend="203"/>
        <references refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" compoundref="universe_8h" startline="295">elementary_particle_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1acef54e17666d17078c522388f8f6e4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetElementaryParticle</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetElementaryParticle</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="158" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="205" bodyend="208"/>
        <references refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" compoundref="universe_8h" startline="295">elementary_particle_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a81d294300346e9f901836ab609cce942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddElementaryForces</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddElementaryForces</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="161" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="211" bodyend="219"/>
        <references refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" compoundref="universe_8h" startline="294">elementary_force_list</references>
        <referencedby refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" compoundref="universe_8cc" startline="221" endline="224">AddElementaryForce</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a90c573dec55f2b3ad5680015356f5f25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddElementaryForce</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddElementaryForce</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="163" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="221" bodyend="224"/>
        <references refid="class_universe_1a81d294300346e9f901836ab609cce942" compoundref="universe_8cc" startline="211" endline="219">AddElementaryForces</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetElementaryForces</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetElementaryForces</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="165" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="226" bodyend="229"/>
        <references refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" compoundref="universe_8h" startline="294">elementary_force_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a9506017d944cb64e67567477c1505a53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetElementaryForce</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetElementaryForce</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="167" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="231" bodyend="234"/>
        <references refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" compoundref="universe_8h" startline="294">elementary_force_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddCompositeForceParticles</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddCompositeForceParticles</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="170" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="237" bodyend="245"/>
        <references refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" compoundref="universe_8h" startline="292">composite_forceparticle_list</references>
        <referencedby refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" compoundref="universe_8cc" startline="247" endline="250">AddCompositeForceParticle</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddCompositeForceParticle</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddCompositeForceParticle</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="172" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="247" bodyend="250"/>
        <references refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" compoundref="universe_8cc" startline="237" endline="245">AddCompositeForceParticles</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetCompositeForceParticles</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetCompositeForceParticles</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="174" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="252" bodyend="255"/>
        <references refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" compoundref="universe_8h" startline="292">composite_forceparticle_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetCompositeForceParticle</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetCompositeForceParticle</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="176" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="257" bodyend="260"/>
        <references refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" compoundref="universe_8h" startline="292">composite_forceparticle_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddMatters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddMatters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="179" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="263" bodyend="271"/>
        <references refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" compoundref="universe_8h" startline="296">matter_list</references>
        <referencedby refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" compoundref="universe_8cc" startline="273" endline="276">AddMatter</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a090d9ad1b88d81364e872e17d65edca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddMatter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddMatter</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="181" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="273" bodyend="276"/>
        <references refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" compoundref="universe_8cc" startline="263" endline="271">AddMatters</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a4307a62e183fed8cf2b92be0f6014688" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetMatters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetMatters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="183" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="278" bodyend="281"/>
        <references refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" compoundref="universe_8h" startline="296">matter_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetMatter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetMatter</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="185" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="283" bodyend="286"/>
        <references refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" compoundref="universe_8h" startline="296">matter_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddMonomers</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddMonomers</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="188" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="289" bodyend="297"/>
        <references refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" compoundref="universe_8h" startline="297">monomer_list</references>
        <referencedby refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" compoundref="universe_8cc" startline="299" endline="302">AddMonomer</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a062a9472f0400e566ecc7dc056d989d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddMonomer</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddMonomer</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="190" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="299" bodyend="302"/>
        <references refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" compoundref="universe_8cc" startline="289" endline="297">AddMonomers</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetMonomers</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetMonomers</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="192" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="304" bodyend="307"/>
        <references refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" compoundref="universe_8h" startline="297">monomer_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aaa03fb8178d790afd992dd094bb64b47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetMonomer</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetMonomer</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="194" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="309" bodyend="312"/>
        <references refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" compoundref="universe_8h" startline="297">monomer_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aed7cb25507d516a2821ebb69d5345c54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddPolymers</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddPolymers</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="197" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="315" bodyend="323"/>
        <references refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" compoundref="universe_8h" startline="298">polymer_list</references>
        <referencedby refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" compoundref="universe_8cc" startline="325" endline="328">AddPolymer</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddPolymer</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddPolymer</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="199" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="325" bodyend="328"/>
        <references refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" compoundref="universe_8cc" startline="315" endline="323">AddPolymers</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetPolymers</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetPolymers</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="201" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="330" bodyend="333"/>
        <references refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" compoundref="universe_8h" startline="298">polymer_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetPolymer</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetPolymer</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="203" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="335" bodyend="338"/>
        <references refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" compoundref="universe_8h" startline="298">polymer_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddSolids</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddSolids</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="206" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="341" bodyend="349"/>
        <references refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" compoundref="universe_8h" startline="299">solid_list</references>
        <referencedby refid="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" compoundref="universe_8cc" startline="351" endline="354">AddSolid</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddSolid</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddSolid</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="208" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="351" bodyend="354"/>
        <references refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" compoundref="universe_8cc" startline="341" endline="349">AddSolids</references>
        <referencedby refid="class_neuron_1a4d1dc3a9f30196fe2b09dfbfc0a567bb" compoundref="neuron_8cc" startline="387" endline="444">Neuron::Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a669fc068dd7820a5af309bfbe67199aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetSolids</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetSolids</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="210" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="356" bodyend="359"/>
        <references refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" compoundref="universe_8h" startline="299">solid_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetSolid</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetSolid</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="212" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="361" bodyend="364"/>
        <references refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" compoundref="universe_8h" startline="299">solid_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddCognitiveNetworks</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddCognitiveNetworks</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="215" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="367" bodyend="375"/>
        <references refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" compoundref="universe_8h" startline="291">cognitive_network_list</references>
        <referencedby refid="class_universe_1ab682307c963836cd81b35b5604bd7064" compoundref="universe_8cc" startline="377" endline="380">AddCognitiveNetwork</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab682307c963836cd81b35b5604bd7064" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddCognitiveNetwork</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddCognitiveNetwork</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="217" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="377" bodyend="380"/>
        <references refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" compoundref="universe_8cc" startline="367" endline="375">AddCognitiveNetworks</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a06968a24194280a43f077c5b77379ea8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetCognitiveNetworks</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetCognitiveNetworks</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="219" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="382" bodyend="385"/>
        <references refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" compoundref="universe_8h" startline="291">cognitive_network_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetCognitiveNetwork</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetCognitiveNetwork</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="221" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="387" bodyend="390"/>
        <references refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" compoundref="universe_8h" startline="291">cognitive_network_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aa48ced2078ba863723050d8283b3fa67" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::AddPoints</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>AddPoints</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="224" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="393" bodyend="401"/>
        <references refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" compoundref="universe_8h" startline="300">point_list</references>
        <referencedby refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" compoundref="universe_8cc" startline="403" endline="406">AddPoint</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a8508b791c6997d8abcdcc037a6776734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::AddPoint</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddPoint</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="226" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="403" bodyend="406"/>
        <references refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" compoundref="universe_8cc" startline="393" endline="401">AddPoints</references>
        <referencedby refid="class_polyhedron_1a15d1cae35ceb6c1ba559928fd417800c" compoundref="polyhedron_8cc" startline="300" endline="323">Polyhedron::GenerateSpherePoints</referencedby>
        <referencedby refid="class_polyhedron_1a642a64ae8cde5e2a9f15334e151fd3f9" compoundref="polyhedron_8cc" startline="325" endline="350">Polyhedron::GenerateCylinderPoints</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a765c6c658b7a465cd92418690db846ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> * &gt;</type>
        <definition>std::vector&lt; Universe * &gt; Universe::GetPoints</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetPoints</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="228" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="408" bodyend="411"/>
        <references refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" compoundref="universe_8h" startline="300">point_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_universe" kindref="compound">Universe</ref> *</type>
        <definition>Universe * Universe::GetPoint</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetPoint</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="230" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="413" bodyend="416"/>
        <references refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" compoundref="universe_8h" startline="300">point_list</references>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Universe::UpdateCycle</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::vector&lt; Universe *&gt; set_of_update_pointers, unsigned int pointer_type)</argsstring>
        <name>UpdateCycle</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_universe" kindref="compound">Universe</ref> *&gt;</type>
          <declname>set_of_update_pointers</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>pointer_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="232" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="418" bodyend="479"/>
        <references refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</references>
        <referencedby refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" compoundref="universe_8cc" startline="481" endline="598">Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Universe::Update</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Update</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="234" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="481" bodyend="598"/>
        <references refid="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" compoundref="universe_8h" startline="284">time_dimension_pointer</references>
        <references refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" compoundref="universe_8cc" startline="166" endline="172">AddDimension</references>
        <references refid="class_universe_1a2274a54fbdc7504c897e4272162bf17a" compoundref="universe_8cc" startline="63" endline="67">SetObjectType</references>
        <references refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" compoundref="universe_8cc" startline="69" endline="109">ResetParameters</references>
        <references refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" compoundref="universe_8cc" startline="418" endline="479">UpdateCycle</references>
        <references refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" compoundref="universe_8h" startline="291">cognitive_network_list</references>
        <references refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" compoundref="universe_8h" startline="292">composite_forceparticle_list</references>
        <references refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" compoundref="universe_8h" startline="294">elementary_force_list</references>
        <references refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" compoundref="universe_8h" startline="295">elementary_particle_list</references>
        <references refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" compoundref="universe_8h" startline="296">matter_list</references>
        <references refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" compoundref="universe_8h" startline="297">monomer_list</references>
        <references refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" compoundref="universe_8h" startline="298">polymer_list</references>
        <references refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" compoundref="universe_8h" startline="299">solid_list</references>
        <references refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" compoundref="universe_8h" startline="300">point_list</references>
        <references refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" compoundref="universe_8h" startline="281">object_energy</references>
        <references refid="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" compoundref="universe_8cc" startline="30" endline="33">GetEnergy</references>
        <references refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" compoundref="universe_8cc" startline="138" endline="148">IsDead</references>
        <referencedby refid="_brain_harmonics_8cc_1a5b7bc303552f00bc26a7b5bf962f3376" compoundref="_brain_harmonics_8cc" startline="291" endline="307">CreateUniverse</referencedby>
        <referencedby refid="class_neuron_1a55c72e8066caf1ad8e25a2b0b453ee69" compoundref="neuron_8cc" startline="369" endline="385">Neuron::UpdateCycle2</referencedby>
        <referencedby refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" compoundref="universe_8cc" startline="418" endline="479">UpdateCycle</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a901e16db5e8af258c66af7ac75662fe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::AddTemporalAdjustment</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double *point_to_counter, double pool, int interval, int shape)</argsstring>
        <name>AddTemporalAdjustment</name>
        <reimplementedby refid="class_dimension_1a278d8c3df7896eb01c55283482f8674a">AddTemporalAdjustment</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>point_to_counter</declname>
        </param>
        <param>
          <type>double</type>
          <declname>pool</declname>
        </param>
        <param>
          <type>int</type>
          <declname>interval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>shape</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="238" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="600" bodyend="600"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a15aa20218286fd11ecb9b792dfb63be3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::AdjustCounters</definition>
        <argsstring>(std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt; currentTime)</argsstring>
        <name>AdjustCounters</name>
        <reimplementedby refid="class_dimension_1a31e28c2777888449fad32843f6dd15ed">AdjustCounters</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; std::chrono::high_resolution_clock &gt;</type>
          <declname>currentTime</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="240" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="602" bodyend="602"/>
        <referencedby refid="class_line_1a8c6dece66f5cd93ce40134002a40f505" compoundref="line_8cc" startline="59" endline="93">Line::Update</referencedby>
        <referencedby refid="class_neurotransmitter_1ac9f7be22ca7242207de76ec5e1b055b1" compoundref="neurotransmitter_8cc" startline="59" endline="95">Neurotransmitter::Update</referencedby>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a3b3da7c86a7b75e5e5c0b7972ac82a87" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetCharge</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val)</argsstring>
        <name>SetCharge</name>
        <reimplementedby refid="class_law_1a2e780573f6285f88d167d45a2e243d01">SetCharge</reimplementedby>
        <reimplementedby refid="class_monomer_1a1ee35c888318e590082e6cd1772bb430">SetCharge</reimplementedby>
        <reimplementedby refid="class_elementary_particle_1abbc6d3c58509c4121df55bfef716d2f1">SetCharge</reimplementedby>
        <reimplementedby refid="class_solid_1a37503e6b25f912254414e778af2e75cd">SetCharge</reimplementedby>
        <reimplementedby refid="class_dimension_1a6d3f7fa4a26b92d8ae6161a1b8bb8220">SetCharge</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a99f801aeca299186cc706696696749b1">SetCharge</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="242" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="604" bodyend="604"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ae2ae1c3b3e4cde2c18f5f6a814761ec8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetSpin</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val)</argsstring>
        <name>SetSpin</name>
        <reimplementedby refid="class_law_1a3de75edea5e20db0a7b731de61f07dea">SetSpin</reimplementedby>
        <reimplementedby refid="class_monomer_1ad24a86a4c1ac62d1b0ce8040d6b08adf">SetSpin</reimplementedby>
        <reimplementedby refid="class_elementary_particle_1a437fa86d88157314b84662b158d52353">SetSpin</reimplementedby>
        <reimplementedby refid="class_solid_1a615cb8d1ec1376781726bcefa86339cb">SetSpin</reimplementedby>
        <reimplementedby refid="class_dimension_1a8d73c050c67b0226572b4a1b08ae6594">SetSpin</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a3fc6d08413bfd4350f94d6f2627eedc7">SetSpin</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="243" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="605" bodyend="605"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab0404e774ee0ed66b597ff5b8e989446" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetGravitation</name>
        <reimplementedby refid="class_composite_force_particle_1a06483dc73c156679f34acf85aa5f924e">GetGravitation</reimplementedby>
        <reimplementedby refid="class_law_1a84bdc0c2ca97a9c19422018ff761b992">GetGravitation</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a579afb8079668f0587096934d1de9c04">GetGravitation</reimplementedby>
        <reimplementedby refid="class_monomer_1aa5f7b901e15c9a9eb6e1c3564cd06e4f">GetGravitation</reimplementedby>
        <reimplementedby refid="class_solid_1ab5ecb5598be93fe3cd2a21c0cfd363c8">GetGravitation</reimplementedby>
        <reimplementedby refid="class_dimension_1a652220a2eb1b26c749ad032865d81788">GetGravitation</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a4b5150310288c52f00ecb745ae9e7f86">GetGravitation</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="244" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="606" bodyend="606"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a4476b7e0a3fc1764909f556257fd9ec7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetWeak</name>
        <reimplementedby refid="class_composite_force_particle_1ab5cc0893a4063cc353ea5d2404f27b0b">GetWeak</reimplementedby>
        <reimplementedby refid="class_law_1a303c365b7a17997a63a74756fc72fba3">GetWeak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a4669f2ce414e508c70ae4ce0df503ad1">GetWeak</reimplementedby>
        <reimplementedby refid="class_monomer_1ac2070d7e39cd0b2a00aa6023ffd51f55">GetWeak</reimplementedby>
        <reimplementedby refid="class_solid_1ac8a7738735a6bda4e89414a2b0c370e1">GetWeak</reimplementedby>
        <reimplementedby refid="class_dimension_1a656ce92d07ea600cc0ec53865ad515e2">GetWeak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a761db75ac8eab7b4625e5a398891bd12">GetWeak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="245" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="607" bodyend="607"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a645299738e6b798a037f2a15a2e7cf4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetWeakElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1a27762218af4e3c021c89ff4792d81b41">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1aad6e54da64a5d8499dcb6c232aa6748f">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a928e06a1fa81b8d7ec4a426d959a0f98">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1aec6e42dde40c5b3142fab880eabb346a">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1ac98f9c827d58a631627423e25dd611ba">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1a5bb5a164564013a60728854cc2e5ddb3">GetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1aa6342c390fe8e7c648b4c6bc8f93ba4a">GetWeakElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="246" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="608" bodyend="608"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a63b850ef3f3394313353109d222bf5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetElectromagnetic</name>
        <reimplementedby refid="class_composite_force_particle_1a8ef336fed7e33d52a3baae4bd4dd32fd">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_law_1a01eba6e68d2d8a717e2b4789be90853d">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a2c8bc3226f42710717775c73eee1644e">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_monomer_1ad23f4829d66cb20401cc72a9d72ac320">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_solid_1a01cd3c441a4e339927c43536de6d9b5e">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_dimension_1a21783c29a576518b722512f1245fa598">GetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a09e5a1c774c84529a7adfe56fadb7467">GetElectromagnetic</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="247" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="609" bodyend="609"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a9f099605c082e7fa755787a6a8cab7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetElectromagneticElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1ac26d7aab0daefcf13c68aba9e0f2ed53">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1ae4ccaca7b78905f416f35f9556b1923c">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a58e503f2f3a7410f034a2a04bca560d1">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1a9b270cd1293bc9635813ead284bd3881">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1aff7ec13bcc584d8330e3f3a1b371bbe6">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1ae1babb1fa280c35966d7ee3de6655e4d">GetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a8c4e0454068f714691ae250f795cdb67">GetElectromagneticElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="248" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="610" bodyend="610"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1acb453ce71da418c5b5617fecede9571b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetStrong</name>
        <reimplementedby refid="class_composite_force_particle_1a9818d469c9841eaf77fbe329b0953354">GetStrong</reimplementedby>
        <reimplementedby refid="class_law_1afd94bf09dbaf5d5df36b8f093db02dd9">GetStrong</reimplementedby>
        <reimplementedby refid="class_elementary_force_1aaa1cde27b1508831f67353eb39745a7e">GetStrong</reimplementedby>
        <reimplementedby refid="class_monomer_1aa35033340e88c46757d1d5ccba21a21e">GetStrong</reimplementedby>
        <reimplementedby refid="class_solid_1ae39d0166456b8feaa39547e5a21c9096">GetStrong</reimplementedby>
        <reimplementedby refid="class_dimension_1ae36aadad4ae84735a5ff73bff4eb97b1">GetStrong</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a277247686f8af159e7a7beb0ec379225">GetStrong</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="249" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="611" bodyend="611"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ab44daccba01ee7e3cf9b50bba83dd19e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetStrongFundamental</name>
        <reimplementedby refid="class_composite_force_particle_1abc8597f3b4f7cf755ab4618bd624b046">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_law_1afcdbea76524e5a52691fff7b526971e9">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a0974d6537c07dac2453d2a607324fa21">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_monomer_1a4bc8b39086260e26a196b28b4fc6667f">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_solid_1ab3a972354b25ad1bbe8c3f3e7638e24c">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_dimension_1ad0d067d7f9dc4841b0ad280979ebe7af">GetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a942ca90561fedae46136de620accbfea">GetStrongFundamental</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="250" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="612" bodyend="612"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1af0f4b81950061e63c2855eb40957a5b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::GetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetStrongResidual</name>
        <reimplementedby refid="class_composite_force_particle_1a24214566eb5b44340d5563b6583052e8">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_law_1a70fb2a7710776c4e2315a1e29fe35eb6">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a3478c8ad35bce240055da7d4a03e555e">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_monomer_1a3b00168520f592098356f7cd3e663ad3">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_solid_1a9cfde1c3a4b7c6d2a5a3719d74e27237">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_dimension_1aeee6025f17d9cd1bf7f324d715a30691">GetStrongResidual</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1acfa5de663b3e686c4d9ea1a3bb483b11">GetStrongResidual</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="251" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="613" bodyend="613"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a76c0b5e63c2a7d1988c44db341c3d64c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyGravitation</name>
        <reimplementedby refid="class_composite_force_particle_1ae26a03c2970a3825e8583a811339b28d">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_law_1a04efdc724335219ab0affdcffb55eea2">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a655a2c9489bfbbf15e05ba4953628134">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_monomer_1a8747945cc2f7abd7ce0885345ad14ebc">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_solid_1af2b3133138ce2482faa462d07aa23042">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_dimension_1a9474b0dd3f6321a92bfe4375bb4b2266">ApplyGravitation</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a7d3252977440a9a5c004f748647ce885">ApplyGravitation</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="253" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="615" bodyend="615"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a6d1226b3adec3c42a833afdbb6a65a92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyWeak</name>
        <reimplementedby refid="class_composite_force_particle_1a1fd171a0c6fab0cbf9a45a0d24607bde">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_law_1a96ddd42403e3665c6070283ac201658d">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1aabf66a859e6e808a65c6929cd16f7597">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_monomer_1a176a1a4dfed1eaddc6637bbfd2660aba">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_solid_1a49e35bf258104b7bce225dc21058affb">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_dimension_1a72b8ab8d676b4df6b9a6ef948f5693c9">ApplyWeak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a46a15b24bd61049fa1c4f635268086a1">ApplyWeak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="254" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="616" bodyend="616"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a46a906baabb63e5d31f8b48ea1fae52e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyWeakElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1a3c1c0b427c633f0685f1d812e02b92ff">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1ae8a5d1d09686d79f7814c8800791460b">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a2d3a5444c771f35d66d4151c62f53b12">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1a64f65c128ebc2428c42739c930696ea1">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1ad6c28ec896cbcf64e24a7132a144befd">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1abf490cabd486afa660f17940ed0d17e6">ApplyWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1ab8bc213d2806f0dc49c1284bf934fc24">ApplyWeakElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="255" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="617" bodyend="617"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1f787da78fa196ba635db21a9e91dabb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyElectromagnetic</name>
        <reimplementedby refid="class_composite_force_particle_1afa4dc18258722b3c85fbc9789a4297a5">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_law_1a418791aee2a9204a99d3a917b86fafd3">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a0045a3380e468c6cfdbefce829888c1f">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_monomer_1ae64dfbf82610ae26427be9c824aef70f">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_solid_1ab546d607d6f0bf70dc5e6bbac8baf287">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_dimension_1a65bcd3c09792cf53b1f614eff49cf111">ApplyElectromagnetic</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1ae590ecb77db0a876425b9b74bcfe2bce">ApplyElectromagnetic</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="256" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="618" bodyend="618"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a4c36c1ab30db993307f88363dde5e8c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyElectromagneticElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1a5f6aef9e15e2e5f346c7ede76ae6458b">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1a4485046db890a95cea16573042a4f4f6">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a3764a27b11760b6ead2c8a23ff25d77a">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1a4c3f9894ea57047789bec32602f033cb">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1a46702e3109994b310eb4f1fba5610e0b">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1ab13e8ed50a4373274636e542c917db01">ApplyElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a9753f52c9e36ad44e9fac1d3e38a0770">ApplyElectromagneticElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="257" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="619" bodyend="619"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a906a88b37f10bfa630bef49dfd0e907a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyStrong</name>
        <reimplementedby refid="class_composite_force_particle_1ac1464a04fbbca2d8927dfdbef0429878">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_law_1ab38659b209055df7e59f4bcd1b9e545a">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a8a16bff6b5df2b0ff918262bf6376ade">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_monomer_1acba5091693082fdf2d28f1a5a4ae19a1">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_solid_1a0801ec0382bc509191575bcf9f5c83c1">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_dimension_1a621e8f7f24db86e836c5b3da0f019290">ApplyStrong</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a7a55750d3c42a277c4ffe04a87ab3b19">ApplyStrong</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="258" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="620" bodyend="620"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a62789bcff84bd750b0366004381e2fdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyStrongFundamental</name>
        <reimplementedby refid="class_composite_force_particle_1a64fe19ee12d6ca0a69f650faa5bedb58">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_law_1a57d05f26e1c0ee953260ebd3780248f8">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a80f1977e777aa0c8cce2124b666e6446">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_monomer_1aa186454670f7796e196509238d419a35">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_solid_1abd8fff76385306f97aa65dfd6b867fc6">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_dimension_1afb01fb9e469da18899d4b14e5f095ece">ApplyStrongFundamental</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1af25bbd4f4d8f370cd2a48fd6db8302b9">ApplyStrongFundamental</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="259" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="621" bodyend="621"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1af7becebb347be9a85541d96a3eca1ca7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>double</type>
        <definition>double Universe::ApplyStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>ApplyStrongResidual</name>
        <reimplementedby refid="class_composite_force_particle_1ae0937405e68dd40b19036d5a359f7e07">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_law_1a266f86cdcc01e813249a2f192ab85eb3">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a185dc4e0b840505df27dbbed9fdcdc7b">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_monomer_1a921f7add2d446b8670513220ace6c4b2">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_solid_1a07534fa79bb8a6eb32e081e5158ba9e5">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_dimension_1a2ae0b6a8ee17f6e28b6d2d3209df4bf4">ApplyStrongResidual</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a8b60fdb81d89a3a74d6c06cb29e7aad3">ApplyStrongResidual</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="260" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="622" bodyend="622"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aa22202ae740eb1355529afcb13285e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, unsigned int val)</argsstring>
        <name>SetCounter</name>
        <reimplementedby refid="class_abstraction_1a82cd32bf3de41f35ab76d80611fe6763">SetCounter</reimplementedby>
        <reimplementedby refid="class_axon_branch_1a96ba30b18627563d637d4e02fac943be">SetCounter</reimplementedby>
        <reimplementedby refid="class_dendrite_cleft_1a428b8e5117f381a382e0071b936d42a1">SetCounter</reimplementedby>
        <reimplementedby refid="class_axon_bouton_1afe285478d414f2815afb98abe7b92898">SetCounter</reimplementedby>
        <reimplementedby refid="class_myelin_sheath_1afb9cd377a71881558f48cf8bb226af77">SetCounter</reimplementedby>
        <reimplementedby refid="class_dendrite_branch_1a2ce03fbad4a70564eeaafb62debd4d74">SetCounter</reimplementedby>
        <reimplementedby refid="class_axon_hillock_1a0220cee0ad99ddc48496982078c1856c">SetCounter</reimplementedby>
        <reimplementedby refid="class_axon_1a3493cb97bde26bd66facc6084cd5f219">SetCounter</reimplementedby>
        <reimplementedby refid="class_synaptic_vesicle_1a7fd7cfce5eccb904206d968866f85220">SetCounter</reimplementedby>
        <reimplementedby refid="class_schwann_cell_1a067f87983cb937d5fdb882c267e27921">SetCounter</reimplementedby>
        <reimplementedby refid="class_neurotransmitter_1ae16ec051609867d4f64fad5ba4449443">SetCounter</reimplementedby>
        <reimplementedby refid="class_cognitive_output_1a087e8bdab9eb6020dbbe6d47f524c8b6">SetCounter</reimplementedby>
        <reimplementedby refid="class_cognitive_input_1a4f09c1f176b5406d95a14d7cb1ab75e6">SetCounter</reimplementedby>
        <reimplementedby refid="class_synapse_1aa1a990a7b89fbeaf1109a8b70d86111b">SetCounter</reimplementedby>
        <reimplementedby refid="class_interneuron_space_1a60a46f22a2e575d65031635a698a60a9">SetCounter</reimplementedby>
        <reimplementedby refid="class_law_1a408c401c8a44870c29ba9d08b45cb40f">SetCounter</reimplementedby>
        <reimplementedby refid="class_app_timer_1a77d5d447d6b136a35304b0571a166ddc">SetCounter</reimplementedby>
        <reimplementedby refid="class_polygon_1ad12083d8c152a1979b04bead93b6b730">SetCounter</reimplementedby>
        <reimplementedby refid="class_monomer_1a6f0dfa4382b3d4fa19b7ee0fb8fe7a55">SetCounter</reimplementedby>
        <reimplementedby refid="class_polymer_1a1500ffc682396af2f4306c7c7ea7fd87">SetCounter</reimplementedby>
        <reimplementedby refid="class_orbital_1ae2a2fb06700d1d68501b0cbdea87cc08">SetCounter</reimplementedby>
        <reimplementedby refid="class_solid_1aea949040518e505ed39b1456a360c5e0">SetCounter</reimplementedby>
        <reimplementedby refid="class_dendrite_1a7529495515de74fff2b9a92b12531057">SetCounter</reimplementedby>
        <reimplementedby refid="class_matter_1a514b4a64589eb3fbc3db6b3b356bd687">SetCounter</reimplementedby>
        <reimplementedby refid="class_membrane_1a4bff43b38d7046867f220392a39cc272">SetCounter</reimplementedby>
        <reimplementedby refid="class_elementary_particle_1a141316fd968cce8ecc5aa11ce0757d63">SetCounter</reimplementedby>
        <reimplementedby refid="class_soma_1a9ef49d3fea8c0fbe6513f3910339f736">SetCounter</reimplementedby>
        <reimplementedby refid="class_neuroreceptor_1a0660a316ef44cf723509f720acd16f24">SetCounter</reimplementedby>
        <reimplementedby refid="class_membrane_channel_1a61931feff8f3bb485eeb5c80125bb732">SetCounter</reimplementedby>
        <reimplementedby refid="class_composite_force_particle_1a41cee6bd5a75fbf67fa6e76a9e7d7605">SetCounter</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a3762cf66ed266b310446417215dec3fa">SetCounter</reimplementedby>
        <reimplementedby refid="class_dimension_1a75c6a1a1e09c40b5860dc11a83384d9f">SetCounter</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="262" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="624" bodyend="624"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1ae0cb8d86b2fbb8396d605160344b42f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetGravitation</name>
        <reimplementedby refid="class_composite_force_particle_1ad9e1553ab0096230edd591e3135b223d">SetGravitation</reimplementedby>
        <reimplementedby refid="class_law_1a908ccc2b0a561a7324a15393ec157219">SetGravitation</reimplementedby>
        <reimplementedby refid="class_monomer_1ab38d44b27a46d5630aeb5e889f927c09">SetGravitation</reimplementedby>
        <reimplementedby refid="class_elementary_force_1aa36d5875964f7e2fc981f6fc5431be7f">SetGravitation</reimplementedby>
        <reimplementedby refid="class_solid_1ae237f2c713868c133e28ed7f75fc9125">SetGravitation</reimplementedby>
        <reimplementedby refid="class_dimension_1aeec6887382d09e3d78382582ff4e7c33">SetGravitation</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1af9f082a70f0cc25a3f818d9eace5a527">SetGravitation</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="263" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="625" bodyend="625"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a0f5cd04081b41ee931c0557dc397f6fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetWeak</name>
        <reimplementedby refid="class_composite_force_particle_1a7899a6efda98b062051e37c25c214e2a">SetWeak</reimplementedby>
        <reimplementedby refid="class_law_1a1009b4e0bc0b91f41d48dc137529e97b">SetWeak</reimplementedby>
        <reimplementedby refid="class_monomer_1ad4fe1db33f493575281e1a2fb35004ca">SetWeak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a093cdf0810e95f1d973bd9dc88c6788b">SetWeak</reimplementedby>
        <reimplementedby refid="class_solid_1aa28e0f7e4de2fc0c1e28d385214296bf">SetWeak</reimplementedby>
        <reimplementedby refid="class_dimension_1a157cfa28dd6bc5518d622d01445ca827">SetWeak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1ab39c9eed50da6d3630c4498ae64b804e">SetWeak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="264" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="626" bodyend="626"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a2d3d642bfdc863248e93535832fa4b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetWeakElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1a73a3792ae1c334e74f945fea56083f0b">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1a65e5e757041c1e72bb046eccbb6d66db">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1ab887d7cfd2ecb557efb3ace59852019c">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a38d4f86f18a9f84a4198ee43bc90f6b4">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1adb34befc66f8c681f3a85c44e0d00e3a">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1a1d2accef9e6adf747f5cc143ae4527c9">SetWeakElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a116f6818986a622e4a318857859e2495">SetWeakElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="265" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="627" bodyend="627"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aa981fc7e252b1fbbb675f0371860954d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetElectromagnetic</name>
        <reimplementedby refid="class_composite_force_particle_1a476c0d570c3be75c9e186df1ec2a5cda">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_law_1acabe1a3113c207368f3bb6fe81e13963">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_monomer_1a50e41be601b31450a97bfd15950cfb3d">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_elementary_force_1a67f6845bd715c29c17387d291b343a1b">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_solid_1a9a660f9d94f597712c67922aa1d4d795">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_dimension_1ad8c18ce6358904e01594092dca9f1311">SetElectromagnetic</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a31764cd5746369d16b45f2ff74806a0b">SetElectromagnetic</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="266" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="628" bodyend="628"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a608aa95698380f791a0ffba45cc1bee3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetElectromagneticElectroweak</name>
        <reimplementedby refid="class_composite_force_particle_1ad53c5d396b3c56241174a9bd78f9e07a">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_law_1aca9bb82839ddb46bd89f52b6211c5a54">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_monomer_1aa034728b74053ed3df452ddc8f1b46e8">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_elementary_force_1af4f12038c33d7edf9f13339fcd632ec9">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_solid_1a6617ae9fe4707d760a23b54eddf00dec">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_dimension_1aead73fc6a25388d14b514b2170735b1b">SetElectromagneticElectroweak</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a270f6842ec14b3e5b80dedf7b48ea6f4">SetElectromagneticElectroweak</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="267" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="629" bodyend="629"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a5946c8f3d4cda305f3ecd10df21a2f94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetStrong</name>
        <reimplementedby refid="class_composite_force_particle_1a06488ef0457335648b161d3ed746b643">SetStrong</reimplementedby>
        <reimplementedby refid="class_law_1a4cd0dd1908edbd02090dd1ba1387d722">SetStrong</reimplementedby>
        <reimplementedby refid="class_monomer_1a10b864f6bcad43f11a2316dbbe4c4742">SetStrong</reimplementedby>
        <reimplementedby refid="class_elementary_force_1aa1b5708cfab2069049fec5c924e1f246">SetStrong</reimplementedby>
        <reimplementedby refid="class_solid_1a478e15cdf15c5bb01cbcbd5f584ef83a">SetStrong</reimplementedby>
        <reimplementedby refid="class_dimension_1ab9021cb6727ed590026bf870c638576d">SetStrong</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a50f2a12c9873e623d6247318b041ba30">SetStrong</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="268" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="630" bodyend="630"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1aafec97a231126b71c73ac1258609a284" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetStrongFundamental</name>
        <reimplementedby refid="class_composite_force_particle_1a28d835658edcbecf60162475a8cb1ab6">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_law_1a4a7c8caa24acf453c1a8782a1ec4acf4">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_monomer_1ad9df06c1a8264bfdb514ef3ba04ef4c7">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_elementary_force_1afb00e9a10ec33eeb1daefce39b0468b7">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_solid_1a4342786a7785b1a3816d20de02105bcf">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_dimension_1a2de864aaa4b1074684395dbe928468c1">SetStrongFundamental</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1ac54286eea279f5caa98b642b9084fd55">SetStrongFundamental</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="269" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="631" bodyend="631"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a1b2d6197ddf3d613cc30bd04d22ed8b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::SetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetStrongResidual</name>
        <reimplementedby refid="class_composite_force_particle_1aeba1070d4ec6e52fd8276e38c6a6c2e1">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_law_1ad4a05c77d11ddec40b1e07246cac449d">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_monomer_1ae6ca57913da27fa749d33d1c4fed27ca">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_elementary_force_1ac25021d38c1d54bf711096ab37a461f6">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_solid_1a8b80ebe209fcd3afa4791968127753d0">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_dimension_1a9bd5480b1da689cd58bf61dac7169080">SetStrongResidual</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1a6f7210dd8c2786518329faa61b6e14d5">SetStrongResidual</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="270" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="632" bodyend="632"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_universe_1a0c485c504542409cbb5cfd8543c35b11" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Universe::PollElementaryForce</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>PollElementaryForce</name>
        <reimplementedby refid="class_law_1af99520c95b2cd8af0af110b78b2288ef">PollElementaryForce</reimplementedby>
        <reimplementedby refid="class_monomer_1a5b2375df1e19abdf6045c475d2ac23ca">PollElementaryForce</reimplementedby>
        <reimplementedby refid="class_elementary_force_1aa5ab479744dbf3e8578f8d2974299ff7">PollElementaryForce</reimplementedby>
        <reimplementedby refid="class_solid_1ae2a486e59f11f96a1a39756b3f3da53f">PollElementaryForce</reimplementedby>
        <reimplementedby refid="class_dimension_1a5b07f5c8558233c8f3488baf1fe3459a">PollElementaryForce</reimplementedby>
        <reimplementedby refid="class_cognitive_network_1ac97c08a0af7dc0d02fbe059827b6be87">PollElementaryForce</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/universe.h" line="272" column="1" bodyfile="BrainHarmonics/universe.cc" bodystart="634" bodyend="634"/>
        <referencedby refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" compoundref="universe_8h" startline="92" endline="104">~Universe</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="444">
        <label>Line</label>
        <link refid="class_line"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="447">
        <label>Polymer</label>
        <link refid="class_polymer"/>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="446" relation="public-inheritance">
        </childnode>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="437">
        <label>Spike</label>
        <link refid="class_spike"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="413">
        <label>Universe</label>
        <link refid="class_universe"/>
      </node>
      <node id="452">
        <label>Quad</label>
        <link refid="class_quad"/>
        <childnode refid="451" relation="public-inheritance">
        </childnode>
      </node>
      <node id="427">
        <label>Axon</label>
        <link refid="class_axon"/>
        <childnode refid="426" relation="public-inheritance">
        </childnode>
      </node>
      <node id="448">
        <label>Point</label>
        <link refid="class_point"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="422">
        <label>Neuron</label>
        <link refid="class_neuron"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="435">
        <label>Neurotransmitter</label>
        <link refid="class_neurotransmitter"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="418">
        <label>CognitiveOutput</label>
        <link refid="class_cognitive_output"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="440">
        <label>Dimension</label>
        <link refid="class_dimension"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="436">
        <label>Orbital</label>
        <link refid="class_orbital"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="416">
        <label>CognitiveNetwork</label>
        <link refid="class_cognitive_network"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="415">
        <label>AppTimer</label>
        <link refid="class_app_timer"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="423">
        <label>Membrane</label>
        <link refid="class_membrane"/>
        <childnode refid="422" relation="public-inheritance">
        </childnode>
      </node>
      <node id="442">
        <label>ElementaryParticle</label>
        <link refid="class_elementary_particle"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="430">
        <label>SynapticVesicle</label>
        <link refid="class_synaptic_vesicle"/>
        <childnode refid="429" relation="public-inheritance">
        </childnode>
      </node>
      <node id="438">
        <label>Synapse</label>
        <link refid="class_synapse"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="445">
        <label>Matter</label>
        <link refid="class_matter"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="414">
        <label>Abstraction</label>
        <link refid="class_abstraction"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="428">
        <label>AxonBranch</label>
        <link refid="class_axon_branch"/>
        <childnode refid="427" relation="public-inheritance">
        </childnode>
      </node>
      <node id="417">
        <label>CognitiveInput</label>
        <link refid="class_cognitive_input"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="450">
        <label>Polyhedron</label>
        <link refid="class_polyhedron"/>
        <childnode refid="449" relation="public-inheritance">
        </childnode>
      </node>
      <node id="439">
        <label>CompositeForceParticle</label>
        <link refid="class_composite_force_particle"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="433">
        <label>DendriteCleft</label>
        <link refid="class_dendrite_cleft"/>
        <childnode refid="432" relation="public-inheritance">
        </childnode>
      </node>
      <node id="451">
        <label>Polygon</label>
        <link refid="class_polygon"/>
        <childnode refid="450" relation="public-inheritance">
        </childnode>
      </node>
      <node id="446">
        <label>Monomer</label>
        <link refid="class_monomer"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="421">
        <label>MyelinSheath</label>
        <link refid="class_myelin_sheath"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="432">
        <label>DendriteBranch</label>
        <link refid="class_dendrite_branch"/>
        <childnode refid="431" relation="public-inheritance">
        </childnode>
      </node>
      <node id="419">
        <label>InterneuronSpace</label>
        <link refid="class_interneuron_space"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
      <node id="431">
        <label>Dendrite</label>
        <link refid="class_dendrite"/>
        <childnode refid="425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="449">
        <label>Solid</label>
        <link refid="class_solid"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="429">
        <label>AxonBouton</label>
        <link refid="class_axon_bouton"/>
        <childnode refid="428" relation="public-inheritance">
        </childnode>
      </node>
      <node id="426">
        <label>AxonHillock</label>
        <link refid="class_axon_hillock"/>
        <childnode refid="425" relation="public-inheritance">
        </childnode>
      </node>
      <node id="425">
        <label>Soma</label>
        <link refid="class_soma"/>
        <childnode refid="422" relation="public-inheritance">
        </childnode>
      </node>
      <node id="441">
        <label>ElementaryForce</label>
        <link refid="class_elementary_force"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="424">
        <label>MembraneChannel</label>
        <link refid="class_membrane_channel"/>
        <childnode refid="423" relation="public-inheritance">
        </childnode>
      </node>
      <node id="443">
        <label>Law</label>
        <link refid="class_law"/>
        <childnode refid="413" relation="public-inheritance">
        </childnode>
      </node>
      <node id="434">
        <label>Neuroreceptor</label>
        <link refid="class_neuroreceptor"/>
        <childnode refid="433" relation="public-inheritance">
        </childnode>
      </node>
      <node id="420">
        <label>SchwannCell</label>
        <link refid="class_schwann_cell"/>
        <childnode refid="419" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="453">
        <label>Universe</label>
        <link refid="class_universe"/>
        <childnode refid="453" relation="usage">
          <edgelabel>time_dimension_pointer</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BrainHarmonics/universe.h" line="69" column="1" bodyfile="BrainHarmonics/universe.h" bodystart="68" bodyend="316"/>
    <listofallmembers>
      <member refid="class_universe_1ab682307c963836cd81b35b5604bd7064" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddCognitiveNetwork</name></member>
      <member refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddCognitiveNetworks</name></member>
      <member refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddCompositeForceParticle</name></member>
      <member refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddCompositeForceParticles</name></member>
      <member refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddDimension</name></member>
      <member refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddDimensions</name></member>
      <member refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddElementaryForce</name></member>
      <member refid="class_universe_1a81d294300346e9f901836ab609cce942" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddElementaryForces</name></member>
      <member refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddElementaryParticle</name></member>
      <member refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddElementaryParticles</name></member>
      <member refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddMatter</name></member>
      <member refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddMatters</name></member>
      <member refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddMonomer</name></member>
      <member refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddMonomers</name></member>
      <member refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddPoint</name></member>
      <member refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddPoints</name></member>
      <member refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddPolymer</name></member>
      <member refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddPolymers</name></member>
      <member refid="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddSolid</name></member>
      <member refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" prot="public" virt="non-virtual"><scope>Universe</scope><name>AddSolids</name></member>
      <member refid="class_universe_1a901e16db5e8af258c66af7ac75662fe0" prot="public" virt="virtual"><scope>Universe</scope><name>AddTemporalAdjustment</name></member>
      <member refid="class_universe_1a15aa20218286fd11ecb9b792dfb63be3" prot="public" virt="virtual"><scope>Universe</scope><name>AdjustCounters</name></member>
      <member refid="class_universe_1a1f787da78fa196ba635db21a9e91dabb" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyElectromagnetic</name></member>
      <member refid="class_universe_1a4c36c1ab30db993307f88363dde5e8c5" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a76c0b5e63c2a7d1988c44db341c3d64c" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyGravitation</name></member>
      <member refid="class_universe_1a906a88b37f10bfa630bef49dfd0e907a" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyStrong</name></member>
      <member refid="class_universe_1a62789bcff84bd750b0366004381e2fdd" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyStrongFundamental</name></member>
      <member refid="class_universe_1af7becebb347be9a85541d96a3eca1ca7" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyStrongResidual</name></member>
      <member refid="class_universe_1a6d1226b3adec3c42a833afdbb6a65a92" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyWeak</name></member>
      <member refid="class_universe_1a46a906baabb63e5d31f8b48ea1fae52e" prot="public" virt="virtual"><scope>Universe</scope><name>ApplyWeakElectroweak</name></member>
      <member refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" prot="protected" virt="non-virtual"><scope>Universe</scope><name>cognitive_network_list</name></member>
      <member refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" prot="protected" virt="non-virtual"><scope>Universe</scope><name>composite_forceparticle_list</name></member>
      <member refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" prot="public" virt="non-virtual"><scope>Universe</scope><name>Creation</name></member>
      <member refid="class_universe_1a6c530f6d3647d078794b1060afbb1acf" prot="private" virt="non-virtual"><scope>Universe</scope><name>default_object_type</name></member>
      <member refid="class_universe_1aeccab978b0db45b64015aebdf44fa2d8" prot="private" virt="non-virtual"><scope>Universe</scope><name>Dimension</name></member>
      <member refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" prot="protected" virt="non-virtual"><scope>Universe</scope><name>dimension_list</name></member>
      <member refid="class_universe_1a76279bc43f1ce7a7fc4ee2f6a2cf4228" prot="private" virt="non-virtual"><scope>Universe</scope><name>duration_since_last_event</name></member>
      <member refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" prot="protected" virt="non-virtual"><scope>Universe</scope><name>elementary_force_list</name></member>
      <member refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" prot="protected" virt="non-virtual"><scope>Universe</scope><name>elementary_particle_list</name></member>
      <member refid="class_universe_1a982502e46868a00a9111738ccc9355c2" prot="public" virt="non-virtual"><scope>Universe</scope><name>ExtendLife</name></member>
      <member refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetCognitiveNetwork</name></member>
      <member refid="class_universe_1a06968a24194280a43f077c5b77379ea8" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetCognitiveNetworks</name></member>
      <member refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetCompositeForceParticle</name></member>
      <member refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetCompositeForceParticles</name></member>
      <member refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetDimension</name></member>
      <member refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetDimensions</name></member>
      <member refid="class_universe_1a63b850ef3f3394313353109d222bf5d1" prot="public" virt="virtual"><scope>Universe</scope><name>GetElectromagnetic</name></member>
      <member refid="class_universe_1a9f099605c082e7fa755787a6a8cab7ba" prot="public" virt="virtual"><scope>Universe</scope><name>GetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a9506017d944cb64e67567477c1505a53" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetElementaryForce</name></member>
      <member refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetElementaryForces</name></member>
      <member refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetElementaryParticle</name></member>
      <member refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetElementaryParticles</name></member>
      <member refid="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetEnergy</name></member>
      <member refid="class_universe_1ab0404e774ee0ed66b597ff5b8e989446" prot="public" virt="virtual"><scope>Universe</scope><name>GetGravitation</name></member>
      <member refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetMatter</name></member>
      <member refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetMatters</name></member>
      <member refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetMonomer</name></member>
      <member refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetMonomers</name></member>
      <member refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetPoint</name></member>
      <member refid="class_universe_1a765c6c658b7a465cd92418690db846ae" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetPoints</name></member>
      <member refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetPolymer</name></member>
      <member refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetPolymers</name></member>
      <member refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetSolid</name></member>
      <member refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" prot="public" virt="non-virtual"><scope>Universe</scope><name>GetSolids</name></member>
      <member refid="class_universe_1acb453ce71da418c5b5617fecede9571b" prot="public" virt="virtual"><scope>Universe</scope><name>GetStrong</name></member>
      <member refid="class_universe_1ab44daccba01ee7e3cf9b50bba83dd19e" prot="public" virt="virtual"><scope>Universe</scope><name>GetStrongFundamental</name></member>
      <member refid="class_universe_1af0f4b81950061e63c2855eb40957a5b1" prot="public" virt="virtual"><scope>Universe</scope><name>GetStrongResidual</name></member>
      <member refid="class_universe_1a4476b7e0a3fc1764909f556257fd9ec7" prot="public" virt="virtual"><scope>Universe</scope><name>GetWeak</name></member>
      <member refid="class_universe_1a645299738e6b798a037f2a15a2e7cf4d" prot="public" virt="virtual"><scope>Universe</scope><name>GetWeakElectroweak</name></member>
      <member refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" prot="public" virt="non-virtual"><scope>Universe</scope><name>IsDead</name></member>
      <member refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" prot="protected" virt="non-virtual"><scope>Universe</scope><name>matter_list</name></member>
      <member refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" prot="protected" virt="non-virtual"><scope>Universe</scope><name>monomer_list</name></member>
      <member refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" prot="public" virt="non-virtual"><scope>Universe</scope><name>object_energy</name></member>
      <member refid="class_universe_1a17c8d799331a5b32837f285c12cbe858" prot="public" virt="non-virtual"><scope>Universe</scope><name>object_energy_threshold</name></member>
      <member refid="class_universe_1aacac76865f3600d5f308b83db9809184" prot="private" virt="non-virtual"><scope>Universe</scope><name>object_expiration</name></member>
      <member refid="class_universe_1af8893059e57118d5da20d512b1df4d20" prot="private" virt="non-virtual"><scope>Universe</scope><name>object_initialised</name></member>
      <member refid="class_universe_1acb8bc2b083f0227a0427a5fbe6109286" prot="private" virt="non-virtual"><scope>Universe</scope><name>object_lifespan</name></member>
      <member refid="class_universe_1a64f4f4025c9be1d84492c766a002a6d4" prot="public" virt="non-virtual"><scope>Universe</scope><name>object_size</name></member>
      <member refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" prot="protected" virt="non-virtual"><scope>Universe</scope><name>point_list</name></member>
      <member refid="class_universe_1a0c485c504542409cbb5cfd8543c35b11" prot="public" virt="virtual"><scope>Universe</scope><name>PollElementaryForce</name></member>
      <member refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" prot="protected" virt="non-virtual"><scope>Universe</scope><name>polymer_list</name></member>
      <member refid="class_universe_1ad31a1d2865f16b1b8f4c597e116416e8" prot="private" virt="non-virtual"><scope>Universe</scope><name>previous_event_time</name></member>
      <member refid="class_universe_1a1d92b2277564577571c802f6e0c206dd" prot="public" virt="non-virtual"><scope>Universe</scope><name>ResetParameters</name></member>
      <member refid="class_universe_1aeda74e3902c0e56c0c09779854045cde" prot="public" virt="non-virtual"><scope>Universe</scope><name>ReturnEnergy</name></member>
      <member refid="class_universe_1a0406fae45a576526b0ea78b2b5a74ebb" prot="private" virt="non-virtual"><scope>Universe</scope><name>scaled_time</name></member>
      <member refid="class_universe_1a3b3da7c86a7b75e5e5c0b7972ac82a87" prot="public" virt="virtual"><scope>Universe</scope><name>SetCharge</name></member>
      <member refid="class_universe_1aa22202ae740eb1355529afcb13285e91" prot="public" virt="virtual"><scope>Universe</scope><name>SetCounter</name></member>
      <member refid="class_universe_1aa981fc7e252b1fbbb675f0371860954d" prot="public" virt="virtual"><scope>Universe</scope><name>SetElectromagnetic</name></member>
      <member refid="class_universe_1a608aa95698380f791a0ffba45cc1bee3" prot="public" virt="virtual"><scope>Universe</scope><name>SetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a868250e67d0fcb2483aa8bdd73c40a02" prot="public" virt="non-virtual"><scope>Universe</scope><name>SetEnergy</name></member>
      <member refid="class_universe_1ae0cb8d86b2fbb8396d605160344b42f5" prot="public" virt="virtual"><scope>Universe</scope><name>SetGravitation</name></member>
      <member refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" prot="public" virt="non-virtual"><scope>Universe</scope><name>SetLifespan</name></member>
      <member refid="class_universe_1a2274a54fbdc7504c897e4272162bf17a" prot="public" virt="non-virtual"><scope>Universe</scope><name>SetObjectType</name></member>
      <member refid="class_universe_1ae2ae1c3b3e4cde2c18f5f6a814761ec8" prot="public" virt="virtual"><scope>Universe</scope><name>SetSpin</name></member>
      <member refid="class_universe_1a5946c8f3d4cda305f3ecd10df21a2f94" prot="public" virt="virtual"><scope>Universe</scope><name>SetStrong</name></member>
      <member refid="class_universe_1aafec97a231126b71c73ac1258609a284" prot="public" virt="virtual"><scope>Universe</scope><name>SetStrongFundamental</name></member>
      <member refid="class_universe_1a1b2d6197ddf3d613cc30bd04d22ed8b7" prot="public" virt="virtual"><scope>Universe</scope><name>SetStrongResidual</name></member>
      <member refid="class_universe_1a0f5cd04081b41ee931c0557dc397f6fb" prot="public" virt="virtual"><scope>Universe</scope><name>SetWeak</name></member>
      <member refid="class_universe_1a2d3d642bfdc863248e93535832fa4b00" prot="public" virt="virtual"><scope>Universe</scope><name>SetWeakElectroweak</name></member>
      <member refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" prot="protected" virt="non-virtual"><scope>Universe</scope><name>solid_list</name></member>
      <member refid="class_universe_1ac7a26cb9cb97f61bb270a7bbef4a2ae2" prot="private" virt="non-virtual"><scope>Universe</scope><name>test_subject_one</name></member>
      <member refid="class_universe_1ae4768ac314bcab322ffe484658b2bb06" prot="private" virt="non-virtual"><scope>Universe</scope><name>test_subject_two</name></member>
      <member refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" prot="public" virt="non-virtual"><scope>Universe</scope><name>TheCalculatedTimeNow</name></member>
      <member refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" prot="public" virt="non-virtual"><scope>Universe</scope><name>TheTimeNow</name></member>
      <member refid="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" prot="public" virt="non-virtual"><scope>Universe</scope><name>time_dimension_pointer</name></member>
      <member refid="class_universe_1a49ef0c3c2bd9ec438f5d9703c6aaa402" prot="private" virt="non-virtual"><scope>Universe</scope><name>time_object_created</name></member>
      <member refid="class_universe_1a4d137a146dd3c2514dfb692dfbab6984" prot="public" virt="non-virtual"><scope>Universe</scope><name>Universe</name></member>
      <member refid="class_universe_1a1210ce56049f1fc67f53aeda223bb82b" prot="public" virt="non-virtual"><scope>Universe</scope><name>Universe</name></member>
      <member refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" prot="public" virt="non-virtual"><scope>Universe</scope><name>Universe</name></member>
      <member refid="class_universe_1a86742eff738f3d7812da8581a59f0812" prot="private" virt="non-virtual"><scope>Universe</scope><name>universe_energy</name></member>
      <member refid="class_universe_1a4332e3210a61dcfcb26e16b9f604d489" prot="private" virt="non-virtual"><scope>Universe</scope><name>universe_type</name></member>
      <member refid="class_universe_1a64ee5a2c7e86c56fa426acb750438ce9" prot="public" virt="non-virtual"><scope>Universe</scope><name>Update</name></member>
      <member refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" prot="public" virt="non-virtual"><scope>Universe</scope><name>UpdateCycle</name></member>
      <member refid="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" prot="public" virt="non-virtual"><scope>Universe</scope><name>UseEnergy</name></member>
      <member refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" prot="public" virt="virtual"><scope>Universe</scope><name>~Universe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
