<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="cognitivenetwork_8h" kind="file" language="C++">
    <compoundname>cognitivenetwork.h</compoundname>
    <includes refid="dimension_8h" local="yes">dimension.h</includes>
    <includes refid="universe_8h" local="yes">universe.h</includes>
    <includedby refid="neuron_8h" local="yes">BrainHarmonics/neuron.h</includedby>
    <includedby refid="synapse_8h" local="yes">BrainHarmonics/synapse.h</includedby>
    <includedby refid="_brain_harmonics_8cc" local="yes">BrainHarmonics/BrainHarmonics.cc</includedby>
    <includedby refid="cognitiveinput_8h" local="yes">BrainHarmonics/cognitiveinput.h</includedby>
    <includedby refid="cognitiveoutput_8h" local="yes">BrainHarmonics/cognitiveoutput.h</includedby>
    <includedby refid="orbital_8h" local="yes">BrainHarmonics/orbital.h</includedby>
    <includedby refid="interneuronspace_8h" local="yes">BrainHarmonics/interneuronspace.h</includedby>
    <includedby refid="myelinsheath_8h" local="yes">BrainHarmonics/myelinsheath.h</includedby>
    <includedby refid="neurotransmitter_8h" local="yes">BrainHarmonics/neurotransmitter.h</includedby>
    <includedby refid="spike_8h" local="yes">BrainHarmonics/spike.h</includedby>
    <includedby refid="cognitivenetwork_8cc" local="yes">BrainHarmonics/cognitivenetwork.cc</includedby>
    <includedby refid="universe_8cc" local="yes">BrainHarmonics/universe.cc</includedby>
    <incdepgraph>
      <node id="425">
        <label>BrainHarmonics/cognitivenetwork.h</label>
        <link refid="cognitivenetwork_8h"/>
        <childnode refid="426" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="426">
        <label>dimension.h</label>
        <link refid="dimension_8h"/>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
        <childnode refid="429" relation="include">
        </childnode>
      </node>
      <node id="428">
        <label>vector</label>
      </node>
      <node id="429">
        <label>universe.h</label>
        <link refid="universe_8h"/>
        <childnode refid="430" relation="include">
        </childnode>
        <childnode refid="427" relation="include">
        </childnode>
        <childnode refid="431" relation="include">
        </childnode>
        <childnode refid="428" relation="include">
        </childnode>
      </node>
      <node id="431">
        <label>math.h</label>
      </node>
      <node id="427">
        <label>iostream</label>
      </node>
      <node id="430">
        <label>chrono</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="447">
        <label>BrainHarmonics/soma.cc</label>
        <link refid="soma_8cc"/>
      </node>
      <node id="435">
        <label>BrainHarmonics/axonhillock.h</label>
        <link refid="axonhillock_8h"/>
        <childnode refid="436" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="477">
        <label>BrainHarmonics/spike.h</label>
        <link refid="spike_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="478" relation="include">
        </childnode>
      </node>
      <node id="443">
        <label>BrainHarmonics/synapticvesicle.cc</label>
        <link refid="synapticvesicle_8cc"/>
      </node>
      <node id="464">
        <label>BrainHarmonics/orbital.cc</label>
        <link refid="orbital_8cc"/>
      </node>
      <node id="432">
        <label>BrainHarmonics/cognitivenetwork.h</label>
        <link refid="cognitivenetwork_8h"/>
        <childnode refid="433" relation="include">
        </childnode>
        <childnode refid="465" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="466" relation="include">
        </childnode>
        <childnode refid="468" relation="include">
        </childnode>
        <childnode refid="470" relation="include">
        </childnode>
        <childnode refid="471" relation="include">
        </childnode>
        <childnode refid="474" relation="include">
        </childnode>
        <childnode refid="475" relation="include">
        </childnode>
        <childnode refid="477" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="479" relation="include">
        </childnode>
      </node>
      <node id="474">
        <label>BrainHarmonics/myelinsheath.h</label>
        <link refid="myelinsheath_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="463">
        <label>BrainHarmonics/cognitivenetwork.cc</label>
        <link refid="cognitivenetwork_8cc"/>
      </node>
      <node id="440">
        <label>BrainHarmonics/axonbouton.cc</label>
        <link refid="axonbouton_8cc"/>
      </node>
      <node id="453">
        <label>BrainHarmonics/interneuronspace.cc</label>
        <link refid="interneuronspace_8cc"/>
      </node>
      <node id="470">
        <label>BrainHarmonics/orbital.h</label>
        <link refid="orbital_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
      </node>
      <node id="473">
        <label>BrainHarmonics/schwanncell.cc</label>
        <link refid="schwanncell_8cc"/>
      </node>
      <node id="466">
        <label>BrainHarmonics/cognitiveinput.h</label>
        <link refid="cognitiveinput_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="467" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
      </node>
      <node id="442">
        <label>BrainHarmonics/BrainHarmonics.cc</label>
        <link refid="_brain_harmonics_8cc"/>
      </node>
      <node id="446">
        <label>BrainHarmonics/axonhillock.cc</label>
        <link refid="axonhillock_8cc"/>
      </node>
      <node id="436">
        <label>BrainHarmonics/axon.h</label>
        <link refid="axon_8h"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="438" relation="include">
        </childnode>
        <childnode refid="446" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="465">
        <label>BrainHarmonics/synapse.h</label>
        <link refid="synapse_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="475">
        <label>BrainHarmonics/neurotransmitter.h</label>
        <link refid="neurotransmitter_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="476" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
      </node>
      <node id="458">
        <label>BrainHarmonics/neuron.cc</label>
        <link refid="neuron_8cc"/>
      </node>
      <node id="468">
        <label>BrainHarmonics/cognitiveoutput.h</label>
        <link refid="cognitiveoutput_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="469" relation="include">
        </childnode>
      </node>
      <node id="462">
        <label>BrainHarmonics/membranechannel.cc</label>
        <link refid="membranechannel_8cc"/>
      </node>
      <node id="457">
        <label>BrainHarmonics/dendrite.cc</label>
        <link refid="dendrite_8cc"/>
      </node>
      <node id="445">
        <label>BrainHarmonics/myelinsheath.cc</label>
        <link refid="myelinsheath_8cc"/>
      </node>
      <node id="455">
        <label>BrainHarmonics/synapse.cc</label>
        <link refid="synapse_8cc"/>
      </node>
      <node id="437">
        <label>BrainHarmonics/axon.cc</label>
        <link refid="axon_8cc"/>
      </node>
      <node id="452">
        <label>BrainHarmonics/dendritecleft.cc</label>
        <link refid="dendritecleft_8cc"/>
      </node>
      <node id="471">
        <label>BrainHarmonics/interneuronspace.h</label>
        <link refid="interneuronspace_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="472" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
      </node>
      <node id="479">
        <label>BrainHarmonics/universe.cc</label>
        <link refid="universe_8cc"/>
      </node>
      <node id="454">
        <label>BrainHarmonics/neuroreceptor.cc</label>
        <link refid="neuroreceptor_8cc"/>
      </node>
      <node id="459">
        <label>BrainHarmonics/membrane.h</label>
        <link refid="membrane_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="460" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
      </node>
      <node id="448">
        <label>BrainHarmonics/dendrite.h</label>
        <link refid="dendrite_8h"/>
        <childnode refid="449" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="449">
        <label>BrainHarmonics/dendritebranch.h</label>
        <link refid="dendritebranch_8h"/>
        <childnode refid="450" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="457" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
      </node>
      <node id="438">
        <label>BrainHarmonics/axonbranch.h</label>
        <link refid="axonbranch_8h"/>
        <childnode refid="437" relation="include">
        </childnode>
        <childnode refid="439" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="445" relation="include">
        </childnode>
      </node>
      <node id="451">
        <label>BrainHarmonics/neuroreceptor.h</label>
        <link refid="neuroreceptor_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="454" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="433">
        <label>BrainHarmonics/neuron.h</label>
        <link refid="neuron_8h"/>
        <childnode refid="434" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="459" relation="include">
        </childnode>
        <childnode refid="463" relation="include">
        </childnode>
        <childnode refid="453" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="464" relation="include">
        </childnode>
        <childnode refid="455" relation="include">
        </childnode>
      </node>
      <node id="434">
        <label>BrainHarmonics/soma.h</label>
        <link refid="soma_8h"/>
        <childnode refid="435" relation="include">
        </childnode>
        <childnode refid="448" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="458" relation="include">
        </childnode>
        <childnode refid="447" relation="include">
        </childnode>
      </node>
      <node id="472">
        <label>BrainHarmonics/schwanncell.h</label>
        <link refid="schwanncell_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="473" relation="include">
        </childnode>
      </node>
      <node id="444">
        <label>BrainHarmonics/axonbranch.cc</label>
        <link refid="axonbranch_8cc"/>
      </node>
      <node id="469">
        <label>BrainHarmonics/cognitiveoutput.cc</label>
        <link refid="cognitiveoutput_8cc"/>
      </node>
      <node id="439">
        <label>BrainHarmonics/axonbouton.h</label>
        <link refid="axonbouton_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="441" relation="include">
        </childnode>
        <childnode refid="444" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
      </node>
      <node id="478">
        <label>BrainHarmonics/spike.cc</label>
        <link refid="spike_8cc"/>
      </node>
      <node id="441">
        <label>BrainHarmonics/synapticvesicle.h</label>
        <link refid="synapticvesicle_8h"/>
        <childnode refid="440" relation="include">
        </childnode>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="443" relation="include">
        </childnode>
      </node>
      <node id="450">
        <label>BrainHarmonics/dendritecleft.h</label>
        <link refid="dendritecleft_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="451" relation="include">
        </childnode>
        <childnode refid="456" relation="include">
        </childnode>
        <childnode refid="452" relation="include">
        </childnode>
      </node>
      <node id="467">
        <label>BrainHarmonics/cognitiveinput.cc</label>
        <link refid="cognitiveinput_8cc"/>
      </node>
      <node id="461">
        <label>BrainHarmonics/membrane.cc</label>
        <link refid="membrane_8cc"/>
      </node>
      <node id="476">
        <label>BrainHarmonics/neurotransmitter.cc</label>
        <link refid="neurotransmitter_8cc"/>
      </node>
      <node id="456">
        <label>BrainHarmonics/dendritebranch.cc</label>
        <link refid="dendritebranch_8cc"/>
      </node>
      <node id="460">
        <label>BrainHarmonics/membranechannel.h</label>
        <link refid="membranechannel_8h"/>
        <childnode refid="442" relation="include">
        </childnode>
        <childnode refid="461" relation="include">
        </childnode>
        <childnode refid="462" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_cognitive_network" prot="public">CognitiveNetwork</innerclass>
    <innerclass refid="struct_cognitive_network_1_1_orbital_connection" prot="private">CognitiveNetwork::OrbitalConnection</innerclass>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>cognitivenetwork.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>BrainHarmonics</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Created<sp/>by<sp/>Paul<sp/>Isaac&apos;s<sp/>on<sp/>03/02/16.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/>Copyright<sp/>©<sp/>2016<sp/>Paul<sp/>Isaac&apos;s.<sp/>All<sp/>rights<sp/>reserved.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BRAINHARMONICS_COGNITIVENETWORK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BRAINHARMONICS_COGNITIVENETWORK_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dimension_8h" kindref="compound">dimension.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="universe_8h" kindref="compound">universe.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15" refid="class_cognitive_network" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_universe" kindref="compound">Universe</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Object<sp/>must<sp/>be<sp/>attached<sp/>to<sp/>a<sp/>parent.<sp/>Default<sp/>constructor<sp/>()<sp/>not<sp/>applicable.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="class_cognitive_network_1a3daddb316744336648d317e7f71ed371" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network_1a3daddb316744336648d317e7f71ed371" kindref="member">CognitiveNetwork</ref>()<sp/>:<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>(0)<sp/>{}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="21" refid="class_cognitive_network_1a167b15e33bcbca43cb0a516159e890f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network_1a167b15e33bcbca43cb0a516159e890f2" kindref="member">CognitiveNetwork</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>object_type)<sp/>:<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>(object_type,<sp/><ref refid="namespacestd" kindref="compound">std</ref>::chrono::high_resolution_clock::now())<sp/>{}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="23" refid="class_cognitive_network_1ac7ba285d3468a929dac88756a2c4e4f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network_1ac7ba285d3468a929dac88756a2c4e4f9" kindref="member">CognitiveNetwork</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>object_type,<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>:<sp/><ref refid="class_universe" kindref="compound">Universe</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="25" refid="class_cognitive_network_1a6ec49dcc8cc58cded71983291629179c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network_1a6ec49dcc8cc58cded71983291629179c" kindref="member">CognitiveNetwork</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>object_type,<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_universe" kindref="compound">Universe</ref>&amp;<sp/>universe_connector)<sp/>:<sp/><ref refid="class_universe" kindref="compound">Universe</ref>(universe_connector)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>cognitivenetwork<sp/>type<sp/>will<sp/>have<sp/>its<sp/>own<sp/>parameter<sp/>ranges.<sp/>The<sp/>default<sp/>is<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>cognitivenetwork_type<sp/>=<sp/>object_type;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>time_object_created<sp/>=<sp/>event_time;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Each<sp/>new<sp/>object<sp/>has<sp/>its<sp/>default<sp/>parameters<sp/>set<sp/>here.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" kindref="member">ResetParameters</ref>(event_time);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Call<sp/>to<sp/>announce<sp/>object<sp/>creation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" kindref="member">Creation</ref>(time_object_created,<sp/></highlight><highlight class="stringliteral">&quot;CognitiveNetwork&quot;</highlight><highlight class="normal">,<sp/>cognitivenetwork_type);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="39" refid="class_cognitive_network_1a17142cc6f0bb3894e63f6c66fa401778" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a17142cc6f0bb3894e63f6c66fa401778" kindref="member">~CognitiveNetwork</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41" refid="class_cognitive_network_1a160bb447671609eb14b1b8043639ac74" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a160bb447671609eb14b1b8043639ac74" kindref="member">GetCounter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cognitivenetworkCounter;<sp/>}</highlight></codeline>
<codeline lineno="42" refid="class_cognitive_network_1a6bb3fc06029c260dd658d0db072625a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a6bb3fc06029c260dd658d0db072625a7" kindref="member">GetCapacity</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cognitivenetworkCapacity;<sp/>}</highlight></codeline>
<codeline lineno="43" refid="class_cognitive_network_1a055b3711835b8d134356298f8975f04d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a055b3711835b8d134356298f8975f04d" kindref="member">SetCapacity</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cognitivenetworkCapacity<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="44" refid="class_cognitive_network_1ad293916cfa0e454ef40d7e228d0dcba3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ad293916cfa0e454ef40d7e228d0dcba3" kindref="member">GetUsage</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cognitivenetworkUsage;<sp/>}</highlight></codeline>
<codeline lineno="45" refid="class_cognitive_network_1a8b6b4afc47df279604be13bce77f5b0a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a8b6b4afc47df279604be13bce77f5b0a" kindref="member">SetUsage</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>cognitivenetworkUsage<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="47" refid="class_cognitive_network_1af23b9bce2587ccf3c8204be33fc76c61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af23b9bce2587ccf3c8204be33fc76c61" kindref="member">GetEnergy</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_energy;<sp/>}</highlight></codeline>
<codeline lineno="48" refid="class_cognitive_network_1a3a9be1c6697d063b0836cdcdc7a2600c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a3a9be1c6697d063b0836cdcdc7a2600c" kindref="member">GetGateKeeper</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_GateKeeper;<sp/>}</highlight></codeline>
<codeline lineno="49" refid="class_cognitive_network_1ad7f5cc836340017d38c22b57e177fc91" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ad7f5cc836340017d38c22b57e177fc91" kindref="member">GetChannelMin</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ChannelMin;<sp/>}</highlight></codeline>
<codeline lineno="50" refid="class_cognitive_network_1ab67da8690b83618d88f88411121d7071" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ab67da8690b83618d88f88411121d7071" kindref="member">GetChannelMax</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_ChannelMax;<sp/>}</highlight></codeline>
<codeline lineno="51" refid="class_cognitive_network_1aa64c93ecec84b57b25e1fdb173795f9b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aa64c93ecec84b57b25e1fdb173795f9b" kindref="member">GetDisabled</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_disabled;<sp/>}</highlight></codeline>
<codeline lineno="52" refid="class_cognitive_network_1a1c92a8f6c42788cf8ca890f062f853a3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a1c92a8f6c42788cf8ca890f062f853a3" kindref="member">GetObjectType</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cognitivenetwork_type;<sp/>}</highlight></codeline>
<codeline lineno="53" refid="class_cognitive_network_1a03d744f9d0d420c1e044646bc6bd2552" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a03d744f9d0d420c1e044646bc6bd2552" kindref="member">GetRestingPotential</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_RestingPotential;<sp/>}</highlight></codeline>
<codeline lineno="54" refid="class_cognitive_network_1af33f3ff9dd829da73d183d2624f24964" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af33f3ff9dd829da73d183d2624f24964" kindref="member">GetCognitiveNetworkDeviceTag</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Tag;<sp/>}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="56" refid="class_cognitive_network_1a23c6a11d9f15a141f69a9779f174bfb3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a23c6a11d9f15a141f69a9779f174bfb3" kindref="member">SetCounter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>m_Counter<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="57" refid="class_cognitive_network_1af2f96107858445a0b7be2be6af5b5c01" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af2f96107858445a0b7be2be6af5b5c01" kindref="member">SetEnergy</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>object_energy<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="58" refid="class_cognitive_network_1a83bc4047721417212fa1bbbfa64da5ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a83bc4047721417212fa1bbbfa64da5ee" kindref="member">SetGateKeeper</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>m_GateKeeper<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="59" refid="class_cognitive_network_1a6e2a6ced4ede9a4eef721d6c5aac433c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a6e2a6ced4ede9a4eef721d6c5aac433c" kindref="member">SetChannelMin</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>m_ChannelMin<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="60" refid="class_cognitive_network_1a9c208d66ee284adfceb3b2dd76532a00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a9c208d66ee284adfceb3b2dd76532a00" kindref="member">SetChannelMax</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>m_ChannelMax<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="61" refid="class_cognitive_network_1ac29e676c84244f5b64c0083a0efead28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ac29e676c84244f5b64c0083a0efead28" kindref="member">SetDisabled</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>object_disabled<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="62" refid="class_cognitive_network_1abeac08d7cbf9df4b36de40aa9301e978" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1abeac08d7cbf9df4b36de40aa9301e978" kindref="member">toggleDisabled</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>object_disabled<sp/>=<sp/>!object_disabled;<sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="64" refid="class_cognitive_network_1af5995eaa4ba35c555a6b65d895451f25" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af5995eaa4ba35c555a6b65d895451f25" kindref="member">GetOrbitalPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>orbital_pool;<sp/>}</highlight></codeline>
<codeline lineno="65" refid="class_cognitive_network_1af81132245e486c496a055f54a5a520d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af81132245e486c496a055f54a5a520d0" kindref="member">GetNeuronPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>neuron_pool;<sp/>}</highlight></codeline>
<codeline lineno="66" refid="class_cognitive_network_1ae0068b9df823e1b10fed3c73f1cb4702" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ae0068b9df823e1b10fed3c73f1cb4702" kindref="member">GetSynapsePool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>synapse_pool;<sp/>}</highlight></codeline>
<codeline lineno="67" refid="class_cognitive_network_1a4e5b1d60cda4ddb4bd04d8dca42b7a5b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a4e5b1d60cda4ddb4bd04d8dca42b7a5b" kindref="member">GetNeurotransmitterPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>{<sp/>std::chrono::time_point&lt;Clock&gt;<sp/>last_event_time<sp/>=<sp/>event_time;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>neurotransmitter_pool;<sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69" refid="class_cognitive_network_1aaa3929bfba068659e9681f85deaf79cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aaa3929bfba068659e9681f85deaf79cb" kindref="member">SetOrbitalPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_pool)<sp/>{<sp/>orbital_pool<sp/>=<sp/>set_pool;<sp/>}</highlight></codeline>
<codeline lineno="70" refid="class_cognitive_network_1aeb59b511e2ef526c43df1d24a468b571" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aeb59b511e2ef526c43df1d24a468b571" kindref="member">SetNeuronPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_pool)<sp/>{<sp/>neuron_pool<sp/>=<sp/>set_pool;<sp/>}</highlight></codeline>
<codeline lineno="71" refid="class_cognitive_network_1a30f35d1bff2e1e3a5a2d921791cfe6b8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a30f35d1bff2e1e3a5a2d921791cfe6b8" kindref="member">SetSynapsePool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_pool)<sp/>{<sp/>synapse_pool<sp/>=<sp/>set_pool;<sp/>}</highlight></codeline>
<codeline lineno="72" refid="class_cognitive_network_1aaa10c36c0b0024fa717d8d61a4a06920" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aaa10c36c0b0024fa717d8d61a4a06920" kindref="member">SetNeurotransmitterPool</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>set_pool)<sp/>{<sp/>neurotransmitter_pool<sp/>=<sp/>set_pool;<sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ad95a0b25c7f61fc52322938eb13c9e3e" kindref="member">SetObjectType</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>object_type);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="class_cognitive_network_1a0e8a64151a2446fc16a074ad2de325df" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a0e8a64151a2446fc16a074ad2de325df" kindref="member">SetCognitiveNetworkDeviceTag</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/>{<sp/>m_Tag<sp/>=<sp/>val;<sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a8af8ed2605263e57a32e457aba2af99d" kindref="member">ResetParameters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aa37dda869174e4eef986cca4ce3e55d2" kindref="member">UpdateCycle</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>set_of_update_pointers,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pointer_type);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a05dccc7759456df13a732899a8f1f4c4" kindref="member">Update</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><ref refid="class_cognitive_network_1add96197c3dc51d94d06edb480fbc4a38" kindref="member">CreateCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a0833f7b587f14e0c0778661a56bce957" kindref="member">CreateCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a058cb2b044d56268e36f153fac21084e" kindref="member">CloneCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aeaf2883b25dbf1eefd11c2d92efe8816" kindref="member">CloneCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a12e085cd47b7661190527fe55b6da8dc" kindref="member">DestroyCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a00aa44de67dd0593a2498ce7a3b4c0f2" kindref="member">DestroyCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a6af57693982286ac6a6831ca3010b760" kindref="member">AddCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1afc92c9b378e7e0873d0164bc4f2635df" kindref="member">AddCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1af79bf7f8b61d5392df7a87bd444eb550" kindref="member">RemoveCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aaaf93e7c732b1e1e81060f82ff73c93a" kindref="member">RemoveCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a2ff68a0d11cdb29af2f05a69a11911a4" kindref="member">GetCognitiveInput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a92b896643b881e4030401e0f7fd256bf" kindref="member">GetCognitiveInputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><ref refid="class_cognitive_network_1ac220350499bd323bd8f24ff0050cd60d" kindref="member">CreateCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a002df11f4389a122fc140c186ab665c9" kindref="member">CreateCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ab24f74115c11275f365245a4bb826c91" kindref="member">CloneCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a5734aa5378e9b701dca5e98017c1ea35" kindref="member">CloneCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a8475cf7277d25532bb31926e768600e8" kindref="member">DestroyCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1ad08191cbab02f26f69d25bc7e6b5c1ee" kindref="member">DestroyCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a8a9b533b89b7d62b21cf41bdf957ef14" kindref="member">AddCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a6299433811b76f0ccb97cf69fe9bfb66" kindref="member">AddCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a9874b11ac465c84ccf7baab0a40fb84e" kindref="member">RemoveCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a2f4956b004c828f0165f28c03e089144" kindref="member">RemoveCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a947fa4c50fecc4008d2bcfc96a272ffc" kindref="member">GetCognitiveOutput</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1acdf847165899c36d6d9d6843ecc27218" kindref="member">GetCognitiveOutputs</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1af0dc86c7905baae6f2b5efb3a65b8819" kindref="member">CreateInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a2d671451d659079d5efb5cda10e48827" kindref="member">CreateInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a1eef76439fffb9daaa3edc4e3c012831" kindref="member">CloneInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a5ee1d7b6df5bfe0048b4aea317c1974c" kindref="member">CloneInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1acdda154177d3b3a92885c10f6b3dc274" kindref="member">DestroyInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a718833496332e0471186c9a886005c4a" kindref="member">DestroyInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ac6a7e01f097d0cb6434eb8fa7640c214" kindref="member">AddInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aeafe16b9f44ae1316c072a85e726ee83" kindref="member">AddInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a04e38cea356f1c7ac31c4df5e19d759c" kindref="member">RemoveInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a994c5f93447a82429809c89aa08d3dc1" kindref="member">RemoveInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a0119d61e86ea6b84ad7f69f88d59d008" kindref="member">GetInterneuronSpace</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a4daf966882d527b784bd359794ad39ca" kindref="member">GetInterneuronSpaces</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a5e0a782afc45d75d57fef91dd5513546" kindref="member">CreateOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a46d4189cf3e6b9af6190abe7b79539b4" kindref="member">CreateOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1aa8992740f25d46b0be3d9d8344c39f67" kindref="member">CloneOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a266b7baf2fd9d6b5c5652e251830020a" kindref="member">CloneOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1aefecb3a2464f7f21449e522af5119c63" kindref="member">DestroyOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a0ee8259d26e30779bf06471fb8a10bb5" kindref="member">DestroyOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ab6caa285c25568259ae935cf9e746af4" kindref="member">AddOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a9dbf4a9fab3b806d2bd6b2701b7a9548" kindref="member">AddOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a6ed0e198f6dcfdd45d57df5d3ad5754c" kindref="member">RemoveOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1af7834d400995607c2a5a5eac7b5e006d" kindref="member">RemoveOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a69655ef1e12bac5f74c2eb85c72720f4" kindref="member">GetOrbital</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aa21d28ffc3b507236a7dad64663f6c42" kindref="member">GetOrbitals</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a9b5fcaf824d5b587775e7c44630affe6" kindref="member">CreateNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1af9b2a136584c962e44114a7ee3d2804a" kindref="member">CreateNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1abf42d64965d64836d6fcbd7ce33c8db4" kindref="member">CloneNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a8852409e92434523ddbd48d699c5609f" kindref="member">CloneNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ab3318f517da206ad4286b6cc22acf520" kindref="member">DestroyNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1af2f706043a0c227b93877e29b056f3c9" kindref="member">DestroyNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a8457342637fde2d814c54942c3367416" kindref="member">AddNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1ade928e3355db97d3c5d99501ff4a3b69" kindref="member">AddNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a33e911ec87d902a8fd8bb6d9e23c4261" kindref="member">RemoveNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a130985ff0aa14b2a17fc2c589e65f868" kindref="member">RemoveNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ac12f0af92d878d45dca7303dc065c383" kindref="member">GetNeuron</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a0e9e37e976a7ca5ee625e2d7b36fd7ea" kindref="member">GetNeurons</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ade8e9295b35790b136dca9084a1b7aa9" kindref="member">CreateSynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1ae6ae16f401e7699032ac9459132763c0" kindref="member">CreateSynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a40f88d3ce9d386ee4db5c1e0ad84dad2" kindref="member">CloneSynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a82fe792704bcbf7df56b3023266f5f70" kindref="member">CloneSynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a08b87aa9a0823355ef7cef77414dc6dc" kindref="member">DestroySynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a141e9e8e6337d42fc19edd75bb50e47b" kindref="member">DestroySynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a4bfdcd2affdfe2adb2da68dba60dff0e" kindref="member">AddSynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a09d9e01cbd8596af7fac626ce2753643" kindref="member">AddSynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a0764ede1c23caa7022a01657a0e3726b" kindref="member">RemoveSynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a87d6628f388baed1edb8efda9062c443" kindref="member">RemoveSynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a1944aaa13667bc267e6ef44892da969d" kindref="member">GetSynapse</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aa3376f2e7aed9639c2b5ba27aa6fb314" kindref="member">GetSynapses</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a53d1047ae3ec721540b64b05abe01559" kindref="member">CreateNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1ad877c495c9efdb582613a5af8d854ac3" kindref="member">CreateNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1af78d31471a121844e4735d809c900502" kindref="member">CloneNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>clone_object,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a2b2d40d179f95ff96e9aa0559234cc31" kindref="member">CloneNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>cloning_list,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>perfection_membership);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a0f943978df49ef879c43c15c81682a8a" kindref="member">DestroyNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>destroy_object);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a7f705e562562e9778ee0b5260dda9f09" kindref="member">DestroyNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>destruction_list);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ab80ffdc75ad4754463c356d36fb81ab4" kindref="member">AddNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/>add_object);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a085f61ab94b71406a0a5e11d789ed69c" kindref="member">AddNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/>add_objects);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1ac0728c12a6d4bb87b6e8c9163435c8e6" kindref="member">RemoveNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a5e706084296ce84ff6884c1506213b03" kindref="member">RemoveNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quantity);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_cognitive_network" kindref="compound">CognitiveNetwork</ref>*<sp/><sp/><ref refid="class_cognitive_network_1a85890c201376061b1ffbe8fdfc1a8633" kindref="member">GetNeurotransmitter</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>selector);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1ac56b1585864b372c8897dcb5720d00a7" kindref="member">GetNeurotransmitters</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259" refid="class_cognitive_network_1a99f801aeca299186cc706696696749b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a99f801aeca299186cc706696696749b1" kindref="member">SetCharge</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="260" refid="class_cognitive_network_1a3fc6d08413bfd4350f94d6f2627eedc7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a3fc6d08413bfd4350f94d6f2627eedc7" kindref="member">SetSpin</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="261" refid="class_cognitive_network_1a4b5150310288c52f00ecb745ae9e7f86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a4b5150310288c52f00ecb745ae9e7f86" kindref="member">GetGravitation</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="262" refid="class_cognitive_network_1a761db75ac8eab7b4625e5a398891bd12" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a761db75ac8eab7b4625e5a398891bd12" kindref="member">GetWeak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="263" refid="class_cognitive_network_1aa6342c390fe8e7c648b4c6bc8f93ba4a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1aa6342c390fe8e7c648b4c6bc8f93ba4a" kindref="member">GetWeakElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="264" refid="class_cognitive_network_1a09e5a1c774c84529a7adfe56fadb7467" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a09e5a1c774c84529a7adfe56fadb7467" kindref="member">GetElectromagnetic</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="265" refid="class_cognitive_network_1a8c4e0454068f714691ae250f795cdb67" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a8c4e0454068f714691ae250f795cdb67" kindref="member">GetElectromagneticElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="266" refid="class_cognitive_network_1a277247686f8af159e7a7beb0ec379225" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a277247686f8af159e7a7beb0ec379225" kindref="member">GetStrong</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="267" refid="class_cognitive_network_1a942ca90561fedae46136de620accbfea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a942ca90561fedae46136de620accbfea" kindref="member">GetStrongFundamental</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="268" refid="class_cognitive_network_1acfa5de663b3e686c4d9ea1a3bb483b11" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1acfa5de663b3e686c4d9ea1a3bb483b11" kindref="member">GetStrongResidual</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270" refid="class_cognitive_network_1a7d3252977440a9a5c004f748647ce885" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a7d3252977440a9a5c004f748647ce885" kindref="member">ApplyGravitation</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="271" refid="class_cognitive_network_1a46a15b24bd61049fa1c4f635268086a1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a46a15b24bd61049fa1c4f635268086a1" kindref="member">ApplyWeak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="272" refid="class_cognitive_network_1ab8bc213d2806f0dc49c1284bf934fc24" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ab8bc213d2806f0dc49c1284bf934fc24" kindref="member">ApplyWeakElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="273" refid="class_cognitive_network_1ae590ecb77db0a876425b9b74bcfe2bce" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ae590ecb77db0a876425b9b74bcfe2bce" kindref="member">ApplyElectromagnetic</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="274" refid="class_cognitive_network_1a9753f52c9e36ad44e9fac1d3e38a0770" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a9753f52c9e36ad44e9fac1d3e38a0770" kindref="member">ApplyElectromagneticElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="275" refid="class_cognitive_network_1a7a55750d3c42a277c4ffe04a87ab3b19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a7a55750d3c42a277c4ffe04a87ab3b19" kindref="member">ApplyStrong</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="276" refid="class_cognitive_network_1af25bbd4f4d8f370cd2a48fd6db8302b9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af25bbd4f4d8f370cd2a48fd6db8302b9" kindref="member">ApplyStrongFundamental</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="277" refid="class_cognitive_network_1a8b60fdb81d89a3a74d6c06cb29e7aad3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a8b60fdb81d89a3a74d6c06cb29e7aad3" kindref="member">ApplyStrongResidual</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="279" refid="class_cognitive_network_1af9f082a70f0cc25a3f818d9eace5a527" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1af9f082a70f0cc25a3f818d9eace5a527" kindref="member">SetGravitation</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="280" refid="class_cognitive_network_1ab39c9eed50da6d3630c4498ae64b804e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ab39c9eed50da6d3630c4498ae64b804e" kindref="member">SetWeak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="281" refid="class_cognitive_network_1a116f6818986a622e4a318857859e2495" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a116f6818986a622e4a318857859e2495" kindref="member">SetWeakElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="282" refid="class_cognitive_network_1a31764cd5746369d16b45f2ff74806a0b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a31764cd5746369d16b45f2ff74806a0b" kindref="member">SetElectromagnetic</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="283" refid="class_cognitive_network_1a270f6842ec14b3e5b80dedf7b48ea6f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a270f6842ec14b3e5b80dedf7b48ea6f4" kindref="member">SetElectromagneticElectroweak</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="284" refid="class_cognitive_network_1a50f2a12c9873e623d6247318b041ba30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a50f2a12c9873e623d6247318b041ba30" kindref="member">SetStrong</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="285" refid="class_cognitive_network_1ac54286eea279f5caa98b642b9084fd55" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ac54286eea279f5caa98b642b9084fd55" kindref="member">SetStrongFundamental</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="286" refid="class_cognitive_network_1a6f7210dd8c2786518329faa61b6e14d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1a6f7210dd8c2786518329faa61b6e14d5" kindref="member">SetStrongResidual</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288" refid="class_cognitive_network_1ac97c08a0af7dc0d02fbe059827b6be87" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_cognitive_network_1ac97c08a0af7dc0d02fbe059827b6be87" kindref="member">PollElementaryForce</ref>(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/></highlight><highlight class="keyword">final</highlight><highlight class="normal"><sp/>{}</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>void<sp/>SetPointPosition(std::chrono::time_point&lt;Clock&gt;<sp/>event_time,<sp/>std::vector&lt;double&gt;<sp/>val)<sp/>final<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>std::vector&lt;double&gt;<sp/>GetPointPosition(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>final<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/><sp/><sp/>int<sp/>GetCharge(std::chrono::time_point&lt;Clock&gt;<sp/>event_time)<sp/>final<sp/>{}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="297" refid="class_cognitive_network_1a79f0541fde6dd50f8e87f3f46d849b95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;Dimension*&gt;<sp/><ref refid="class_cognitive_network_1a79f0541fde6dd50f8e87f3f46d849b95" kindref="member">dimension_list</ref>;</highlight></codeline>
<codeline lineno="298" refid="class_cognitive_network_1a5a46cefb188858fdc023df3abbac0a47" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a5a46cefb188858fdc023df3abbac0a47" kindref="member">cognitiveinput_list</ref>;</highlight></codeline>
<codeline lineno="299" refid="class_cognitive_network_1a7a57ad82736c0d8b03e7607b5c603b00" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a7a57ad82736c0d8b03e7607b5c603b00" kindref="member">cognitiveoutput_list</ref>;</highlight></codeline>
<codeline lineno="300" refid="class_cognitive_network_1aaf69f6e0cc0084eb748ef1540c773f85" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1aaf69f6e0cc0084eb748ef1540c773f85" kindref="member">interneuronspace_list</ref>;</highlight></codeline>
<codeline lineno="301" refid="class_cognitive_network_1a263efd10857d5507c0e889e48f7329fe" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a263efd10857d5507c0e889e48f7329fe" kindref="member">orbital_list</ref>;</highlight></codeline>
<codeline lineno="302" refid="class_cognitive_network_1abbb9ff97e1b9cd61602d95f44c30132e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1abbb9ff97e1b9cd61602d95f44c30132e" kindref="member">neuron_list</ref>;</highlight></codeline>
<codeline lineno="303" refid="class_cognitive_network_1a9218de9d63b10b313df289d1312c81e0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a9218de9d63b10b313df289d1312c81e0" kindref="member">synapse_list</ref>;</highlight></codeline>
<codeline lineno="304" refid="class_cognitive_network_1a7018bee3dbf538c3d0c81a64aa002ab8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;CognitiveNetwork*&gt;<sp/><ref refid="class_cognitive_network_1a7018bee3dbf538c3d0c81a64aa002ab8" kindref="member">neurotransmitter_list</ref>;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitivenetwork_type;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_Tag;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_size;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_RestingPotential;</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>object_disabled;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>object_initialised;</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::time_point&lt;Clock&gt;<sp/>time_object_created;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/>std::chrono::time_point&lt;Clock&gt;<sp/>previous_event_time;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>duration_since_last_event;</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_addStatus;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_Counter;<sp/></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_energy;<sp/></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>object_energy_threshold;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_Spike;<sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_GateKeeper;<sp/></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_ChannelMin;<sp/></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_ChannelMax;<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_TimeDilation;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>m_TimeThreshold;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitivenetworkCounter;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitivenetworkCapacity;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitivenetworkUsage;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>How<sp/>many<sp/>of<sp/>each<sp/>components<sp/>allowed<sp/>in<sp/>the<sp/>cognitive<sp/>network</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>interneuronspace_pool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitiveinput_pool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cognitiveoutput_pool<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orbital_pool;</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neuron_pool;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>synapse_pool;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>neurotransmitter_pool;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">OrbitalConnection</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orbital_one;</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>orbital_two;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orbital_connection_strength;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orbital_connection_modifier;</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>orbital_spike;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orbital_one_position;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>orbital_two_position;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>std::vector&lt;OrbitalConnection&gt;<sp/>orbital_connection_list;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="354"><highlight class="normal">};</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BRAINHARMONICS_COGNITIVENETWORK_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="BrainHarmonics/cognitivenetwork.h"/>
  </compounddef>
</doxygen>
