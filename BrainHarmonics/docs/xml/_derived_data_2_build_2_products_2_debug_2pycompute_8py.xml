<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="_derived_data_2_build_2_products_2_debug_2pycompute_8py" kind="file" language="Python">
    <compoundname>pycompute.py</compoundname>
    <innernamespace refid="namespacepycompute">pycompute</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespacepycompute" refkind="compound"><highlight class="keyword">from</highlight><highlight class="normal"><sp/>pybrain.auxiliary<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>kmeans<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pybrain_kmeans</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3" refid="namespacepycompute_1af7498e1653825e1a7a7a7d4a1e2701ac" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepycompute_1af7498e1653825e1a7a7a7d4a1e2701ac" kindref="member">multiply</ref>(a,b):</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">print</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Will<sp/>compute&quot;</highlight><highlight class="normal">,<sp/>a,<sp/></highlight><highlight class="stringliteral">&quot;times&quot;</highlight><highlight class="normal">,<sp/>b</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(0,<sp/>a):</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>c<sp/>+<sp/>b</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10" refid="namespacepycompute_1a9e38483f46fe7cb78b9168755e4a410d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespacepycompute_1a9e38483f46fe7cb78b9168755e4a410d" kindref="member">mlkmeans</ref>(a,b):</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Where<sp/>a<sp/>is<sp/>an<sp/>array<sp/>of<sp/>values<sp/>and<sp/>b<sp/>is<sp/>the<sp/>number<sp/>of<sp/>clusters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>return<sp/>pybrain_kmeans.kmeanspp(a,<sp/>b)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="DerivedData/Build/Products/Debug/pycompute.py"/>
  </compounddef>
</doxygen>
