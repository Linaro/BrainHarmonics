<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_dendrite_cleft" kind="class" language="C++" prot="public">
    <compoundname>DendriteCleft</compoundname>
    <basecompoundref refid="class_dendrite_branch" prot="public" virt="non-virtual">DendriteBranch</basecompoundref>
    <derivedcompoundref refid="class_neuroreceptor" prot="public" virt="non-virtual">Neuroreceptor</derivedcompoundref>
    <includes refid="dendritecleft_8h" local="no">dendritecleft.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt;DendriteCleft*&gt; DendriteCleft::neuroreceptor_list</definition>
        <argsstring></argsstring>
        <name>neuroreceptor_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="76" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="class_dendrite_cleft_1ac84d3e0cafecd1436c34162f687e3851" compoundref="dendritecleft_8cc" startline="79" endline="88">CreateNeuroreceptor</referencedby>
        <referencedby refid="class_dendrite_cleft_1ab34af5363b25c6498aee429725a1c7db" compoundref="dendritecleft_8cc" startline="90" endline="109">CreateNeuroreceptors</referencedby>
        <referencedby refid="class_dendrite_cleft_1a65901c5659ca5eac161a26f15e0f437b" compoundref="dendritecleft_8cc" startline="132" endline="141">AddNeuroreceptor</referencedby>
        <referencedby refid="class_dendrite_cleft_1a6d29f577ff12366f8f51804b13468395" compoundref="dendritecleft_8cc" startline="143" endline="162">AddNeuroreceptors</referencedby>
        <referencedby refid="class_dendrite_cleft_1a5eb3a8f143f63b852b8f5e245d385519" compoundref="dendritecleft_8cc" startline="176" endline="179">GetNeuroreceptor</referencedby>
        <referencedby refid="class_dendrite_cleft_1a4a14361574777fb1d66fd4ed2d4f2492" compoundref="dendritecleft_8cc" startline="181" endline="184">GetNeuroreceptors</referencedby>
        <referencedby refid="class_dendrite_cleft_1a3a75af4d6fd97c9635134509f170a04e" compoundref="dendritecleft_8cc" startline="202" endline="260">Update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_dendrite_cleft_1ab5f89d395d4f77f7d23cd15425f0de6b" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DendriteCleft::dendritecleft_type</definition>
        <argsstring></argsstring>
        <name>dendritecleft_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="79" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aaaf447d15eebe2a304ee03a62cc97c05" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DendriteCleft::m_addStatus</definition>
        <argsstring></argsstring>
        <name>m_addStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="80" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1afd7b84cb30b571db5d42130915a27033" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DendriteCleft::neuroreceptor_pool</definition>
        <argsstring></argsstring>
        <name>neuroreceptor_pool</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="81" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a97d85edbb69960d16398d212107c36fb" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; DendriteCleft::previous_event_time</definition>
        <argsstring></argsstring>
        <name>previous_event_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="82" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a145dcc0e5e2564e22464625930c006c9" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; DendriteCleft::time_object_created</definition>
        <argsstring></argsstring>
        <name>time_object_created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="83" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ac457de5e25a7c7e29db9d50f0874f078" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DendriteCleft::object_disabled</definition>
        <argsstring></argsstring>
        <name>object_disabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="84" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a246dda1826ad0fd93002388993899e10" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool DendriteCleft::object_initialised</definition>
        <argsstring></argsstring>
        <name>object_initialised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="85" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aef90c83b99d8a74e0aa05e845a8e07b6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int DendriteCleft::duration_since_last_event</definition>
        <argsstring></argsstring>
        <name>duration_since_last_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="86" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a93155af6d9d9179eb0608ee0cbf90e8c" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_Volume</definition>
        <argsstring></argsstring>
        <name>m_Volume</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="87" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aabf37b96644ddc07d3195d6c2ebc60e8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_SurfaceArea</definition>
        <argsstring></argsstring>
        <name>m_SurfaceArea</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="88" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a6876a474554771833ea179fbc8d8cd62" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_Length</definition>
        <argsstring></argsstring>
        <name>m_Length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="89" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ac78e2502c53c1b3d0c2a759f3b653dde" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_size</definition>
        <argsstring></argsstring>
        <name>object_size</name>
        <briefdescription>
<para>Member variable &quot;object_size&quot; Area of cleft (assumed to be circular due to pressure equalisation) </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="90" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ae24f44df5148f9bcf95ba4a2a1916491" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_dendriteLength</definition>
        <argsstring></argsstring>
        <name>m_dendriteLength</name>
        <briefdescription>
<para>Member variable &quot;m_dendriteLength&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="91" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ad206cd42f8bf36b989e3993d02214e12" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_dendriteDiameterStart</definition>
        <argsstring></argsstring>
        <name>m_dendriteDiameterStart</name>
        <briefdescription>
<para>Member variable &quot;m_dendriteDiameterStart&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="92" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aa905ee6ba625bfa340282b03b916ecdf" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_dendriteDiameterEnd</definition>
        <argsstring></argsstring>
        <name>m_dendriteDiameterEnd</name>
        <briefdescription>
<para>Member variable &quot;m_dendriteDiameterEnd&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="93" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aed8f88f66a419600c41da62d8814dc59" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_membraneResistance</definition>
        <argsstring></argsstring>
        <name>m_membraneResistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="94" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ab5a89436993650294a6abab92852f488" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_membraneCapacitance</definition>
        <argsstring></argsstring>
        <name>m_membraneCapacitance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="95" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ad947e5dda845fb5ac25cfb3709a4e860" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_internalResistance</definition>
        <argsstring></argsstring>
        <name>m_internalResistance</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="96" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="96" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a9244fcddd66073866759b5bedca083db" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int DendriteCleft::m_Counter</definition>
        <argsstring></argsstring>
        <name>m_Counter</name>
        <briefdescription>
<para>Member variable &quot;m_Counter&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="97" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a22c6048147877a2c59c9264b295e7179" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_energy</definition>
        <argsstring></argsstring>
        <name>object_energy</name>
        <briefdescription>
<para>Member variable &quot;object_energy&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="98" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a81149b707c189d2b96a40af75af1f059" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_energyInc</definition>
        <argsstring></argsstring>
        <name>object_energyInc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="99" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1aba50e581f1aec412b7b44ecd0dfc8076" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_energyDec</definition>
        <argsstring></argsstring>
        <name>object_energyDec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="100" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a541502a9ffbc2926e76d2eb4a972ae39" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_energyLeak</definition>
        <argsstring></argsstring>
        <name>object_energyLeak</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="101" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1ac73d775c34a5c3f186b395c8e7738cd8" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::object_energy_threshold</definition>
        <argsstring></argsstring>
        <name>object_energy_threshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="102" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a8236dc02dccfe1f59bb0d288599a84b5" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_TimeDilation</definition>
        <argsstring></argsstring>
        <name>m_TimeDilation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="103" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_dendrite_cleft_1a504e4aef51d3e52dbad3589844a821de" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double DendriteCleft::m_TimeThreshold</definition>
        <argsstring></argsstring>
        <name>m_TimeThreshold</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="104" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_dendrite_cleft_1a244a2e6377fafdf79df757d39a2684e5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DendriteCleft::DendriteCleft</definition>
        <argsstring>()</argsstring>
        <name>DendriteCleft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="17" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="17" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a335660dfc63f55980b2dcf8849568086" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DendriteCleft::DendriteCleft</definition>
        <argsstring>(unsigned int object_type)</argsstring>
        <name>DendriteCleft</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="19" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ad4070ce743d8302bc120ea948890ea37" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DendriteCleft::DendriteCleft</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>DendriteCleft</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="21" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="21" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1abcb81284cd9bd7ee2863eecfb6b59f62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>DendriteCleft::DendriteCleft</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time, DendriteBranch &amp;dendritebranch_connector)</argsstring>
        <name>DendriteCleft</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_dendrite_branch" kindref="compound">DendriteBranch</ref> &amp;</type>
          <declname>dendritebranch_connector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="23" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="23" bodyend="34"/>
        <references refid="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" compoundref="dendritecleft_8cc" startline="20" endline="66">ResetParameters</references>
        <references refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" compoundref="universe_8cc" startline="57" endline="61">Universe::Creation</references>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ad99958c45fa63f2f68b65d7e5ba45b32" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual DendriteCleft::~DendriteCleft</definition>
        <argsstring>()</argsstring>
        <name>~DendriteCleft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="36" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="36" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ac567530d9f083e1ee65d5c6484cc9fa7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int DendriteCleft::GetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetCounter</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="38" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="38" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ad673df32db3982b3df745a55bf527834" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double DendriteCleft::GetEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="39" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="39" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a428b8e5117f381a382e0071b936d42a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void DendriteCleft::SetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, unsigned int val)</argsstring>
        <name>SetCounter</name>
        <reimplements refid="class_dendrite_branch_1a2ce03fbad4a70564eeaafb62debd4d74">SetCounter</reimplements>
        <reimplementedby refid="class_neuroreceptor_1a0660a316ef44cf723509f720acd16f24">SetCounter</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="40" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="40" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void DendriteCleft::SetEnergy</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val)</argsstring>
        <name>SetEnergy</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="41" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="41" bodyend="41"/>
        <references refid="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" compoundref="dendritecleft_8cc" startline="20" endline="66">ResetParameters</references>
        <references refid="class_dendrite_cleft_1ac84d3e0cafecd1436c34162f687e3851" compoundref="dendritecleft_8cc" startline="79" endline="88">CreateNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1ab34af5363b25c6498aee429725a1c7db" compoundref="dendritecleft_8cc" startline="90" endline="109">CreateNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1a7650e1115baab30729da0b03a48da851" compoundref="dendritecleft_8cc" startline="117" endline="120">CloneNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1a93b542418482f3732380e33346e23bd2" compoundref="dendritecleft_8cc" startline="112" endline="115">CloneNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1a86e9943d9d140c2a06d7e222812c9548" compoundref="dendritecleft_8cc" startline="127" endline="130">DestroyNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1a630e00e2d1108f2a43bcac9466e4681b" compoundref="dendritecleft_8cc" startline="122" endline="125">DestroyNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1a65901c5659ca5eac161a26f15e0f437b" compoundref="dendritecleft_8cc" startline="132" endline="141">AddNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1a6d29f577ff12366f8f51804b13468395" compoundref="dendritecleft_8cc" startline="143" endline="162">AddNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1afaf06d4516355dfe2e0e4c33a00f0f1d" compoundref="dendritecleft_8cc" startline="165" endline="169">RemoveNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1ac29b12d4abcc47fa298ab9e95f578f0e" compoundref="dendritecleft_8cc" startline="171" endline="174">RemoveNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1a5eb3a8f143f63b852b8f5e245d385519" compoundref="dendritecleft_8cc" startline="176" endline="179">GetNeuroreceptor</references>
        <references refid="class_dendrite_cleft_1a4a14361574777fb1d66fd4ed2d4f2492" compoundref="dendritecleft_8cc" startline="181" endline="184">GetNeuroreceptors</references>
        <references refid="class_dendrite_cleft_1af4715ffbf1bf437523d07e37b7abc3e0" compoundref="dendritecleft_8cc" startline="187" endline="192">GrowthSurface</references>
        <references refid="class_dendrite_cleft_1a0cb2fc6ad72bba55b5f65130006d4b12" compoundref="dendritecleft_8cc" startline="194" endline="200">GrowthVolume</references>
        <references refid="class_dendrite_cleft_1a3a75af4d6fd97c9635134509f170a04e" compoundref="dendritecleft_8cc" startline="202" endline="260">Update</references>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool DendriteCleft::ResetParameters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>ResetParameters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="43" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="20" bodyend="66"/>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">Universe::TheTimeNow</references>
        <referencedby refid="class_dendrite_cleft_1a3a75af4d6fd97c9635134509f170a04e" compoundref="dendritecleft_8cc" startline="202" endline="260">Update</referencedby>
        <referencedby refid="class_dendrite_cleft_1abcb81284cd9bd7ee2863eecfb6b59f62" compoundref="dendritecleft_8h" startline="23" endline="34">DendriteCleft</referencedby>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ac84d3e0cafecd1436c34162f687e3851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::CreateNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>CreateNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="45" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="79" bodyend="88"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <referencedby refid="class_dendrite_cleft_1ab34af5363b25c6498aee429725a1c7db" compoundref="dendritecleft_8cc" startline="90" endline="109">CreateNeuroreceptors</referencedby>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ab34af5363b25c6498aee429725a1c7db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::CreateNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>CreateNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="47" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="90" bodyend="109"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <references refid="class_dendrite_cleft_1ac84d3e0cafecd1436c34162f687e3851" compoundref="dendritecleft_8cc" startline="79" endline="88">CreateNeuroreceptor</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a7650e1115baab30729da0b03a48da851" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::CloneNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, DendriteCleft *clone_object, double perfection_membership)</argsstring>
        <name>CloneNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
          <declname>clone_object</declname>
        </param>
        <param>
          <type>double</type>
          <declname>perfection_membership</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="49" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="117" bodyend="120"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a93b542418482f3732380e33346e23bd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::CloneNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::vector&lt; DendriteCleft *&gt; cloning_list, double perfection_membership)</argsstring>
        <name>CloneNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *&gt;</type>
          <declname>cloning_list</declname>
        </param>
        <param>
          <type>double</type>
          <declname>perfection_membership</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="51" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="112" bodyend="115"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a86e9943d9d140c2a06d7e222812c9548" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::DestroyNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, DendriteCleft *destroy_object)</argsstring>
        <name>DestroyNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
          <declname>destroy_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="53" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="127" bodyend="130"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a630e00e2d1108f2a43bcac9466e4681b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::DestroyNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::vector&lt; DendriteCleft *&gt; destruction_list)</argsstring>
        <name>DestroyNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *&gt;</type>
          <declname>destruction_list</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="55" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="122" bodyend="125"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a65901c5659ca5eac161a26f15e0f437b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::AddNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, DendriteCleft *add_object)</argsstring>
        <name>AddNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
          <declname>add_object</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="57" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="132" bodyend="141"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <referencedby refid="class_dendrite_cleft_1a6d29f577ff12366f8f51804b13468395" compoundref="dendritecleft_8cc" startline="143" endline="162">AddNeuroreceptors</referencedby>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a6d29f577ff12366f8f51804b13468395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::AddNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, std::vector&lt; DendriteCleft *&gt; add_objects)</argsstring>
        <name>AddNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *&gt;</type>
          <declname>add_objects</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="59" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="143" bodyend="162"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <references refid="class_dendrite_cleft_1a65901c5659ca5eac161a26f15e0f437b" compoundref="dendritecleft_8cc" startline="132" endline="141">AddNeuroreceptor</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1afaf06d4516355dfe2e0e4c33a00f0f1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::RemoveNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>RemoveNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="61" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="165" bodyend="169"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1ac29b12d4abcc47fa298ab9e95f578f0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::RemoveNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int quantity)</argsstring>
        <name>RemoveNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quantity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="63" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="171" bodyend="174"/>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a5eb3a8f143f63b852b8f5e245d385519" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> *</type>
        <definition>DendriteCleft * DendriteCleft::GetNeuroreceptor</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int selector)</argsstring>
        <name>GetNeuroreceptor</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>selector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="65" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="176" bodyend="179"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a4a14361574777fb1d66fd4ed2d4f2492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; <ref refid="class_dendrite_cleft" kindref="compound">DendriteCleft</ref> * &gt;</type>
        <definition>std::vector&lt; DendriteCleft * &gt; DendriteCleft::GetNeuroreceptors</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetNeuroreceptors</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="67" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="181" bodyend="184"/>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1af4715ffbf1bf437523d07e37b7abc3e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DendriteCleft::GrowthSurface</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double surf_change)</argsstring>
        <name>GrowthSurface</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>surf_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="69" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="187" bodyend="192"/>
        <referencedby refid="class_dendrite_cleft_1a0cb2fc6ad72bba55b5f65130006d4b12" compoundref="dendritecleft_8cc" startline="194" endline="200">GrowthVolume</referencedby>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a0cb2fc6ad72bba55b5f65130006d4b12" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DendriteCleft::GrowthVolume</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double vol_change)</argsstring>
        <name>GrowthVolume</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>vol_change</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="71" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="194" bodyend="200"/>
        <references refid="class_dendrite_cleft_1af4715ffbf1bf437523d07e37b7abc3e0" compoundref="dendritecleft_8cc" startline="187" endline="192">GrowthSurface</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_dendrite_cleft_1a3a75af4d6fd97c9635134509f170a04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DendriteCleft::Update</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Update</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/dendritecleft.h" line="73" column="1" bodyfile="BrainHarmonics/dendritecleft.cc" bodystart="202" bodyend="260"/>
        <references refid="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" compoundref="dendritecleft_8cc" startline="20" endline="66">ResetParameters</references>
        <references refid="class_neuron_1a00b1e2e5f9d224759df1aa54093092ba" compoundref="neuron_8h" startline="135">Neuron::visualisation_list</references>
        <references refid="class_solid_1a231b2c469aab60b092fcc3a9525e5c80" compoundref="solid_8cc" startline="109" endline="118">Solid::CreatePolyhedron</references>
        <references refid="class_solid_1af6fe46af0be9a9533e114b1c0f186bfc" compoundref="solid_8cc" startline="100" endline="107">Solid::SetObjectType</references>
        <references refid="universe_8h_1a76028f4d66e31c7b51113514a7713edc" compoundref="universe_8h" startline="57">TYPE_SOLID_POLYHEDRON_SOMA_DENDRITE_DENDRITEBRANCH_DENDRITECLEFT_GEN1</references>
        <references refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" compoundref="dendritecleft_8h" startline="76">neuroreceptor_list</references>
        <referencedby refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" compoundref="dendritecleft_8h" startline="41" endline="41">SetEnergy</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="147">
        <label>Universe</label>
        <link refid="class_universe"/>
      </node>
      <node id="145">
        <label>Neuron</label>
        <link refid="class_neuron"/>
        <childnode refid="146" relation="public-inheritance">
        </childnode>
      </node>
      <node id="146">
        <label>CognitiveNetwork</label>
        <link refid="class_cognitive_network"/>
        <childnode refid="147" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>DendriteCleft</label>
        <link refid="class_dendrite_cleft"/>
        <childnode refid="142" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>DendriteBranch</label>
        <link refid="class_dendrite_branch"/>
        <childnode refid="143" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>Dendrite</label>
        <link refid="class_dendrite"/>
        <childnode refid="144" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>Soma</label>
        <link refid="class_soma"/>
        <childnode refid="145" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>Neuroreceptor</label>
        <link refid="class_neuroreceptor"/>
        <childnode refid="141" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="155">
        <label>Universe</label>
        <link refid="class_universe"/>
        <childnode refid="155" relation="usage">
          <edgelabel>time_dimension_pointer</edgelabel>
        </childnode>
      </node>
      <node id="153">
        <label>Neuron</label>
        <link refid="class_neuron"/>
        <childnode refid="154" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>CognitiveNetwork</label>
        <link refid="class_cognitive_network"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>DendriteCleft</label>
        <link refid="class_dendrite_cleft"/>
        <childnode refid="150" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>DendriteBranch</label>
        <link refid="class_dendrite_branch"/>
        <childnode refid="151" relation="public-inheritance">
        </childnode>
      </node>
      <node id="151">
        <label>Dendrite</label>
        <link refid="class_dendrite"/>
        <childnode refid="152" relation="public-inheritance">
        </childnode>
      </node>
      <node id="152">
        <label>Soma</label>
        <link refid="class_soma"/>
        <childnode refid="153" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BrainHarmonics/dendritecleft.h" line="15" column="1" bodyfile="BrainHarmonics/dendritecleft.h" bodystart="14" bodyend="114"/>
    <listofallmembers>
      <member refid="class_soma_1a02e0e4656099531b35ab56ad1f7c945a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddAxonHillock</name></member>
      <member refid="class_soma_1a0fbede6e06b8e24a2cf22878c2f49165" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddAxonHillocks</name></member>
      <member refid="class_cognitive_network_1a6af57693982286ac6a6831ca3010b760" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveInput</name></member>
      <member refid="class_cognitive_network_1afc92c9b378e7e0873d0164bc4f2635df" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveInputs</name></member>
      <member refid="class_universe_1ab682307c963836cd81b35b5604bd7064" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveNetwork</name></member>
      <member refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveNetworks</name></member>
      <member refid="class_cognitive_network_1a8a9b533b89b7d62b21cf41bdf957ef14" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1a6299433811b76f0ccb97cf69fe9bfb66" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCognitiveOutputs</name></member>
      <member refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCompositeForceParticle</name></member>
      <member refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddCompositeForceParticles</name></member>
      <member refid="class_soma_1acc198b8ec11c3f2e43d3ba9a16ce84db" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendrite</name></member>
      <member refid="class_dendrite_1aab6cedff35cb8c65923b14c8034cccc0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendriteBranch</name></member>
      <member refid="class_dendrite_1a3e6a80da180b60290545cfc92f221a05" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1a060f0c55b2e6cb65b68e160df0bbf563" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a2ddeff41db805e414c994ac169cbcf4b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendriteClefts</name></member>
      <member refid="class_soma_1a9874f03b33413b06ca74a3143cc35331" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDendrites</name></member>
      <member refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDimension</name></member>
      <member refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddDimensions</name></member>
      <member refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddElementaryForce</name></member>
      <member refid="class_universe_1a81d294300346e9f901836ab609cce942" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddElementaryForces</name></member>
      <member refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddElementaryParticle</name></member>
      <member refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddElementaryParticles</name></member>
      <member refid="class_cognitive_network_1ac6a7e01f097d0cb6434eb8fa7640c214" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1aeafe16b9f44ae1316c072a85e726ee83" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddInterneuronSpaces</name></member>
      <member refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMatter</name></member>
      <member refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMatters</name></member>
      <member refid="class_neuron_1a99d4b64f128e2bfbffec3c5d476a2ca3" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMembrane</name></member>
      <member refid="class_neuron_1a9e1f79bf8e991893f4ef318841932a13" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMembranes</name></member>
      <member refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMonomer</name></member>
      <member refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddMonomers</name></member>
      <member refid="class_cognitive_network_1a8457342637fde2d814c54942c3367416" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeuron</name></member>
      <member refid="class_cognitive_network_1ade928e3355db97d3c5d99501ff4a3b69" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeurons</name></member>
      <member refid="class_dendrite_cleft_1a65901c5659ca5eac161a26f15e0f437b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1a6d29f577ff12366f8f51804b13468395" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1ab80ffdc75ad4754463c356d36fb81ab4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1a085f61ab94b71406a0a5e11d789ed69c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1ab6caa285c25568259ae935cf9e746af4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddOrbital</name></member>
      <member refid="class_cognitive_network_1a9dbf4a9fab3b806d2bd6b2701b7a9548" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddOrbitals</name></member>
      <member refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddPoint</name></member>
      <member refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddPoints</name></member>
      <member refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddPolymer</name></member>
      <member refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddPolymers</name></member>
      <member refid="class_universe_1a598799e2fcdf9ed60e83e9f5a61bfc05" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSolid</name></member>
      <member refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSolids</name></member>
      <member refid="class_neuron_1a6198fa352056e3bbe1e979adf088b900" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSoma</name></member>
      <member refid="class_neuron_1a78a0f48a669b6ea20280829304e51de2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSomas</name></member>
      <member refid="class_cognitive_network_1a4bfdcd2affdfe2adb2da68dba60dff0e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSynapse</name></member>
      <member refid="class_cognitive_network_1a09d9e01cbd8596af7fac626ce2753643" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>AddSynapses</name></member>
      <member refid="class_universe_1a901e16db5e8af258c66af7ac75662fe0" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>AddTemporalAdjustment</name></member>
      <member refid="class_universe_1a15aa20218286fd11ecb9b792dfb63be3" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>AdjustCounters</name></member>
      <member refid="class_cognitive_network_1ae590ecb77db0a876425b9b74bcfe2bce" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyElectromagnetic</name></member>
      <member refid="class_cognitive_network_1a9753f52c9e36ad44e9fac1d3e38a0770" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyElectromagneticElectroweak</name></member>
      <member refid="class_cognitive_network_1a7d3252977440a9a5c004f748647ce885" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyGravitation</name></member>
      <member refid="class_cognitive_network_1a7a55750d3c42a277c4ffe04a87ab3b19" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyStrong</name></member>
      <member refid="class_cognitive_network_1af25bbd4f4d8f370cd2a48fd6db8302b9" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyStrongFundamental</name></member>
      <member refid="class_cognitive_network_1a8b60fdb81d89a3a74d6c06cb29e7aad3" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyStrongResidual</name></member>
      <member refid="class_cognitive_network_1a46a15b24bd61049fa1c4f635268086a1" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyWeak</name></member>
      <member refid="class_cognitive_network_1ab8bc213d2806f0dc49c1284bf934fc24" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>ApplyWeakElectroweak</name></member>
      <member refid="class_soma_1af93902336cddb974b282aef8b7b4243c" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>axonhillock_list</name></member>
      <member refid="class_soma_1a31463fba2f535e9c7cb05c8622fe3562" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneAxonHillock</name></member>
      <member refid="class_soma_1a299c95b89f50576244d1e56f531a80be" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneAxonHillocks</name></member>
      <member refid="class_cognitive_network_1a058cb2b044d56268e36f153fac21084e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneCognitiveInput</name></member>
      <member refid="class_cognitive_network_1aeaf2883b25dbf1eefd11c2d92efe8816" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneCognitiveInputs</name></member>
      <member refid="class_cognitive_network_1ab24f74115c11275f365245a4bb826c91" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1a5734aa5378e9b701dca5e98017c1ea35" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneCognitiveOutputs</name></member>
      <member refid="class_soma_1ad51c97b76dd7a1f77dc987ae33fd89bc" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendrite</name></member>
      <member refid="class_dendrite_1ab682ffb9bfd1a1da1623e6b641471068" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendriteBranch</name></member>
      <member refid="class_dendrite_1abd67c09df69c520e6720bca2592bcc99" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1a45d2fea350165fe0c81f1f429aa96061" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a3cf1e07fe5e0ea827965c0dc76881c9f" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendriteClefts</name></member>
      <member refid="class_soma_1a3975212d2e3d8675ca14fbc9879e5e54" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneDendrites</name></member>
      <member refid="class_cognitive_network_1a1eef76439fffb9daaa3edc4e3c012831" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1a5ee1d7b6df5bfe0048b4aea317c1974c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneInterneuronSpaces</name></member>
      <member refid="class_neuron_1ab85f7c42466657095efb3aca5a9ee71d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneMembrane</name></member>
      <member refid="class_neuron_1ae119d77522a4f11f5d9b1e935a9c80ba" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneMembranes</name></member>
      <member refid="class_cognitive_network_1abf42d64965d64836d6fcbd7ce33c8db4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeuron</name></member>
      <member refid="class_cognitive_network_1a8852409e92434523ddbd48d699c5609f" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeurons</name></member>
      <member refid="class_dendrite_cleft_1a7650e1115baab30729da0b03a48da851" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1a93b542418482f3732380e33346e23bd2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1af78d31471a121844e4735d809c900502" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1a2b2d40d179f95ff96e9aa0559234cc31" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1aa8992740f25d46b0be3d9d8344c39f67" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneOrbital</name></member>
      <member refid="class_cognitive_network_1a266b7baf2fd9d6b5c5652e251830020a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneOrbitals</name></member>
      <member refid="class_neuron_1a7706e0f722c70138458423c07b6b153b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneSoma</name></member>
      <member refid="class_neuron_1a508841fa635a6e89609c514a79ea59da" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneSomas</name></member>
      <member refid="class_cognitive_network_1a40f88d3ce9d386ee4db5c1e0ad84dad2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneSynapse</name></member>
      <member refid="class_cognitive_network_1a82fe792704bcbf7df56b3023266f5f70" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CloneSynapses</name></member>
      <member refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>cognitive_network_list</name></member>
      <member refid="class_cognitive_network_1a5a46cefb188858fdc023df3abbac0a47" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>cognitiveinput_list</name></member>
      <member refid="class_cognitive_network_1a3daddb316744336648d317e7f71ed371" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CognitiveNetwork</name></member>
      <member refid="class_cognitive_network_1a167b15e33bcbca43cb0a516159e890f2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CognitiveNetwork</name></member>
      <member refid="class_cognitive_network_1ac7ba285d3468a929dac88756a2c4e4f9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CognitiveNetwork</name></member>
      <member refid="class_cognitive_network_1a6ec49dcc8cc58cded71983291629179c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CognitiveNetwork</name></member>
      <member refid="class_cognitive_network_1a7a57ad82736c0d8b03e7607b5c603b00" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>cognitiveoutput_list</name></member>
      <member refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>composite_forceparticle_list</name></member>
      <member refid="class_soma_1a42289635de3cb326bceeb5358b99c190" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateAxonHillock</name></member>
      <member refid="class_soma_1ab059a6d4a7dc41664d6d17794d09b260" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateAxonHillocks</name></member>
      <member refid="class_cognitive_network_1add96197c3dc51d94d06edb480fbc4a38" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateCognitiveInput</name></member>
      <member refid="class_cognitive_network_1a0833f7b587f14e0c0778661a56bce957" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateCognitiveInputs</name></member>
      <member refid="class_cognitive_network_1ac220350499bd323bd8f24ff0050cd60d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1a002df11f4389a122fc140c186ab665c9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateCognitiveOutputs</name></member>
      <member refid="class_soma_1a0fab0c7cf54c2b7d36e90edcd3e21a16" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendrite</name></member>
      <member refid="class_dendrite_1ac7b30397a4753f9c37e96ed716e275eb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendriteBranch</name></member>
      <member refid="class_dendrite_1a812b9cd99ae7d81023bfa25c8f563e96" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1a4f751442a537f2e3d7d0dc66a09bd84b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a86d00d6ad66c8c83683e9e22d73a71b6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendriteClefts</name></member>
      <member refid="class_soma_1a68dc02eff2912ad045900ab1879f020e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateDendrites</name></member>
      <member refid="class_cognitive_network_1af0dc86c7905baae6f2b5efb3a65b8819" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1a2d671451d659079d5efb5cda10e48827" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateInterneuronSpaces</name></member>
      <member refid="class_neuron_1af06efbcc1a96af0290673e9e048267cf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateMembrane</name></member>
      <member refid="class_neuron_1a5f6f460c6a98319a05c3ba06d14e6f60" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateMembranes</name></member>
      <member refid="class_cognitive_network_1a9b5fcaf824d5b587775e7c44630affe6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeuron</name></member>
      <member refid="class_cognitive_network_1af9b2a136584c962e44114a7ee3d2804a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeurons</name></member>
      <member refid="class_dendrite_cleft_1ac84d3e0cafecd1436c34162f687e3851" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1ab34af5363b25c6498aee429725a1c7db" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1a53d1047ae3ec721540b64b05abe01559" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1ad877c495c9efdb582613a5af8d854ac3" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1a5e0a782afc45d75d57fef91dd5513546" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateOrbital</name></member>
      <member refid="class_cognitive_network_1a46d4189cf3e6b9af6190abe7b79539b4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateOrbitals</name></member>
      <member refid="class_neuron_1a32593a869b25c778c1856c36704f49cf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateSoma</name></member>
      <member refid="class_neuron_1a2016d83b02bfe9e5548d5c24ef31dded" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateSomas</name></member>
      <member refid="class_cognitive_network_1ade8e9295b35790b136dca9084a1b7aa9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateSynapse</name></member>
      <member refid="class_cognitive_network_1ae6ae16f401e7699032ac9459132763c0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>CreateSynapses</name></member>
      <member refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Creation</name></member>
      <member refid="class_dendrite_1a0a35047fcf3dad2f81be348499e32337" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Dendrite</name></member>
      <member refid="class_dendrite_1ae702e9fd351be8dc3a09afa0ed431c3b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Dendrite</name></member>
      <member refid="class_dendrite_1a10313257362c8f62c8b01a9992ec9ff7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Dendrite</name></member>
      <member refid="class_dendrite_1ac358d84fb75919386aced214fa0e1107" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Dendrite</name></member>
      <member refid="class_soma_1ab2d13b0adf2d10c242df0b8e62bcc01a" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>dendrite_list</name></member>
      <member refid="class_dendrite_branch_1af391f5fd2379539523b3d2523c59ea8b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteBranch</name></member>
      <member refid="class_dendrite_branch_1a391ba1440a6c29a0752b03eb60357370" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteBranch</name></member>
      <member refid="class_dendrite_branch_1a390bfee680074f5f3ddcd9aee54db679" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteBranch</name></member>
      <member refid="class_dendrite_branch_1a9b7e932b0614dad370edd76f31900c40" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteBranch</name></member>
      <member refid="class_dendrite_1a1d57708bfa57443d3fa0358984b4c761" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>dendritebranch_list</name></member>
      <member refid="class_dendrite_cleft_1a244a2e6377fafdf79df757d39a2684e5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteCleft</name></member>
      <member refid="class_dendrite_cleft_1a335660dfc63f55980b2dcf8849568086" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteCleft</name></member>
      <member refid="class_dendrite_cleft_1ad4070ce743d8302bc120ea948890ea37" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteCleft</name></member>
      <member refid="class_dendrite_cleft_1abcb81284cd9bd7ee2863eecfb6b59f62" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a8015119958f7581d826dcac2c21919c9" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>dendritecleft_list</name></member>
      <member refid="class_dendrite_cleft_1ab5f89d395d4f77f7d23cd15425f0de6b" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>dendritecleft_type</name></member>
      <member refid="class_soma_1af6d6d3e3c94f06682cf05a7a72032a46" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyAxonHillock</name></member>
      <member refid="class_soma_1a5220929442601962af1a1fad66a8c919" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyAxonHillocks</name></member>
      <member refid="class_cognitive_network_1a12e085cd47b7661190527fe55b6da8dc" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyCognitiveInput</name></member>
      <member refid="class_cognitive_network_1a00aa44de67dd0593a2498ce7a3b4c0f2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyCognitiveInputs</name></member>
      <member refid="class_cognitive_network_1a8475cf7277d25532bb31926e768600e8" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1ad08191cbab02f26f69d25bc7e6b5c1ee" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyCognitiveOutputs</name></member>
      <member refid="class_soma_1a086cb5a05e82f6f58ac0bd8403e25e07" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendrite</name></member>
      <member refid="class_dendrite_1a87887a43ac38e762255da18eaaee43f5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendriteBranch</name></member>
      <member refid="class_dendrite_1a92c08afc374068922e462c9b65cf9157" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1a60225ab106eae6bce25eb8159166d5e9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a454dd0483439353076df63fc124a24f7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendriteClefts</name></member>
      <member refid="class_soma_1ac549a7caf885fdc0ac3a6adf393430af" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyDendrites</name></member>
      <member refid="class_cognitive_network_1acdda154177d3b3a92885c10f6b3dc274" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1a718833496332e0471186c9a886005c4a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyInterneuronSpaces</name></member>
      <member refid="class_neuron_1a127d1b915e976c63e731a94b7d27e0b1" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyMembrane</name></member>
      <member refid="class_neuron_1ab77feff95ed7127400a4e02648641ff7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyMembranes</name></member>
      <member refid="class_cognitive_network_1ab3318f517da206ad4286b6cc22acf520" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeuron</name></member>
      <member refid="class_cognitive_network_1af2f706043a0c227b93877e29b056f3c9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeurons</name></member>
      <member refid="class_dendrite_cleft_1a86e9943d9d140c2a06d7e222812c9548" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1a630e00e2d1108f2a43bcac9466e4681b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1a0f943978df49ef879c43c15c81682a8a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1a7f705e562562e9778ee0b5260dda9f09" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1aefecb3a2464f7f21449e522af5119c63" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyOrbital</name></member>
      <member refid="class_cognitive_network_1a0ee8259d26e30779bf06471fb8a10bb5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroyOrbitals</name></member>
      <member refid="class_neuron_1a6ff7510f73e29c31003b016bdcb4a70e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroySoma</name></member>
      <member refid="class_neuron_1a32b3a98eec58dc66481a2b877a7592cb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroySomas</name></member>
      <member refid="class_cognitive_network_1a08b87aa9a0823355ef7cef77414dc6dc" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroySynapse</name></member>
      <member refid="class_cognitive_network_1a141e9e8e6337d42fc19edd75bb50e47b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>DestroySynapses</name></member>
      <member refid="class_cognitive_network_1a79f0541fde6dd50f8e87f3f46d849b95" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>dimension_list</name></member>
      <member refid="class_dendrite_cleft_1aef90c83b99d8a74e0aa05e845a8e07b6" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>duration_since_last_event</name></member>
      <member refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>elementary_force_list</name></member>
      <member refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>elementary_particle_list</name></member>
      <member refid="class_universe_1a982502e46868a00a9111738ccc9355c2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>ExtendLife</name></member>
      <member refid="class_soma_1ac8756f68dbaac8c70cfba435f7068a85" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetAxonHillock</name></member>
      <member refid="class_soma_1a23dc309849522d9f857fdcc71ea85877" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetAxonHillockPool</name></member>
      <member refid="class_soma_1af76f86d082c3f60442148ec843b586e7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetAxonHillocks</name></member>
      <member refid="class_neuron_1a93cce70c19c8e70accaa31908d3f29f6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCapacity</name></member>
      <member refid="class_neuron_1ae8b6c47bebe302e62721dc4a6e447ca2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetChannelMax</name></member>
      <member refid="class_neuron_1a794c8fa270ea0600dab4fd13c25912fd" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetChannelMin</name></member>
      <member refid="class_cognitive_network_1a2ff68a0d11cdb29af2f05a69a11911a4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveInput</name></member>
      <member refid="class_cognitive_network_1a92b896643b881e4030401e0f7fd256bf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveInputs</name></member>
      <member refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveNetwork</name></member>
      <member refid="class_cognitive_network_1af33f3ff9dd829da73d183d2624f24964" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveNetworkDeviceTag</name></member>
      <member refid="class_universe_1a06968a24194280a43f077c5b77379ea8" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveNetworks</name></member>
      <member refid="class_cognitive_network_1a947fa4c50fecc4008d2bcfc96a272ffc" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1acdf847165899c36d6d9d6843ecc27218" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCognitiveOutputs</name></member>
      <member refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCompositeForceParticle</name></member>
      <member refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCompositeForceParticles</name></member>
      <member refid="class_dendrite_cleft_1ac567530d9f083e1ee65d5c6484cc9fa7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetCounter</name></member>
      <member refid="class_soma_1ab86537170d550cda0e7da080f7640f84" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendrite</name></member>
      <member refid="class_dendrite_1a1465037ca014fa8bbefc8c0ad70d1647" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteBranch</name></member>
      <member refid="class_dendrite_1a00b524d47e3662df712ea060ebadca77" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1a11f25ffce77011afad909acb593d2e42" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1a2be44a81b4b5213947e9545400a0453c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteClefts</name></member>
      <member refid="class_dendrite_1a2c46d2612d09964a473e1de99c17fa13" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteDiameterEnd</name></member>
      <member refid="class_dendrite_1aa103a34ce3d3525b350cb02c0a7855ea" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteDiameterStart</name></member>
      <member refid="class_dendrite_1a64ebf49c488bb0225e1e5c8a8d9935d9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendriteLength</name></member>
      <member refid="class_soma_1a000d9eca00c61af853fd81a2c1569b0e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendritePool</name></member>
      <member refid="class_soma_1afdb0e40855f31f2d9a48f3b13c01b599" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDendrites</name></member>
      <member refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDimension</name></member>
      <member refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDimensions</name></member>
      <member refid="class_neuron_1adfee1a62df820344b84fe2020451b24f" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetDisabled</name></member>
      <member refid="class_cognitive_network_1a09e5a1c774c84529a7adfe56fadb7467" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetElectromagnetic</name></member>
      <member refid="class_cognitive_network_1a8c4e0454068f714691ae250f795cdb67" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a9506017d944cb64e67567477c1505a53" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetElementaryForce</name></member>
      <member refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetElementaryForces</name></member>
      <member refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetElementaryParticle</name></member>
      <member refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetElementaryParticles</name></member>
      <member refid="class_dendrite_cleft_1ad673df32db3982b3df745a55bf527834" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetEnergy</name></member>
      <member refid="class_soma_1afbdc1f4e4f54adefea9a16fdca50aab5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetEnergyDec</name></member>
      <member refid="class_soma_1a5d698a7ad270ad4ea63a3de5f25fa760" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetEnergyInc</name></member>
      <member refid="class_soma_1a0be69cd912f978f3ab3d94bebb9fbbaf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetEnergyLeak</name></member>
      <member refid="class_soma_1a0b45cc454565027bb25daa1396056a7e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetEnergyThreshold</name></member>
      <member refid="class_neuron_1a94accac3223afdecd1edf25e6db59ace" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetGateKeeper</name></member>
      <member refid="class_cognitive_network_1a4b5150310288c52f00ecb745ae9e7f86" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetGravitation</name></member>
      <member refid="class_dendrite_1a7dd00ac5440edf9943389951a275b9bc" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetInternalResistance</name></member>
      <member refid="class_cognitive_network_1a0119d61e86ea6b84ad7f69f88d59d008" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1a4daf966882d527b784bd359794ad39ca" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetInterneuronSpaces</name></member>
      <member refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMatter</name></member>
      <member refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMatters</name></member>
      <member refid="class_neuron_1a5bc4e67c5f2d8a3bcd160aa3f5086aec" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMembrane</name></member>
      <member refid="class_dendrite_1a3551fe5fcf9c7ec767a6171f61a5ba51" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMembraneCapacitance</name></member>
      <member refid="class_dendrite_1ab70008318cada82e0f21f8f010858eaa" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMembraneResistance</name></member>
      <member refid="class_neuron_1ac759d9589c0505332e8238cafbc8fa66" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMembranes</name></member>
      <member refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMonomer</name></member>
      <member refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetMonomers</name></member>
      <member refid="class_cognitive_network_1ac12f0af92d878d45dca7303dc065c383" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuron</name></member>
      <member refid="class_neuron_1aff3a33f5d8ef5dacdec9c03df50f168c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuronDeviceTag</name></member>
      <member refid="class_cognitive_network_1af81132245e486c496a055f54a5a520d0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuronPool</name></member>
      <member refid="class_cognitive_network_1a0e9e37e976a7ca5ee625e2d7b36fd7ea" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeurons</name></member>
      <member refid="class_neuron_1a98f326ea86e6e8371b639609a4495c37" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuronType</name></member>
      <member refid="class_dendrite_cleft_1a5eb3a8f143f63b852b8f5e245d385519" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1a4a14361574777fb1d66fd4ed2d4f2492" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1a85890c201376061b1ffbe8fdfc1a8633" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1a4e5b1d60cda4ddb4bd04d8dca42b7a5b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeurotransmitterPool</name></member>
      <member refid="class_cognitive_network_1ac56b1585864b372c8897dcb5720d00a7" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1a1c92a8f6c42788cf8ca890f062f853a3" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetObjectType</name></member>
      <member refid="class_cognitive_network_1a69655ef1e12bac5f74c2eb85c72720f4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetOrbital</name></member>
      <member refid="class_cognitive_network_1af5995eaa4ba35c555a6b65d895451f25" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetOrbitalPool</name></member>
      <member refid="class_cognitive_network_1aa21d28ffc3b507236a7dad64663f6c42" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetOrbitals</name></member>
      <member refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetPoint</name></member>
      <member refid="class_universe_1a765c6c658b7a465cd92418690db846ae" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetPoints</name></member>
      <member refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetPolymer</name></member>
      <member refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetPolymers</name></member>
      <member refid="class_dendrite_1af0315957a349532d25691385b6486e95" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetPropagationVelocity</name></member>
      <member refid="class_neuron_1a0573244d3c78a22a45c249db536cbb68" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetRestingPotential</name></member>
      <member refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSolid</name></member>
      <member refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSolids</name></member>
      <member refid="class_neuron_1a8539a7965349078a7b1c1265895daefa" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSoma</name></member>
      <member refid="class_neuron_1aa6f1237ed89c48eb57610083edf43efa" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSomaPool</name></member>
      <member refid="class_neuron_1a867fbd498b54c115a2c8769f83c48020" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSomas</name></member>
      <member refid="class_cognitive_network_1a277247686f8af159e7a7beb0ec379225" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetStrong</name></member>
      <member refid="class_cognitive_network_1a942ca90561fedae46136de620accbfea" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetStrongFundamental</name></member>
      <member refid="class_cognitive_network_1acfa5de663b3e686c4d9ea1a3bb483b11" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetStrongResidual</name></member>
      <member refid="class_cognitive_network_1a1944aaa13667bc267e6ef44892da969d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSynapse</name></member>
      <member refid="class_cognitive_network_1ae0068b9df823e1b10fed3c73f1cb4702" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSynapsePool</name></member>
      <member refid="class_cognitive_network_1aa3376f2e7aed9639c2b5ba27aa6fb314" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetSynapses</name></member>
      <member refid="class_neuron_1a745b090da1b8f8fc7e3cf0ca06dfb117" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetUsage</name></member>
      <member refid="class_neuron_1a9af31418d1232135bf5074f6a3d5dbf1" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GetVisualisationList</name></member>
      <member refid="class_cognitive_network_1a761db75ac8eab7b4625e5a398891bd12" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetWeak</name></member>
      <member refid="class_cognitive_network_1aa6342c390fe8e7c648b4c6bc8f93ba4a" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>GetWeakElectroweak</name></member>
      <member refid="class_dendrite_branch_1a4b950ef8a0856a11240d353bcfd1fba4" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Growth</name></member>
      <member refid="class_dendrite_cleft_1af4715ffbf1bf437523d07e37b7abc3e0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GrowthSurface</name></member>
      <member refid="class_dendrite_cleft_1a0cb2fc6ad72bba55b5f65130006d4b12" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>GrowthVolume</name></member>
      <member refid="class_cognitive_network_1aaf69f6e0cc0084eb748ef1540c773f85" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>interneuronspace_list</name></member>
      <member refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>IsDead</name></member>
      <member refid="class_dendrite_cleft_1aaaf447d15eebe2a304ee03a62cc97c05" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_addStatus</name></member>
      <member refid="class_dendrite_cleft_1a9244fcddd66073866759b5bedca083db" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_Counter</name></member>
      <member refid="class_dendrite_cleft_1aa905ee6ba625bfa340282b03b916ecdf" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_dendriteDiameterEnd</name></member>
      <member refid="class_dendrite_cleft_1ad206cd42f8bf36b989e3993d02214e12" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_dendriteDiameterStart</name></member>
      <member refid="class_dendrite_cleft_1ae24f44df5148f9bcf95ba4a2a1916491" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_dendriteLength</name></member>
      <member refid="class_dendrite_cleft_1ad947e5dda845fb5ac25cfb3709a4e860" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_internalResistance</name></member>
      <member refid="class_dendrite_cleft_1a6876a474554771833ea179fbc8d8cd62" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_Length</name></member>
      <member refid="class_dendrite_cleft_1ab5a89436993650294a6abab92852f488" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_membraneCapacitance</name></member>
      <member refid="class_dendrite_cleft_1aed8f88f66a419600c41da62d8814dc59" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_membraneResistance</name></member>
      <member refid="class_dendrite_cleft_1aabf37b96644ddc07d3195d6c2ebc60e8" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_SurfaceArea</name></member>
      <member refid="class_dendrite_cleft_1a8236dc02dccfe1f59bb0d288599a84b5" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_TimeDilation</name></member>
      <member refid="class_dendrite_cleft_1a504e4aef51d3e52dbad3589844a821de" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_TimeThreshold</name></member>
      <member refid="class_dendrite_cleft_1a93155af6d9d9179eb0608ee0cbf90e8c" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>m_Volume</name></member>
      <member refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>matter_list</name></member>
      <member refid="class_neuron_1a878a5a42025ba8205adeb9a50b2c1457" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>membrane_list</name></member>
      <member refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>monomer_list</name></member>
      <member refid="class_neuron_1a823487d01615fadb8ac19a2768dd9d96" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Neuron</name></member>
      <member refid="class_neuron_1acbc433cac4f27aa7f4e05be26c336aa5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Neuron</name></member>
      <member refid="class_neuron_1a4611499895417d44250c452d0fc719a6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Neuron</name></member>
      <member refid="class_neuron_1a6839febd20fb8f776151e00142411a56" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Neuron</name></member>
      <member refid="class_cognitive_network_1abbb9ff97e1b9cd61602d95f44c30132e" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>neuron_list</name></member>
      <member refid="class_dendrite_cleft_1a42de9c556ce58c9f511031361755a0c3" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>neuroreceptor_list</name></member>
      <member refid="class_dendrite_cleft_1afd7b84cb30b571db5d42130915a27033" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>neuroreceptor_pool</name></member>
      <member refid="class_cognitive_network_1a7018bee3dbf538c3d0c81a64aa002ab8" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>neurotransmitter_list</name></member>
      <member refid="class_soma_1a84739acd533862b115bd5cbe56da6c98" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>object_connection_list</name></member>
      <member refid="class_dendrite_cleft_1ac457de5e25a7c7e29db9d50f0874f078" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_disabled</name></member>
      <member refid="class_dendrite_cleft_1a22c6048147877a2c59c9264b295e7179" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_energy</name></member>
      <member refid="class_dendrite_cleft_1ac73d775c34a5c3f186b395c8e7738cd8" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_energy_threshold</name></member>
      <member refid="class_dendrite_cleft_1aba50e581f1aec412b7b44ecd0dfc8076" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_energyDec</name></member>
      <member refid="class_dendrite_cleft_1a81149b707c189d2b96a40af75af1f059" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_energyInc</name></member>
      <member refid="class_dendrite_cleft_1a541502a9ffbc2926e76d2eb4a972ae39" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_energyLeak</name></member>
      <member refid="class_dendrite_cleft_1a246dda1826ad0fd93002388993899e10" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_initialised</name></member>
      <member refid="class_dendrite_cleft_1ac78e2502c53c1b3d0c2a759f3b653dde" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>object_size</name></member>
      <member refid="class_neuron_1a82d0a4739244d79ff929be01eeb0be28" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>OpenGate</name></member>
      <member refid="class_cognitive_network_1a263efd10857d5507c0e889e48f7329fe" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>orbital_list</name></member>
      <member refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>point_list</name></member>
      <member refid="class_cognitive_network_1ac97c08a0af7dc0d02fbe059827b6be87" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>PollElementaryForce</name></member>
      <member refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>polymer_list</name></member>
      <member refid="class_dendrite_cleft_1a97d85edbb69960d16398d212107c36fb" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>previous_event_time</name></member>
      <member refid="class_soma_1a2f75c0f716fa1f74f70697db9dfcd562" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveAxonHillock</name></member>
      <member refid="class_soma_1a7281585d74015a2549a19df6cb16e3fb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveAxonHillocks</name></member>
      <member refid="class_cognitive_network_1af79bf7f8b61d5392df7a87bd444eb550" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveCognitiveInput</name></member>
      <member refid="class_cognitive_network_1aaaf93e7c732b1e1e81060f82ff73c93a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveCognitiveInputs</name></member>
      <member refid="class_cognitive_network_1a9874b11ac465c84ccf7baab0a40fb84e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveCognitiveOutput</name></member>
      <member refid="class_cognitive_network_1a2f4956b004c828f0165f28c03e089144" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveCognitiveOutputs</name></member>
      <member refid="class_soma_1a85c7d4b41486182c9528f5c43beaf7fd" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendrite</name></member>
      <member refid="class_dendrite_1aa23bd0ce7c5a0a9011b28234cc2e90e1" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendriteBranch</name></member>
      <member refid="class_dendrite_1a15396dce5e1d920fcd1477b9a255dabf" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendriteBranches</name></member>
      <member refid="class_dendrite_branch_1afaca221cb4bba98e56f11b0f9e6370b5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendriteCleft</name></member>
      <member refid="class_dendrite_branch_1acd54003e5acb9abda7d7a42f248c14b0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendriteClefts</name></member>
      <member refid="class_soma_1ad15baed4b2f5dab6f93e5df8fd1f7b23" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveDendrites</name></member>
      <member refid="class_cognitive_network_1a04e38cea356f1c7ac31c4df5e19d759c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveInterneuronSpace</name></member>
      <member refid="class_cognitive_network_1a994c5f93447a82429809c89aa08d3dc1" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveInterneuronSpaces</name></member>
      <member refid="class_neuron_1a190ae0628482048bef95c8b318939322" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveMembrane</name></member>
      <member refid="class_neuron_1a3cd5fc6f1a354d99bb8768df7ee40552" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveMembranes</name></member>
      <member refid="class_cognitive_network_1a33e911ec87d902a8fd8bb6d9e23c4261" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeuron</name></member>
      <member refid="class_cognitive_network_1a130985ff0aa14b2a17fc2c589e65f868" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeurons</name></member>
      <member refid="class_dendrite_cleft_1afaf06d4516355dfe2e0e4c33a00f0f1d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeuroreceptor</name></member>
      <member refid="class_dendrite_cleft_1ac29b12d4abcc47fa298ab9e95f578f0e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeuroreceptors</name></member>
      <member refid="class_cognitive_network_1ac0728c12a6d4bb87b6e8c9163435c8e6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeurotransmitter</name></member>
      <member refid="class_cognitive_network_1a5e706084296ce84ff6884c1506213b03" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveNeurotransmitters</name></member>
      <member refid="class_cognitive_network_1a6ed0e198f6dcfdd45d57df5d3ad5754c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveOrbital</name></member>
      <member refid="class_cognitive_network_1af7834d400995607c2a5a5eac7b5e006d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveOrbitals</name></member>
      <member refid="class_neuron_1a4f8c2f0c1b294493a7c581a7f46c2863" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveSoma</name></member>
      <member refid="class_neuron_1a976b1bab63d0bd21b1c8c8e1cfbd17fe" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveSomas</name></member>
      <member refid="class_cognitive_network_1a0764ede1c23caa7022a01657a0e3726b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveSynapse</name></member>
      <member refid="class_cognitive_network_1a87d6628f388baed1edb8efda9062c443" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>RemoveSynapses</name></member>
      <member refid="class_dendrite_cleft_1a3fee388d7023cfb460412e0322244ae2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>ResetParameters</name></member>
      <member refid="class_universe_1aeda74e3902c0e56c0c09779854045cde" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>ReturnEnergy</name></member>
      <member refid="class_soma_1a6ee53e0dd77fec097da1b81472d6f147" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetAxonHillockPool</name></member>
      <member refid="class_neuron_1a8f5766ea61dc46b7a25361df540755ec" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetCapacity</name></member>
      <member refid="class_neuron_1aed1ba99e24b905cd91a519c33b5a62b0" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetChannelMax</name></member>
      <member refid="class_neuron_1ae463ad8173c63e7970a5f4594667d481" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetChannelMin</name></member>
      <member refid="class_cognitive_network_1a99f801aeca299186cc706696696749b1" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetCharge</name></member>
      <member refid="class_cognitive_network_1a0e8a64151a2446fc16a074ad2de325df" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetCognitiveNetworkDeviceTag</name></member>
      <member refid="class_dendrite_cleft_1a428b8e5117f381a382e0071b936d42a1" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetCounter</name></member>
      <member refid="class_neuron_1a92f942f6f0bd783c39bb550cf4bb8fd0" prot="public" virt="non-virtual" ambiguityscope="Neuron::"><scope>DendriteCleft</scope><name>SetCounter</name></member>
      <member refid="class_dendrite_1ada331daa4464ae007b3f77612aa46937" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setDendriteDiameterEnd</name></member>
      <member refid="class_dendrite_1af33658a5420b56cfd321d75ae5784302" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setDendriteDiameterStart</name></member>
      <member refid="class_dendrite_1a9bc84d369ac487b095ed1641f89469d2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setDendriteLength</name></member>
      <member refid="class_soma_1ac9fb87be6f9453cc4313e3a35c8b950c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetDendritePool</name></member>
      <member refid="class_neuron_1af9ad96e27f7692e9e328d90e4c96977a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetDisabled</name></member>
      <member refid="class_cognitive_network_1a31764cd5746369d16b45f2ff74806a0b" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetElectromagnetic</name></member>
      <member refid="class_cognitive_network_1a270f6842ec14b3e5b80dedf7b48ea6f4" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetElectromagneticElectroweak</name></member>
      <member refid="class_dendrite_cleft_1a7e09ccb70936deabde9c12457cec949c" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetEnergy</name></member>
      <member refid="class_soma_1a37081f7a8fc7832f8e89629221ddb8a6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetEnergyDec</name></member>
      <member refid="class_soma_1a414afd7eb780e29a432603198a9838ed" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetEnergyInc</name></member>
      <member refid="class_soma_1abca59a00940ca2d9c005a84b6785c12f" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetEnergyLeak</name></member>
      <member refid="class_soma_1ae2876b37909f37e8922ce364eb06491f" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetEnergyThreshold</name></member>
      <member refid="class_neuron_1a492f597021faf1b74942bc75364c3c22" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetGateKeeper</name></member>
      <member refid="class_cognitive_network_1af9f082a70f0cc25a3f818d9eace5a527" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetGravitation</name></member>
      <member refid="class_dendrite_1ac79018e356cec31be05518b85c73a54d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setInternalResistance</name></member>
      <member refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetLifespan</name></member>
      <member refid="class_dendrite_1a6fed149ffe00cf781a41a9f260f8eeb2" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setMembraneCapacitance</name></member>
      <member refid="class_dendrite_1af6141643bf2c85404ae9c320611d1d31" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>setMembraneResistance</name></member>
      <member refid="class_neuron_1aa06d0f1a129e4a901a60e7343bc43533" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetNeuronDeviceTag</name></member>
      <member refid="class_cognitive_network_1aeb59b511e2ef526c43df1d24a468b571" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetNeuronPool</name></member>
      <member refid="class_neuron_1afc685a0444425fceab6685a6ee004b65" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetNeuronType</name></member>
      <member refid="class_cognitive_network_1aaa10c36c0b0024fa717d8d61a4a06920" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetNeurotransmitterPool</name></member>
      <member refid="class_soma_1a85b4708eb51ab0962a6128b87aff0700" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetObjectType</name></member>
      <member refid="class_cognitive_network_1aaa3929bfba068659e9681f85deaf79cb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetOrbitalPool</name></member>
      <member refid="class_neuron_1a14bef0cc064213659b38c93b002e8956" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetSomaPool</name></member>
      <member refid="class_cognitive_network_1a3fc6d08413bfd4350f94d6f2627eedc7" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetSpin</name></member>
      <member refid="class_cognitive_network_1a50f2a12c9873e623d6247318b041ba30" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetStrong</name></member>
      <member refid="class_cognitive_network_1ac54286eea279f5caa98b642b9084fd55" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetStrongFundamental</name></member>
      <member refid="class_cognitive_network_1a6f7210dd8c2786518329faa61b6e14d5" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetStrongResidual</name></member>
      <member refid="class_cognitive_network_1a30f35d1bff2e1e3a5a2d921791cfe6b8" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetSynapsePool</name></member>
      <member refid="class_neuron_1abf99856ac41b5c9c4948b3204bbc1590" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>SetUsage</name></member>
      <member refid="class_cognitive_network_1ab39c9eed50da6d3630c4498ae64b804e" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetWeak</name></member>
      <member refid="class_cognitive_network_1a116f6818986a622e4a318857859e2495" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>SetWeakElectroweak</name></member>
      <member refid="class_universe_1a747f9d3cf0b2caada4461cb7b12ea17b" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>solid_list</name></member>
      <member refid="class_soma_1abb9524743f65717d33797b45bff42441" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Soma</name></member>
      <member refid="class_soma_1a5c0fb24d35ef360cdb830887952f44e5" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Soma</name></member>
      <member refid="class_soma_1a9c9388e5b6562c39689768856d59ca51" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Soma</name></member>
      <member refid="class_soma_1a451e3918aa5f3ec5670fa08d4d710dd6" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Soma</name></member>
      <member refid="class_neuron_1abb3745c6a8727f4ceb8db9e2258b90b5" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>soma_list</name></member>
      <member refid="class_cognitive_network_1a9218de9d63b10b313df289d1312c81e0" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>synapse_list</name></member>
      <member refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>TheCalculatedTimeNow</name></member>
      <member refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>TheTimeNow</name></member>
      <member refid="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>time_dimension_pointer</name></member>
      <member refid="class_dendrite_cleft_1a145dcc0e5e2564e22464625930c006c9" prot="private" virt="non-virtual"><scope>DendriteCleft</scope><name>time_object_created</name></member>
      <member refid="class_soma_1a926552007228732d39525ce127ee5a0d" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>TimeFunction</name></member>
      <member refid="class_neuron_1a32fe82aa21f8a68392d696eea3a34c99" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>toggleDisabled</name></member>
      <member refid="class_universe_1a4d137a146dd3c2514dfb692dfbab6984" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Universe</name></member>
      <member refid="class_universe_1a1210ce56049f1fc67f53aeda223bb82b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Universe</name></member>
      <member refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Universe</name></member>
      <member refid="class_dendrite_cleft_1a3a75af4d6fd97c9635134509f170a04e" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>Update</name></member>
      <member refid="class_neuron_1a06f45a5d1de890da84d3644fe58ea0a9" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>UpdateCycle</name></member>
      <member refid="class_cognitive_network_1aa37dda869174e4eef986cca4ce3e55d2" prot="public" virt="non-virtual" ambiguityscope="CognitiveNetwork::"><scope>DendriteCleft</scope><name>UpdateCycle</name></member>
      <member refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" prot="public" virt="non-virtual" ambiguityscope="Universe::"><scope>DendriteCleft</scope><name>UpdateCycle</name></member>
      <member refid="class_neuron_1a55c72e8066caf1ad8e25a2b0b453ee69" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>UpdateCycle2</name></member>
      <member refid="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" prot="public" virt="non-virtual"><scope>DendriteCleft</scope><name>UseEnergy</name></member>
      <member refid="class_neuron_1a00b1e2e5f9d224759df1aa54093092ba" prot="protected" virt="non-virtual"><scope>DendriteCleft</scope><name>visualisation_list</name></member>
      <member refid="class_cognitive_network_1a17142cc6f0bb3894e63f6c66fa401778" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~CognitiveNetwork</name></member>
      <member refid="class_dendrite_1a616c3f82655d8a3cf9cebc22e7aa2233" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~Dendrite</name></member>
      <member refid="class_dendrite_branch_1a38707cb6d1f9f07c6e8aa34a8a415051" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~DendriteBranch</name></member>
      <member refid="class_dendrite_cleft_1ad99958c45fa63f2f68b65d7e5ba45b32" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~DendriteCleft</name></member>
      <member refid="class_neuron_1aecd41febe74ef417230cd74af0c8b801" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~Neuron</name></member>
      <member refid="class_soma_1a482570e6b3e366db93396add6ba1922d" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~Soma</name></member>
      <member refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" prot="public" virt="virtual"><scope>DendriteCleft</scope><name>~Universe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
