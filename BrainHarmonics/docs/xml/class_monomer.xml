<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="class_monomer" kind="class" language="C++" prot="public">
    <compoundname>Monomer</compoundname>
    <basecompoundref refid="class_universe" prot="public" virt="non-virtual">Universe</basecompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <derivedcompoundref refid="class_polymer" prot="public" virt="non-virtual">Polymer</derivedcompoundref>
    <includes refid="monomer_8h" local="no">monomer.h</includes>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="class_monomer_1ad792aeb859c72edbb17414bf00b8fd12" prot="protected" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="class_monomer" kindref="compound">Monomer</ref> * &gt;</type>
        <definition>std::vector&lt;Monomer*&gt; Monomer::solid_list</definition>
        <argsstring></argsstring>
        <name>solid_list</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="98" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_monomer_1a163885a7c7da282e9487425392a8f570" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int Monomer::monomer_counter</definition>
        <argsstring></argsstring>
        <name>monomer_counter</name>
        <briefdescription>
<para>Member variable &quot;monomer_counter&quot;. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="101" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1acc09d7e702f91a7b14ff58863eb5e4a6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Monomer::monomer_type</definition>
        <argsstring></argsstring>
        <name>monomer_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="102" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1ac79d26bc31d0bff553773e38f5f7b9e5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Monomer::object_initialised</definition>
        <argsstring></argsstring>
        <name>object_initialised</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="103" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1ad80cf80e7bc9b29d63e9bb15a364abed" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Monomer::object_disabled</definition>
        <argsstring></argsstring>
        <name>object_disabled</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="104" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1aaba064b94b15cdafaa5da341a97b7a7f" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int Monomer::duration_since_last_event</definition>
        <argsstring></argsstring>
        <name>duration_since_last_event</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="105" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1a689f4abe0f31c0a7d32221242b3bf944" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Monomer::time_object_created</definition>
        <argsstring></argsstring>
        <name>time_object_created</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="106" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_monomer_1ac2b6be09ea5da5953ced21c9d7d5e3d1" prot="private" static="no" mutable="no">
        <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
        <definition>std::chrono::time_point&lt;Clock&gt; Monomer::previous_event_time</definition>
        <argsstring></argsstring>
        <name>previous_event_time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="107" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_monomer_1a2b1f69caca47d8597e43300ae7076095" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Monomer::Monomer</definition>
        <argsstring>()</argsstring>
        <name>Monomer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="28" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1af2249bf76132ee3802eaccb49b76fb96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Monomer::Monomer</definition>
        <argsstring>(unsigned int object_type)</argsstring>
        <name>Monomer</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="30" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="30" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1acab23e1c41e236417492da5c1e617b1a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Monomer::Monomer</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Monomer</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="32" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="32" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ae2b80466a0e724125aee173df34d1a6c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Monomer::Monomer</definition>
        <argsstring>(unsigned int object_type, std::chrono::time_point&lt; Clock &gt; event_time, Universe &amp;universe_connector)</argsstring>
        <name>Monomer</name>
        <param>
          <type>unsigned int</type>
          <declname>object_type</declname>
        </param>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type><ref refid="class_universe" kindref="compound">Universe</ref> &amp;</type>
          <declname>universe_connector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="34" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="34" bodyend="45"/>
        <references refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">ResetParameters</references>
        <references refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" compoundref="universe_8cc" startline="57" endline="61">Universe::Creation</references>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a802bf239fc55d16783736393edbd6899" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual Monomer::~Monomer</definition>
        <argsstring>()</argsstring>
        <name>~Monomer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default destructor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="48" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="48" bodyend="48"/>
        <references refid="class_monomer_1a4651a4bd0a41d0698821421043e41126" compoundref="monomer_8cc" startline="20" endline="20">GetCounter</references>
        <references refid="class_monomer_1a6f0dfa4382b3d4fa19b7ee0fb8fe7a55" compoundref="monomer_8cc" startline="22" endline="22">SetCounter</references>
        <references refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">ResetParameters</references>
        <references refid="class_monomer_1ac03023c0d1bb67e5f11091af7ad3735d" compoundref="monomer_8cc" startline="75" endline="80">AddSolid</references>
        <references refid="class_monomer_1a48dc2ffb5da8cf3dc3f4f56bba674de6" compoundref="monomer_8cc" startline="83" endline="117">Update</references>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a4651a4bd0a41d0698821421043e41126" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int Monomer::GetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>GetCounter</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="50" column="1" bodyfile="BrainHarmonics/monomer.cc" bodystart="20" bodyend="20"/>
        <referencedby refid="class_monomer_1a802bf239fc55d16783736393edbd6899" compoundref="monomer_8h" startline="48" endline="48">~Monomer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a6f0dfa4382b3d4fa19b7ee0fb8fe7a55" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetCounter</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, unsigned int val)</argsstring>
        <name>SetCounter</name>
        <reimplements refid="class_universe_1aa22202ae740eb1355529afcb13285e91">SetCounter</reimplements>
        <reimplementedby refid="class_polymer_1a1500ffc682396af2f4306c7c7ea7fd87">SetCounter</reimplementedby>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="52" column="1" bodyfile="BrainHarmonics/monomer.cc" bodystart="22" bodyend="22"/>
        <referencedby refid="class_monomer_1a802bf239fc55d16783736393edbd6899" compoundref="monomer_8h" startline="48" endline="48">~Monomer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Monomer::ResetParameters</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>ResetParameters</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="54" column="1" bodyfile="BrainHarmonics/monomer.cc" bodystart="24" bodyend="73"/>
        <references refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" compoundref="universe_8cc" startline="111" endline="114">Universe::TheTimeNow</references>
        <references refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" compoundref="universe_8h" startline="281">Universe::object_energy</references>
        <references refid="class_universe_1a17c8d799331a5b32837f285c12cbe858" compoundref="universe_8h" startline="282">Universe::object_energy_threshold</references>
        <references refid="class_universe_1a64f4f4025c9be1d84492c766a002a6d4" compoundref="universe_8h" startline="283">Universe::object_size</references>
        <referencedby refid="class_monomer_1a48dc2ffb5da8cf3dc3f4f56bba674de6" compoundref="monomer_8cc" startline="83" endline="117">Update</referencedby>
        <referencedby refid="class_monomer_1ae2b80466a0e724125aee173df34d1a6c" compoundref="monomer_8h" startline="34" endline="45">Monomer</referencedby>
        <referencedby refid="class_monomer_1a802bf239fc55d16783736393edbd6899" compoundref="monomer_8h" startline="48" endline="48">~Monomer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ac03023c0d1bb67e5f11091af7ad3735d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Monomer::AddSolid</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>AddSolid</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="56" column="1" bodyfile="BrainHarmonics/monomer.cc" bodystart="75" bodyend="80"/>
        <referencedby refid="class_monomer_1a802bf239fc55d16783736393edbd6899" compoundref="monomer_8h" startline="48" endline="48">~Monomer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a48dc2ffb5da8cf3dc3f4f56bba674de6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int Monomer::Update</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time)</argsstring>
        <name>Update</name>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="58" column="1" bodyfile="BrainHarmonics/monomer.cc" bodystart="83" bodyend="117"/>
        <references refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" compoundref="monomer_8cc" startline="24" endline="73">ResetParameters</references>
        <references refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" compoundref="universe_8h" startline="281">Universe::object_energy</references>
        <referencedby refid="class_monomer_1a802bf239fc55d16783736393edbd6899" compoundref="monomer_8h" startline="48" endline="48">~Monomer</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a1ee35c888318e590082e6cd1772bb430" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetCharge</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val) final</argsstring>
        <name>SetCharge</name>
        <reimplements refid="class_universe_1a3b3da7c86a7b75e5e5c0b7972ac82a87">SetCharge</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="60" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ad24a86a4c1ac62d1b0ce8040d6b08adf" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetSpin</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, int val) final</argsstring>
        <name>SetSpin</name>
        <reimplements refid="class_universe_1ae2ae1c3b3e4cde2c18f5f6a814761ec8">SetSpin</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="61" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1aa5f7b901e15c9a9eb6e1c3564cd06e4f" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetGravitation</name>
        <reimplements refid="class_universe_1ab0404e774ee0ed66b597ff5b8e989446">GetGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="62" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ac2070d7e39cd0b2a00aa6023ffd51f55" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetWeak</name>
        <reimplements refid="class_universe_1a4476b7e0a3fc1764909f556257fd9ec7">GetWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="63" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="63" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1aec6e42dde40c5b3142fab880eabb346a" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetWeakElectroweak</name>
        <reimplements refid="class_universe_1a645299738e6b798a037f2a15a2e7cf4d">GetWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="64" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ad23f4829d66cb20401cc72a9d72ac320" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetElectromagnetic</name>
        <reimplements refid="class_universe_1a63b850ef3f3394313353109d222bf5d1">GetElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="65" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="65" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a9b270cd1293bc9635813ead284bd3881" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a9f099605c082e7fa755787a6a8cab7ba">GetElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="66" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1aa35033340e88c46757d1d5ccba21a21e" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrong</name>
        <reimplements refid="class_universe_1acb453ce71da418c5b5617fecede9571b">GetStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="67" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="67" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a4bc8b39086260e26a196b28b4fc6667f" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrongFundamental</name>
        <reimplements refid="class_universe_1ab44daccba01ee7e3cf9b50bba83dd19e">GetStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="68" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a3b00168520f592098356f7cd3e663ad3" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::GetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>GetStrongResidual</name>
        <reimplements refid="class_universe_1af0f4b81950061e63c2855eb40957a5b1">GetStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="69" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a8747945cc2f7abd7ce0885345ad14ebc" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyGravitation</name>
        <reimplements refid="class_universe_1a76c0b5e63c2a7d1988c44db341c3d64c">ApplyGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="71" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a176a1a4dfed1eaddc6637bbfd2660aba" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyWeak</name>
        <reimplements refid="class_universe_1a6d1226b3adec3c42a833afdbb6a65a92">ApplyWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="72" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a64f65c128ebc2428c42739c930696ea1" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyWeakElectroweak</name>
        <reimplements refid="class_universe_1a46a906baabb63e5d31f8b48ea1fae52e">ApplyWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="73" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="73" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ae64dfbf82610ae26427be9c824aef70f" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyElectromagnetic</name>
        <reimplements refid="class_universe_1a1f787da78fa196ba635db21a9e91dabb">ApplyElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="74" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a4c3f9894ea57047789bec32602f033cb" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a4c36c1ab30db993307f88363dde5e8c5">ApplyElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="75" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1acba5091693082fdf2d28f1a5a4ae19a1" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrong</name>
        <reimplements refid="class_universe_1a906a88b37f10bfa630bef49dfd0e907a">ApplyStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="76" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="76" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1aa186454670f7796e196509238d419a35" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrongFundamental</name>
        <reimplements refid="class_universe_1a62789bcff84bd750b0366004381e2fdd">ApplyStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="77" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a921f7add2d446b8670513220ace6c4b2" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>double</type>
        <definition>double Monomer::ApplyStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>ApplyStrongResidual</name>
        <reimplements refid="class_universe_1af7becebb347be9a85541d96a3eca1ca7">ApplyStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="78" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ab38d44b27a46d5630aeb5e889f927c09" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetGravitation</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetGravitation</name>
        <reimplements refid="class_universe_1ae0cb8d86b2fbb8396d605160344b42f5">SetGravitation</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="80" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ad4fe1db33f493575281e1a2fb35004ca" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetWeak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetWeak</name>
        <reimplements refid="class_universe_1a0f5cd04081b41ee931c0557dc397f6fb">SetWeak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="81" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ab887d7cfd2ecb557efb3ace59852019c" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetWeakElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetWeakElectroweak</name>
        <reimplements refid="class_universe_1a2d3d642bfdc863248e93535832fa4b00">SetWeakElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="82" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a50e41be601b31450a97bfd15950cfb3d" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetElectromagnetic</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetElectromagnetic</name>
        <reimplements refid="class_universe_1aa981fc7e252b1fbbb675f0371860954d">SetElectromagnetic</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="83" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1aa034728b74053ed3df452ddc8f1b46e8" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetElectromagneticElectroweak</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetElectromagneticElectroweak</name>
        <reimplements refid="class_universe_1a608aa95698380f791a0ffba45cc1bee3">SetElectromagneticElectroweak</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="84" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a10b864f6bcad43f11a2316dbbe4c4742" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetStrong</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrong</name>
        <reimplements refid="class_universe_1a5946c8f3d4cda305f3ecd10df21a2f94">SetStrong</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="85" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ad9df06c1a8264bfdb514ef3ba04ef4c7" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetStrongFundamental</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrongFundamental</name>
        <reimplements refid="class_universe_1aafec97a231126b71c73ac1258609a284">SetStrongFundamental</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="86" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1ae6ca57913da27fa749d33d1c4fed27ca" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::SetStrongResidual</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time, double val) final</argsstring>
        <name>SetStrongResidual</name>
        <reimplements refid="class_universe_1a1b2d6197ddf3d613cc30bd04d22ed8b7">SetStrongResidual</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <param>
          <type>double</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="87" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="class_monomer_1a5b2375df1e19abdf6045c475d2ac23ca" prot="public" static="no" const="no" explicit="no" inline="yes" final="yes" virt="virtual">
        <type>void</type>
        <definition>void Monomer::PollElementaryForce</definition>
        <argsstring>(std::chrono::time_point&lt; Clock &gt; event_time) final</argsstring>
        <name>PollElementaryForce</name>
        <reimplements refid="class_universe_1a0c485c504542409cbb5cfd8543c35b11">PollElementaryForce</reimplements>
        <param>
          <type>std::chrono::time_point&lt; <ref refid="universe_8h_1a0ef8d951d1ca5ab3cfaf7ab4c7a6fd80" kindref="member">Clock</ref> &gt;</type>
          <declname>event_time</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="BrainHarmonics/monomer.h" line="89" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="89" bodyend="89"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="225">
        <label>Polymer</label>
        <link refid="class_polymer"/>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
        <childnode refid="223" relation="public-inheritance">
        </childnode>
      </node>
      <node id="224">
        <label>Universe</label>
        <link refid="class_universe"/>
      </node>
      <node id="223">
        <label>Monomer</label>
        <link refid="class_monomer"/>
        <childnode refid="224" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="227">
        <label>Universe</label>
        <link refid="class_universe"/>
        <childnode refid="227" relation="usage">
          <edgelabel>time_dimension_pointer</edgelabel>
        </childnode>
      </node>
      <node id="226">
        <label>Monomer</label>
        <link refid="class_monomer"/>
        <childnode refid="227" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="BrainHarmonics/monomer.h" line="25" column="1" bodyfile="BrainHarmonics/monomer.h" bodystart="24" bodyend="108"/>
    <listofallmembers>
      <member refid="class_universe_1ab682307c963836cd81b35b5604bd7064" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddCognitiveNetwork</name></member>
      <member refid="class_universe_1a5199f6c27b1a97c8b8c9847b8be686cf" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddCognitiveNetworks</name></member>
      <member refid="class_universe_1ab2671c2218c98f0f1f487c5b3bb96e3c" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddCompositeForceParticle</name></member>
      <member refid="class_universe_1a23d74e377203fca7cb74e0ffee7244b6" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddCompositeForceParticles</name></member>
      <member refid="class_universe_1a6326158c47bf3f7fe9297299a9b5b7b7" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddDimension</name></member>
      <member refid="class_universe_1a03bdf5f7fea4209241e9bf5316d45517" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddDimensions</name></member>
      <member refid="class_universe_1a90c573dec55f2b3ad5680015356f5f25" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddElementaryForce</name></member>
      <member refid="class_universe_1a81d294300346e9f901836ab609cce942" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddElementaryForces</name></member>
      <member refid="class_universe_1ab9c84e0576de50aa4fa46655832ce5e4" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddElementaryParticle</name></member>
      <member refid="class_universe_1a857cf7f208cd11c80736e82fa523feb5" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddElementaryParticles</name></member>
      <member refid="class_universe_1a090d9ad1b88d81364e872e17d65edca4" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddMatter</name></member>
      <member refid="class_universe_1ae00d10b2a23c9cedf1ff89e9da875563" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddMatters</name></member>
      <member refid="class_universe_1a062a9472f0400e566ecc7dc056d989d9" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddMonomer</name></member>
      <member refid="class_universe_1a95fe7f99971bb2048121a7c4e87b9f79" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddMonomers</name></member>
      <member refid="class_universe_1a8508b791c6997d8abcdcc037a6776734" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddPoint</name></member>
      <member refid="class_universe_1aa48ced2078ba863723050d8283b3fa67" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddPoints</name></member>
      <member refid="class_universe_1a4ea0af5d2eb7b5070a83f7da29526fbd" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddPolymer</name></member>
      <member refid="class_universe_1aed7cb25507d516a2821ebb69d5345c54" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddPolymers</name></member>
      <member refid="class_monomer_1ac03023c0d1bb67e5f11091af7ad3735d" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddSolid</name></member>
      <member refid="class_universe_1a410d5ba2224fe90584b1f1aa5b38b41c" prot="public" virt="non-virtual"><scope>Monomer</scope><name>AddSolids</name></member>
      <member refid="class_universe_1a901e16db5e8af258c66af7ac75662fe0" prot="public" virt="virtual"><scope>Monomer</scope><name>AddTemporalAdjustment</name></member>
      <member refid="class_universe_1a15aa20218286fd11ecb9b792dfb63be3" prot="public" virt="virtual"><scope>Monomer</scope><name>AdjustCounters</name></member>
      <member refid="class_monomer_1ae64dfbf82610ae26427be9c824aef70f" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyElectromagnetic</name></member>
      <member refid="class_monomer_1a4c3f9894ea57047789bec32602f033cb" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyElectromagneticElectroweak</name></member>
      <member refid="class_monomer_1a8747945cc2f7abd7ce0885345ad14ebc" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyGravitation</name></member>
      <member refid="class_monomer_1acba5091693082fdf2d28f1a5a4ae19a1" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyStrong</name></member>
      <member refid="class_monomer_1aa186454670f7796e196509238d419a35" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyStrongFundamental</name></member>
      <member refid="class_monomer_1a921f7add2d446b8670513220ace6c4b2" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyStrongResidual</name></member>
      <member refid="class_monomer_1a176a1a4dfed1eaddc6637bbfd2660aba" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyWeak</name></member>
      <member refid="class_monomer_1a64f65c128ebc2428c42739c930696ea1" prot="public" virt="virtual"><scope>Monomer</scope><name>ApplyWeakElectroweak</name></member>
      <member refid="class_universe_1a7a0e9796ff0d650a8b1fbde5fa5b761f" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>cognitive_network_list</name></member>
      <member refid="class_universe_1ae9795d06e406c4322637825aa545aa2f" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>composite_forceparticle_list</name></member>
      <member refid="class_universe_1a28615baf47d4558cbe5eebeed6575024" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Creation</name></member>
      <member refid="class_universe_1a159461f7098c3a30274f54c8acff6eac" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>dimension_list</name></member>
      <member refid="class_monomer_1aaba064b94b15cdafaa5da341a97b7a7f" prot="private" virt="non-virtual"><scope>Monomer</scope><name>duration_since_last_event</name></member>
      <member refid="class_universe_1a015b19f6d5ad84ebaa9e3e7c8352389c" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>elementary_force_list</name></member>
      <member refid="class_universe_1aeb2e63cf49f0b5595e6c15109863bd3b" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>elementary_particle_list</name></member>
      <member refid="class_universe_1a982502e46868a00a9111738ccc9355c2" prot="public" virt="non-virtual"><scope>Monomer</scope><name>ExtendLife</name></member>
      <member refid="class_universe_1a1ea2b7e438bfdc7dd599aa59c310b126" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetCognitiveNetwork</name></member>
      <member refid="class_universe_1a06968a24194280a43f077c5b77379ea8" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetCognitiveNetworks</name></member>
      <member refid="class_universe_1a3e2acc1d75765a6e8e852fca919c5b96" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetCompositeForceParticle</name></member>
      <member refid="class_universe_1aed37d7224b4e31bdfb0632e39bf19694" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetCompositeForceParticles</name></member>
      <member refid="class_monomer_1a4651a4bd0a41d0698821421043e41126" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetCounter</name></member>
      <member refid="class_universe_1ab79a380dee684c6dc304b571f4d28645" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetDimension</name></member>
      <member refid="class_universe_1a1869fc7bf43827378bab5a701f7f917a" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetDimensions</name></member>
      <member refid="class_monomer_1ad23f4829d66cb20401cc72a9d72ac320" prot="public" virt="virtual"><scope>Monomer</scope><name>GetElectromagnetic</name></member>
      <member refid="class_monomer_1a9b270cd1293bc9635813ead284bd3881" prot="public" virt="virtual"><scope>Monomer</scope><name>GetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a9506017d944cb64e67567477c1505a53" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetElementaryForce</name></member>
      <member refid="class_universe_1a6a8ed579b2eedd3aceebda9f3d78aa0e" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetElementaryForces</name></member>
      <member refid="class_universe_1acef54e17666d17078c522388f8f6e4f9" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetElementaryParticle</name></member>
      <member refid="class_universe_1a168fd9bf7602adcba1de5dd93a212775" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetElementaryParticles</name></member>
      <member refid="class_universe_1a3b25e7ce6552991b7d5e6a9eb6e8a7ff" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetEnergy</name></member>
      <member refid="class_monomer_1aa5f7b901e15c9a9eb6e1c3564cd06e4f" prot="public" virt="virtual"><scope>Monomer</scope><name>GetGravitation</name></member>
      <member refid="class_universe_1a69de663cf2e32e65ed28c44ae666db3a" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetMatter</name></member>
      <member refid="class_universe_1a4307a62e183fed8cf2b92be0f6014688" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetMatters</name></member>
      <member refid="class_universe_1aaa03fb8178d790afd992dd094bb64b47" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetMonomer</name></member>
      <member refid="class_universe_1aca82a914e0f8bd7cd1ec80a7220f0a0e" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetMonomers</name></member>
      <member refid="class_universe_1a3774f14a13a55827a1a4eea0a404edcb" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetPoint</name></member>
      <member refid="class_universe_1a765c6c658b7a465cd92418690db846ae" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetPoints</name></member>
      <member refid="class_universe_1a2d5d3924a7d7ffd2a5f47be9f137d86e" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetPolymer</name></member>
      <member refid="class_universe_1aac5d1c1a3a3ba56c8ca7115a85b2c239" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetPolymers</name></member>
      <member refid="class_universe_1a9f7b74fc21d45ddaa78aa18e9a337bcd" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetSolid</name></member>
      <member refid="class_universe_1a669fc068dd7820a5af309bfbe67199aa" prot="public" virt="non-virtual"><scope>Monomer</scope><name>GetSolids</name></member>
      <member refid="class_monomer_1aa35033340e88c46757d1d5ccba21a21e" prot="public" virt="virtual"><scope>Monomer</scope><name>GetStrong</name></member>
      <member refid="class_monomer_1a4bc8b39086260e26a196b28b4fc6667f" prot="public" virt="virtual"><scope>Monomer</scope><name>GetStrongFundamental</name></member>
      <member refid="class_monomer_1a3b00168520f592098356f7cd3e663ad3" prot="public" virt="virtual"><scope>Monomer</scope><name>GetStrongResidual</name></member>
      <member refid="class_monomer_1ac2070d7e39cd0b2a00aa6023ffd51f55" prot="public" virt="virtual"><scope>Monomer</scope><name>GetWeak</name></member>
      <member refid="class_monomer_1aec6e42dde40c5b3142fab880eabb346a" prot="public" virt="virtual"><scope>Monomer</scope><name>GetWeakElectroweak</name></member>
      <member refid="class_universe_1a8fdaa6d06584e1ef50c4c613b22b786e" prot="public" virt="non-virtual"><scope>Monomer</scope><name>IsDead</name></member>
      <member refid="class_universe_1a409650bc0425fc22c7713487a2a6dd8e" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>matter_list</name></member>
      <member refid="class_monomer_1a2b1f69caca47d8597e43300ae7076095" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Monomer</name></member>
      <member refid="class_monomer_1af2249bf76132ee3802eaccb49b76fb96" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Monomer</name></member>
      <member refid="class_monomer_1acab23e1c41e236417492da5c1e617b1a" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Monomer</name></member>
      <member refid="class_monomer_1ae2b80466a0e724125aee173df34d1a6c" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Monomer</name></member>
      <member refid="class_monomer_1a163885a7c7da282e9487425392a8f570" prot="private" virt="non-virtual"><scope>Monomer</scope><name>monomer_counter</name></member>
      <member refid="class_universe_1a3d55ba29f95a9793b69c01f7942eca9f" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>monomer_list</name></member>
      <member refid="class_monomer_1acc09d7e702f91a7b14ff58863eb5e4a6" prot="private" virt="non-virtual"><scope>Monomer</scope><name>monomer_type</name></member>
      <member refid="class_monomer_1ad80cf80e7bc9b29d63e9bb15a364abed" prot="private" virt="non-virtual"><scope>Monomer</scope><name>object_disabled</name></member>
      <member refid="class_universe_1ab64777e25c83216e7a91d2761a10463c" prot="public" virt="non-virtual"><scope>Monomer</scope><name>object_energy</name></member>
      <member refid="class_universe_1a17c8d799331a5b32837f285c12cbe858" prot="public" virt="non-virtual"><scope>Monomer</scope><name>object_energy_threshold</name></member>
      <member refid="class_monomer_1ac79d26bc31d0bff553773e38f5f7b9e5" prot="private" virt="non-virtual"><scope>Monomer</scope><name>object_initialised</name></member>
      <member refid="class_universe_1a64f4f4025c9be1d84492c766a002a6d4" prot="public" virt="non-virtual"><scope>Monomer</scope><name>object_size</name></member>
      <member refid="class_universe_1a9dc8abd2f8f84318722184f38e1b8cc7" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>point_list</name></member>
      <member refid="class_monomer_1a5b2375df1e19abdf6045c475d2ac23ca" prot="public" virt="virtual"><scope>Monomer</scope><name>PollElementaryForce</name></member>
      <member refid="class_universe_1a4d898757f2d67ca5ab5d504388d6199a" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>polymer_list</name></member>
      <member refid="class_monomer_1ac2b6be09ea5da5953ced21c9d7d5e3d1" prot="private" virt="non-virtual"><scope>Monomer</scope><name>previous_event_time</name></member>
      <member refid="class_monomer_1a16a692cf11117581c9b4ebbed3c04c9c" prot="public" virt="non-virtual"><scope>Monomer</scope><name>ResetParameters</name></member>
      <member refid="class_universe_1aeda74e3902c0e56c0c09779854045cde" prot="public" virt="non-virtual"><scope>Monomer</scope><name>ReturnEnergy</name></member>
      <member refid="class_monomer_1a1ee35c888318e590082e6cd1772bb430" prot="public" virt="virtual"><scope>Monomer</scope><name>SetCharge</name></member>
      <member refid="class_monomer_1a6f0dfa4382b3d4fa19b7ee0fb8fe7a55" prot="public" virt="virtual"><scope>Monomer</scope><name>SetCounter</name></member>
      <member refid="class_monomer_1a50e41be601b31450a97bfd15950cfb3d" prot="public" virt="virtual"><scope>Monomer</scope><name>SetElectromagnetic</name></member>
      <member refid="class_monomer_1aa034728b74053ed3df452ddc8f1b46e8" prot="public" virt="virtual"><scope>Monomer</scope><name>SetElectromagneticElectroweak</name></member>
      <member refid="class_universe_1a868250e67d0fcb2483aa8bdd73c40a02" prot="public" virt="non-virtual"><scope>Monomer</scope><name>SetEnergy</name></member>
      <member refid="class_monomer_1ab38d44b27a46d5630aeb5e889f927c09" prot="public" virt="virtual"><scope>Monomer</scope><name>SetGravitation</name></member>
      <member refid="class_universe_1ac3443dd59b61ae3110f07f681f63ed0a" prot="public" virt="non-virtual"><scope>Monomer</scope><name>SetLifespan</name></member>
      <member refid="class_universe_1a2274a54fbdc7504c897e4272162bf17a" prot="public" virt="non-virtual"><scope>Monomer</scope><name>SetObjectType</name></member>
      <member refid="class_monomer_1ad24a86a4c1ac62d1b0ce8040d6b08adf" prot="public" virt="virtual"><scope>Monomer</scope><name>SetSpin</name></member>
      <member refid="class_monomer_1a10b864f6bcad43f11a2316dbbe4c4742" prot="public" virt="virtual"><scope>Monomer</scope><name>SetStrong</name></member>
      <member refid="class_monomer_1ad9df06c1a8264bfdb514ef3ba04ef4c7" prot="public" virt="virtual"><scope>Monomer</scope><name>SetStrongFundamental</name></member>
      <member refid="class_monomer_1ae6ca57913da27fa749d33d1c4fed27ca" prot="public" virt="virtual"><scope>Monomer</scope><name>SetStrongResidual</name></member>
      <member refid="class_monomer_1ad4fe1db33f493575281e1a2fb35004ca" prot="public" virt="virtual"><scope>Monomer</scope><name>SetWeak</name></member>
      <member refid="class_monomer_1ab887d7cfd2ecb557efb3ace59852019c" prot="public" virt="virtual"><scope>Monomer</scope><name>SetWeakElectroweak</name></member>
      <member refid="class_monomer_1ad792aeb859c72edbb17414bf00b8fd12" prot="protected" virt="non-virtual"><scope>Monomer</scope><name>solid_list</name></member>
      <member refid="class_universe_1aa220508c4cc12b02c6fe494622ebb58d" prot="public" virt="non-virtual"><scope>Monomer</scope><name>TheCalculatedTimeNow</name></member>
      <member refid="class_universe_1ae54d34c5d695917e074b8e07e8820bdb" prot="public" virt="non-virtual"><scope>Monomer</scope><name>TheTimeNow</name></member>
      <member refid="class_universe_1a3ce4365c727cb6eb5b650146a4188b9b" prot="public" virt="non-virtual"><scope>Monomer</scope><name>time_dimension_pointer</name></member>
      <member refid="class_monomer_1a689f4abe0f31c0a7d32221242b3bf944" prot="private" virt="non-virtual"><scope>Monomer</scope><name>time_object_created</name></member>
      <member refid="class_universe_1a4d137a146dd3c2514dfb692dfbab6984" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Universe</name></member>
      <member refid="class_universe_1a1210ce56049f1fc67f53aeda223bb82b" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Universe</name></member>
      <member refid="class_universe_1a03af7455263d3028b55ca5dc93ebb6ba" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Universe</name></member>
      <member refid="class_monomer_1a48dc2ffb5da8cf3dc3f4f56bba674de6" prot="public" virt="non-virtual"><scope>Monomer</scope><name>Update</name></member>
      <member refid="class_universe_1a0d79e614e1af951c06b78cb5768f9c8e" prot="public" virt="non-virtual"><scope>Monomer</scope><name>UpdateCycle</name></member>
      <member refid="class_universe_1a63e878aaf03f1800b255e9a089a72a8b" prot="public" virt="non-virtual"><scope>Monomer</scope><name>UseEnergy</name></member>
      <member refid="class_monomer_1a802bf239fc55d16783736393edbd6899" prot="public" virt="virtual"><scope>Monomer</scope><name>~Monomer</name></member>
      <member refid="class_universe_1ad4d90f6f2727992762c6b409d3d3d228" prot="public" virt="virtual"><scope>Monomer</scope><name>~Universe</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
