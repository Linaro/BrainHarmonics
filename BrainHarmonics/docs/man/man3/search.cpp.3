.TH "BrainHarmonics/search.cpp" 3 "Mon Apr 20 2020" "Version 0.1" "BrainHarmonics" \" -*- nroff -*-
.ad l
.nh
.SH NAME
BrainHarmonics/search.cpp
.SH SYNOPSIS
.br
.PP
\fC#include <iostream>\fP
.br
\fC#include <iomanip>\fP
.br
\fC#include <unordered_map>\fP
.br
\fC#include <unordered_set>\fP
.br
\fC#include <array>\fP
.br
\fC#include <vector>\fP
.br
\fC#include <utility>\fP
.br
\fC#include <queue>\fP
.br
\fC#include <tuple>\fP
.br
\fC#include <algorithm>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBGraph< L >\fP"
.br
.ti -1c
.RI "struct \fBstd::hash< tuple< int, int > >\fP"
.br
.ti -1c
.RI "struct \fBSquareGrid\fP"
.br
.ti -1c
.RI "struct \fBGridWithWeights\fP"
.br
.ti -1c
.RI "struct \fBPriorityQueue< T, Number >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBstd\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::basic_iostream< char >::basic_ostream & \fBoperator<<\fP (std::basic_iostream< char >::basic_ostream &out, tuple< int, int > loc)"
.br
.ti -1c
.RI "template<class Graph > \fBvoid\fP \fBdraw_grid\fP (const \fBGraph\fP &graph, int field_width, unordered_map< typename \fBGraph::Location\fP, int > *distances=nullptr, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > *point_to=nullptr, vector< typename \fBGraph::Location\fP > *\fBpath\fP=nullptr)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadd_rect\fP (\fBSquareGrid\fP &grid, int \fBx1\fP, int \fBy1\fP, int \fBx2\fP, int \fBy2\fP)"
.br
.ti -1c
.RI "\fBSquareGrid\fP \fBmake_diagram1\fP ()"
.br
.ti -1c
.RI "\fBGridWithWeights\fP \fBmake_diagram4\fP ()"
.br
.ti -1c
.RI "template<typename Graph > \fBvoid\fP \fBdijkstra_search\fP (\fBGraph\fP graph, typename \fBGraph::Location\fP \fBstart\fP, typename \fBGraph::Location\fP goal, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > &came_from, unordered_map< typename \fBGraph::Location\fP, int > &cost_so_far)"
.br
.ti -1c
.RI "template<typename Location > vector< Location > \fBreconstruct_path\fP (Location \fBstart\fP, Location goal, unordered_map< Location, Location > &came_from)"
.br
.ti -1c
.RI "int \fBheuristic\fP (\fBSquareGrid::Location\fP \fBa\fP, \fBSquareGrid::Location\fP \fBb\fP)"
.br
.ti -1c
.RI "template<typename Graph > \fBvoid\fP \fBa_star_search\fP (\fBGraph\fP graph, typename \fBGraph::Location\fP \fBstart\fP, typename \fBGraph::Location\fP goal, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > &came_from, unordered_map< typename \fBGraph::Location\fP, int > &cost_so_far)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBGraph\fP< char > \fBexample_graph\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "template<typename Graph > \fBvoid\fP a_star_search (\fBGraph\fP graph, typename \fBGraph::Location\fP start, typename \fBGraph::Location\fP goal, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > & came_from, unordered_map< typename \fBGraph::Location\fP, int > & cost_so_far)"

.PP
Definition at line 273 of file search\&.cpp\&.
.SS "\fBvoid\fP add_rect (\fBSquareGrid\fP & grid, int x1, int y1, int x2, int y2)"

.PP
Definition at line 154 of file search\&.cpp\&.
.SS "template<typename Graph > \fBvoid\fP dijkstra_search (\fBGraph\fP graph, typename \fBGraph::Location\fP start, typename \fBGraph::Location\fP goal, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > & came_from, unordered_map< typename \fBGraph::Location\fP, int > & cost_so_far)"

.PP
Definition at line 216 of file search\&.cpp\&.
.SS "template<class Graph > \fBvoid\fP draw_grid (const \fBGraph\fP & graph, int field_width, unordered_map< typename \fBGraph::Location\fP, int > * distances = \fCnullptr\fP, unordered_map< typename \fBGraph::Location\fP, typename \fBGraph::Location\fP > * point_to = \fCnullptr\fP, vector< typename \fBGraph::Location\fP > * path = \fCnullptr\fP)"

.PP
Definition at line 79 of file search\&.cpp\&.
.SS "int heuristic (\fBSquareGrid::Location\fP a, \fBSquareGrid::Location\fP b)\fC [inline]\fP"

.PP
Definition at line 264 of file search\&.cpp\&.
.SS "\fBSquareGrid\fP make_diagram1 ()"

.PP
Definition at line 162 of file search\&.cpp\&.
.SS "\fBGridWithWeights\fP make_diagram4 ()"

.PP
Definition at line 179 of file search\&.cpp\&.
.SS "std::basic_iostream<char>::basic_ostream& operator<< (std::basic_iostream< char >::basic_ostream & out, tuple< int, int > loc)"

.PP
Definition at line 71 of file search\&.cpp\&.
.SS "template<typename Location > vector<Location> reconstruct_path (Location start, Location goal, unordered_map< Location, Location > & came_from)"

.PP
Definition at line 249 of file search\&.cpp\&.
.SH "Variable Documentation"
.PP 
.SS "\fBGraph\fP<char> example_graph"
\fBInitial value:\fP
.PP
.nf
{{
    {'A', {'B'}},
    {'B', {'A', 'C', 'D'}},
    {'C', {'A'}},
    {'D', {'E', 'A'}},
    {'E', {'B'}}
  }}
.fi
.PP
Definition at line 49 of file search\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for BrainHarmonics from the source code\&.
