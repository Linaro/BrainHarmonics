.TH "waveback.c" 3 "Mon Apr 20 2020" "Version 0.1" "BrainHarmonics" \" -*- nroff -*-
.ad l
.nh
.SH NAME
waveback.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <math\&.h>\fP
.br
\fC#include <glad/glad\&.h>\fP
.br
\fC#include <GLFW/glfw3\&.h>\fP
.br
\fC#include <linmath\&.h>\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBVertex\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX_DELTA_T\fP   0\&.01"
.br
.ti -1c
.RI "#define \fBANIMATION_SPEED\fP   10\&.0"
.br
.ti -1c
.RI "#define \fBGRIDW\fP   50"
.br
.ti -1c
.RI "#define \fBGRIDH\fP   50"
.br
.ti -1c
.RI "#define \fBVERTEXNUM\fP   (\fBGRIDW\fP*\fBGRIDH\fP)"
.br
.ti -1c
.RI "#define \fBQUADW\fP   (\fBGRIDW\fP \- 1)"
.br
.ti -1c
.RI "#define \fBQUADH\fP   (\fBGRIDH\fP \- 1)"
.br
.ti -1c
.RI "#define \fBQUADNUM\fP   (\fBQUADW\fP*\fBQUADH\fP)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBinit_vertices\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBinit_grid\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBdraw_scene\fP (GLFWwindow *\fBwindow\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBinit_opengl\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBadjust_grid\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcalc_grid\fP (\fBvoid\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBkey_callback\fP (GLFWwindow *\fBwindow\fP, int \fBkey\fP, int scancode, int action, int mods)"
.br
.ti -1c
.RI "\fBvoid\fP \fBmouse_button_callback\fP (GLFWwindow *\fBwindow\fP, int button, int action, int mods)"
.br
.ti -1c
.RI "\fBvoid\fP \fBcursor_position_callback\fP (GLFWwindow *\fBwindow\fP, double \fBx\fP, double \fBy\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBscroll_callback\fP (GLFWwindow *\fBwindow\fP, double \fBx\fP, double \fBy\fP)"
.br
.ti -1c
.RI "\fBvoid\fP \fBframebuffer_size_callback\fP (GLFWwindow *\fBwindow\fP, int \fBwidth\fP, int \fBheight\fP)"
.br
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBGLfloat\fP \fBalpha\fP = 210\&.\fBf\fP"
.br
.ti -1c
.RI "\fBGLfloat\fP \fBbeta\fP = \-70\&.\fBf\fP"
.br
.ti -1c
.RI "\fBGLfloat\fP \fBzoom\fP = 2\&.\fBf\fP"
.br
.ti -1c
.RI "double \fBcursorX\fP"
.br
.ti -1c
.RI "double \fBcursorY\fP"
.br
.ti -1c
.RI "\fBGLuint\fP \fBquad\fP [4 *\fBQUADNUM\fP]"
.br
.ti -1c
.RI "struct \fBVertex\fP \fBvertex\fP [\fBVERTEXNUM\fP]"
.br
.ti -1c
.RI "double \fBdt\fP"
.br
.ti -1c
.RI "double \fBp\fP [\fBGRIDW\fP][\fBGRIDH\fP]"
.br
.ti -1c
.RI "double \fBvx\fP [\fBGRIDW\fP][\fBGRIDH\fP]"
.br
.ti -1c
.RI "double \fBvy\fP [\fBGRIDW\fP][\fBGRIDH\fP]"
.br
.ti -1c
.RI "double \fBax\fP [\fBGRIDW\fP][\fBGRIDH\fP]"
.br
.ti -1c
.RI "double \fBay\fP [\fBGRIDW\fP][\fBGRIDH\fP]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define ANIMATION_SPEED   10\&.0"

.PP
Definition at line 29 of file waveback\&.c\&.
.SS "#define GRIDH   50"

.PP
Definition at line 44 of file waveback\&.c\&.
.SS "#define GRIDW   50"

.PP
Definition at line 43 of file waveback\&.c\&.
.SS "#define MAX_DELTA_T   0\&.01"

.PP
Definition at line 26 of file waveback\&.c\&.
.SS "#define QUADH   (\fBGRIDH\fP \- 1)"

.PP
Definition at line 48 of file waveback\&.c\&.
.SS "#define QUADNUM   (\fBQUADW\fP*\fBQUADH\fP)"

.PP
Definition at line 49 of file waveback\&.c\&.
.SS "#define QUADW   (\fBGRIDW\fP \- 1)"

.PP
Definition at line 47 of file waveback\&.c\&.
.SS "#define VERTEXNUM   (\fBGRIDW\fP*\fBGRIDH\fP)"

.PP
Definition at line 45 of file waveback\&.c\&.
.SH "Function Documentation"
.PP 
.SS "\fBvoid\fP adjust_grid (\fBvoid\fP)"

.PP
Definition at line 197 of file waveback\&.c\&.
.SS "\fBvoid\fP calc_grid (\fBvoid\fP)"

.PP
Definition at line 217 of file waveback\&.c\&.
.SS "\fBvoid\fP cursor_position_callback (GLFWwindow * window, double x, double y)"

.PP
Definition at line 336 of file waveback\&.c\&.
.SS "\fBvoid\fP draw_scene (GLFWwindow * window)"

.PP
Definition at line 148 of file waveback\&.c\&.
.SS "\fBvoid\fP framebuffer_size_callback (GLFWwindow * window, int width, int height)"

.PP
Definition at line 365 of file waveback\&.c\&.
.SS "\fBvoid\fP init_grid (\fBvoid\fP)"

.PP
Definition at line 117 of file waveback\&.c\&.
.SS "\fBvoid\fP init_opengl (\fBvoid\fP)"

.PP
Definition at line 173 of file waveback\&.c\&.
.SS "\fBvoid\fP init_vertices (\fBvoid\fP)"

.PP
Definition at line 69 of file waveback\&.c\&.
.SS "\fBvoid\fP key_callback (GLFWwindow * window, int key, int scancode, int action, int mods)"

.PP
Definition at line 274 of file waveback\&.c\&.
.SS "int main (int argc, char * argv[])"

.PP
Definition at line 390 of file waveback\&.c\&.
.SS "\fBvoid\fP mouse_button_callback (GLFWwindow * window, int button, int action, int mods)"

.PP
Definition at line 317 of file waveback\&.c\&.
.SS "\fBvoid\fP scroll_callback (GLFWwindow * window, double x, double y)"

.PP
Definition at line 353 of file waveback\&.c\&.
.SH "Variable Documentation"
.PP 
.SS "\fBGLfloat\fP \fBalpha\fP = 210\&.\fBf\fP"

.PP
Definition at line 31 of file waveback\&.c\&.
.SS "double ax[\fBGRIDW\fP][\fBGRIDH\fP]"

.PP
Definition at line 111 of file waveback\&.c\&.
.SS "double ay[\fBGRIDW\fP][\fBGRIDH\fP]"

.PP
Definition at line 111 of file waveback\&.c\&.
.SS "\fBGLfloat\fP beta = \-70\&.\fBf\fP"

.PP
Definition at line 31 of file waveback\&.c\&.
.SS "double cursorX"

.PP
Definition at line 34 of file waveback\&.c\&.
.SS "double cursorY"

.PP
Definition at line 35 of file waveback\&.c\&.
.SS "double dt"

.PP
Definition at line 108 of file waveback\&.c\&.
.SS "double \fBp\fP[\fBGRIDW\fP][\fBGRIDH\fP]"

.PP
Definition at line 109 of file waveback\&.c\&.
.SS "\fBGLuint\fP quad[4 *\fBQUADNUM\fP]"

.PP
Definition at line 51 of file waveback\&.c\&.
.SS "struct \fBVertex\fP vertex[\fBVERTEXNUM\fP]"

.PP
Definition at line 52 of file waveback\&.c\&.
.SS "double vx[\fBGRIDW\fP][\fBGRIDH\fP]"

.PP
Definition at line 110 of file waveback\&.c\&.
.SS "double vy[\fBGRIDW\fP][\fBGRIDH\fP]"

.PP
Definition at line 110 of file waveback\&.c\&.
.SS "\fBGLfloat\fP zoom = 2\&.\fBf\fP"

.PP
Definition at line 32 of file waveback\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for BrainHarmonics from the source code\&.
